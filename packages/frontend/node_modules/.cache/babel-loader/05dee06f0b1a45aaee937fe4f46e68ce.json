{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { Amplify, ConsoleLogger as Logger, Hub } from '@aws-amplify/core';\nimport { immerable, produce, setAutoFreeze } from 'immer';\nimport { v4 as uuid4 } from 'uuid';\nimport Observable from 'zen-observable-ts';\nimport { isPredicatesAll, ModelPredicateCreator } from '../predicates';\nimport { ExclusiveStorage as Storage } from '../storage/storage';\nimport { ControlMessage, SyncEngine } from '../sync';\nimport { GraphQLScalarType, isGraphQLScalarType } from '../types';\nimport { DATASTORE, establishRelation, exhaustiveCheck, isModelConstructor, monotonicUlidFactory, STORAGE, SYNC, USER } from '../util';\nsetAutoFreeze(true);\nvar logger = new Logger('DataStore');\nvar ulid = monotonicUlidFactory(Date.now());\nvar SETTING_SCHEMA_VERSION = 'schemaVersion';\nvar storage;\nvar schema;\nvar modelNamespaceMap = new WeakMap();\n\nvar getModelDefinition = function (modelConstructor) {\n  var namespace = modelNamespaceMap.get(modelConstructor);\n  return schema.namespaces[namespace].models[modelConstructor.name];\n};\n\nvar isValidModelConstructor = function (obj) {\n  return isModelConstructor(obj) && modelNamespaceMap.has(obj);\n};\n\nvar namespaceResolver = function (modelConstructor) {\n  return modelNamespaceMap.get(modelConstructor);\n};\n\nvar dataStoreClasses;\nvar userClasses;\nvar syncClasses;\nvar storageClasses;\n\nvar initSchema = function (userSchema) {\n  var _a;\n\n  if (schema !== undefined) {\n    throw new Error('The schema has already been initialized');\n  }\n\n  logger.log('validating schema', {\n    schema: userSchema\n  });\n\n  var internalUserNamespace = __assign({\n    name: USER\n  }, userSchema);\n\n  logger.log('DataStore', 'Init models');\n  userClasses = createTypeClasses(internalUserNamespace);\n  logger.log('DataStore', 'Models initialized');\n  var dataStoreNamespace = getNamespace();\n  var storageNamespace = Storage.getNamespace();\n  var syncNamespace = SyncEngine.getNamespace();\n  dataStoreClasses = createTypeClasses(dataStoreNamespace);\n  storageClasses = createTypeClasses(storageNamespace);\n  syncClasses = createTypeClasses(syncNamespace);\n  schema = {\n    namespaces: (_a = {}, _a[dataStoreNamespace.name] = dataStoreNamespace, _a[internalUserNamespace.name] = internalUserNamespace, _a[storageNamespace.name] = storageNamespace, _a[syncNamespace.name] = syncNamespace, _a),\n    version: userSchema.version\n  };\n  Object.keys(schema.namespaces).forEach(function (namespace) {\n    var e_1, _a;\n\n    schema.namespaces[namespace].relationships = establishRelation(schema.namespaces[namespace]);\n    var modelAssociations = new Map();\n    Object.values(schema.namespaces[namespace].models).forEach(function (model) {\n      var connectedModels = [];\n      Object.values(model.fields).filter(function (field) {\n        return field.association && field.association.connectionType === 'BELONGS_TO' && field.type.model !== model.name;\n      }).forEach(function (field) {\n        return connectedModels.push(field.type.model);\n      });\n      modelAssociations.set(model.name, connectedModels);\n    });\n    var result = new Map();\n    var count = 1000;\n\n    while (true && count > 0) {\n      if (modelAssociations.size === 0) {\n        break;\n      }\n\n      count--;\n\n      if (count === 0) {\n        throw new Error('Models are not topologically sortable. Please verify your schema.');\n      }\n\n      try {\n        for (var _b = (e_1 = void 0, __values(Array.from(modelAssociations.keys()))), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var modelName = _c.value;\n          var parents = modelAssociations.get(modelName);\n\n          if (parents.every(function (x) {\n            return result.has(x);\n          })) {\n            result.set(modelName, parents);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      Array.from(result.keys()).forEach(function (x) {\n        return modelAssociations.delete(x);\n      });\n    }\n\n    schema.namespaces[namespace].modelTopologicalOrdering = result;\n  });\n  return userClasses;\n};\n\nvar createTypeClasses = function (namespace) {\n  var classes = {};\n  Object.entries(namespace.models).forEach(function (_a) {\n    var _b = __read(_a, 2),\n        modelName = _b[0],\n        modelDefinition = _b[1];\n\n    var clazz = createModelClass(modelDefinition);\n    classes[modelName] = clazz;\n    modelNamespaceMap.set(clazz, namespace.name);\n  });\n  Object.entries(namespace.nonModels || {}).forEach(function (_a) {\n    var _b = __read(_a, 2),\n        typeName = _b[0],\n        typeDefinition = _b[1];\n\n    var clazz = createNonModelClass(typeDefinition);\n    classes[typeName] = clazz;\n  });\n  return classes;\n};\n\nvar instancesMetadata = new WeakSet();\n\nfunction modelInstanceCreator(modelConstructor, init) {\n  instancesMetadata.add(init);\n  return new modelConstructor(init);\n}\n\nvar validateModelFields = function (modelDefinition) {\n  return function (k, v) {\n    var fieldDefinition = modelDefinition.fields[k];\n\n    if (fieldDefinition !== undefined) {\n      var type = fieldDefinition.type,\n          isRequired = fieldDefinition.isRequired,\n          name_1 = fieldDefinition.name,\n          isArray = fieldDefinition.isArray;\n\n      if (isRequired && (v === null || v === undefined)) {\n        throw new Error(\"Field \" + name_1 + \" is required\");\n      }\n\n      if (isGraphQLScalarType(type)) {\n        var jsType_1 = GraphQLScalarType.getJSType(type);\n\n        if (isArray) {\n          if (!Array.isArray(v)) {\n            throw new Error(\"Field \" + name_1 + \" should be of type \" + jsType_1 + \"[], \" + typeof v + \" received. \" + v);\n          }\n\n          if (v.some(function (e) {\n            return typeof e !== jsType_1;\n          })) {\n            var elemTypes = v.map(function (e) {\n              return typeof e;\n            }).join(',');\n            throw new Error(\"All elements in the \" + name_1 + \" array should be of type \" + jsType_1 + \", [\" + elemTypes + \"] received. \" + v);\n          }\n        } else if (typeof v !== jsType_1 && v !== null) {\n          throw new Error(\"Field \" + name_1 + \" should be of type \" + jsType_1 + \", \" + typeof v + \" received. \" + v);\n        }\n      }\n    }\n  };\n};\n\nvar initializeInstance = function (init, modelDefinition, draft) {\n  var modelValidator = validateModelFields(modelDefinition);\n  Object.entries(init).forEach(function (_a) {\n    var _b = __read(_a, 2),\n        k = _b[0],\n        v = _b[1];\n\n    modelValidator(k, v);\n    draft[k] = v;\n  });\n};\n\nvar createModelClass = function (modelDefinition) {\n  var clazz =\n  /** @class */\n  function () {\n    function Model(init) {\n      var instance = produce(this, function (draft) {\n        initializeInstance(init, modelDefinition, draft);\n        var modelInstanceMetadata = instancesMetadata.has(init) ? init : {};\n        var _id = modelInstanceMetadata.id,\n            _version = modelInstanceMetadata._version,\n            _lastChangedAt = modelInstanceMetadata._lastChangedAt,\n            _deleted = modelInstanceMetadata._deleted;\n        var id = // instancesIds is set by modelInstanceCreator, it is accessible only internally\n        _id !== null && _id !== undefined ? _id : modelDefinition.syncable ? uuid4() : ulid();\n        draft.id = id;\n\n        if (modelDefinition.syncable) {\n          draft._version = _version;\n          draft._lastChangedAt = _lastChangedAt;\n          draft._deleted = _deleted;\n        }\n      });\n      return instance;\n    }\n\n    Model.copyOf = function (source, fn) {\n      var modelConstructor = Object.getPrototypeOf(source || {}).constructor;\n\n      if (!isValidModelConstructor(modelConstructor)) {\n        var msg = 'The source object is not a valid model';\n        logger.error(msg, {\n          source: source\n        });\n        throw new Error(msg);\n      }\n\n      return produce(source, function (draft) {\n        fn(draft);\n        draft.id = source.id;\n        var modelValidator = validateModelFields(modelDefinition);\n        Object.entries(draft).forEach(function (_a) {\n          var _b = __read(_a, 2),\n              k = _b[0],\n              v = _b[1];\n\n          modelValidator(k, v);\n        });\n      });\n    };\n\n    return Model;\n  }();\n\n  clazz[immerable] = true;\n  Object.defineProperty(clazz, 'name', {\n    value: modelDefinition.name\n  });\n  return clazz;\n};\n\nvar createNonModelClass = function (typeDefinition) {\n  var clazz =\n  /** @class */\n  function () {\n    function Model(init) {\n      var instance = produce(this, function (draft) {\n        initializeInstance(init, typeDefinition, draft);\n      });\n      return instance;\n    }\n\n    return Model;\n  }();\n\n  clazz[immerable] = true;\n  Object.defineProperty(clazz, 'name', {\n    value: typeDefinition.name\n  });\n  return clazz;\n};\n\nvar save = function (model, condition) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var modelConstructor, msg, modelDefinition, producedCondition, _a, savedModel;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , start()];\n\n        case 1:\n          _b.sent();\n\n          modelConstructor = model ? model.constructor : undefined;\n\n          if (!isValidModelConstructor(modelConstructor)) {\n            msg = 'Object is not an instance of a valid model';\n            logger.error(msg, {\n              model: model\n            });\n            throw new Error(msg);\n          }\n\n          modelDefinition = getModelDefinition(modelConstructor);\n          producedCondition = ModelPredicateCreator.createFromExisting(modelDefinition, condition);\n          return [4\n          /*yield*/\n          , storage.runExclusive(function (s) {\n            return __awaiter(void 0, void 0, void 0, function () {\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    return [4\n                    /*yield*/\n                    , s.save(model, producedCondition)];\n\n                  case 1:\n                    _a.sent();\n\n                    return [2\n                    /*return*/\n                    , s.query(modelConstructor, ModelPredicateCreator.createForId(modelDefinition, model.id))];\n                }\n              });\n            });\n          })];\n\n        case 2:\n          _a = __read.apply(void 0, [_b.sent(), 1]), savedModel = _a[0];\n          return [2\n          /*return*/\n          , savedModel];\n      }\n    });\n  });\n};\n\nvar remove = function (modelOrConstructor, idOrCriteria) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var condition, msg, modelConstructor, msg, msg, _a, deleted, model, modelConstructor, msg, modelDefinition, idPredicate, msg, _b, _c, deleted;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , start()];\n\n        case 1:\n          _d.sent();\n\n          if (!modelOrConstructor) {\n            msg = 'Model or Model Constructor required';\n            logger.error(msg, {\n              modelOrConstructor: modelOrConstructor\n            });\n            throw new Error(msg);\n          }\n\n          if (!isValidModelConstructor(modelOrConstructor)) return [3\n          /*break*/\n          , 3];\n          modelConstructor = modelOrConstructor;\n\n          if (!idOrCriteria) {\n            msg = 'Id to delete or criteria required. Do you want to delete all? Pass Predicates.ALL';\n            logger.error(msg, {\n              idOrCriteria: idOrCriteria\n            });\n            throw new Error(msg);\n          }\n\n          if (typeof idOrCriteria === 'string') {\n            condition = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n          } else {\n            condition = ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor),\n            /**\n             * idOrCriteria is always a ProducerModelPredicate<T>, never a symbol.\n             * The symbol is used only for typing purposes. e.g. see Predicates.ALL\n             */\n            idOrCriteria);\n\n            if (!condition || !ModelPredicateCreator.isValidPredicate(condition)) {\n              msg = 'Criteria required. Do you want to delete all? Pass Predicates.ALL';\n              logger.error(msg, {\n                condition: condition\n              });\n              throw new Error(msg);\n            }\n          }\n\n          return [4\n          /*yield*/\n          , storage.delete(modelConstructor, condition)];\n\n        case 2:\n          _a = __read.apply(void 0, [_d.sent(), 1]), deleted = _a[0];\n          return [2\n          /*return*/\n          , deleted];\n\n        case 3:\n          model = modelOrConstructor;\n          modelConstructor = Object.getPrototypeOf(model || {}).constructor;\n\n          if (!isValidModelConstructor(modelConstructor)) {\n            msg = 'Object is not an instance of a valid model';\n            logger.error(msg, {\n              model: model\n            });\n            throw new Error(msg);\n          }\n\n          modelDefinition = getModelDefinition(modelConstructor);\n          idPredicate = ModelPredicateCreator.createForId(modelDefinition, model.id);\n\n          if (idOrCriteria) {\n            if (typeof idOrCriteria !== 'function') {\n              msg = 'Invalid criteria';\n              logger.error(msg, {\n                idOrCriteria: idOrCriteria\n              });\n              throw new Error(msg);\n            }\n\n            condition = idOrCriteria(idPredicate);\n          } else {\n            condition = idPredicate;\n          }\n\n          return [4\n          /*yield*/\n          , storage.delete(model, condition)];\n\n        case 4:\n          _b = __read.apply(void 0, [_d.sent(), 1]), _c = __read(_b[0], 1), deleted = _c[0];\n          return [2\n          /*return*/\n          , deleted];\n      }\n    });\n  });\n};\n\nvar observe = function (modelOrConstructor, idOrCriteria) {\n  var predicate;\n  var modelConstructor = modelOrConstructor && isValidModelConstructor(modelOrConstructor) ? modelOrConstructor : undefined;\n\n  if (modelOrConstructor && modelConstructor === undefined) {\n    var model = modelOrConstructor;\n    var modelConstructor_1 = model && Object.getPrototypeOf(model).constructor;\n\n    if (isValidModelConstructor(modelConstructor_1)) {\n      if (idOrCriteria) {\n        logger.warn('idOrCriteria is ignored when using a model instance', {\n          model: model,\n          idOrCriteria: idOrCriteria\n        });\n      }\n\n      return observe(modelConstructor_1, model.id);\n    } else {\n      var msg = 'The model is not an instance of a PersistentModelConstructor';\n      logger.error(msg, {\n        model: model\n      });\n      throw new Error(msg);\n    }\n  }\n\n  if (idOrCriteria !== undefined && modelConstructor === undefined) {\n    var msg = 'Cannot provide criteria without a modelConstructor';\n    logger.error(msg, idOrCriteria);\n    throw new Error(msg);\n  }\n\n  if (modelConstructor && !isValidModelConstructor(modelConstructor)) {\n    var msg = 'Constructor is not for a valid model';\n    logger.error(msg, {\n      modelConstructor: modelConstructor\n    });\n    throw new Error(msg);\n  }\n\n  if (typeof idOrCriteria === 'string') {\n    predicate = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n  } else {\n    predicate = modelConstructor && ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor), idOrCriteria);\n  }\n\n  return new Observable(function (observer) {\n    var handle;\n\n    (function () {\n      return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , start()];\n\n            case 1:\n              _a.sent();\n\n              handle = storage.observe(modelConstructor, predicate).filter(function (_a) {\n                var model = _a.model;\n                return namespaceResolver(model) === USER;\n              }).subscribe(observer);\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    })();\n\n    return function () {\n      if (handle) {\n        handle.unsubscribe();\n      }\n    };\n  });\n};\n\nfunction isQueryOne(obj) {\n  return typeof obj === 'string';\n}\n\nvar query = function (modelConstructor, idOrCriteria, pagination) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var msg, modelDefinition, predicate, _a, limit, page, result;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , start()];\n\n        case 1:\n          _b.sent(); //#region Input validation\n\n\n          if (!isValidModelConstructor(modelConstructor)) {\n            msg = 'Constructor is not for a valid model';\n            logger.error(msg, {\n              modelConstructor: modelConstructor\n            });\n            throw new Error(msg);\n          }\n\n          if (typeof idOrCriteria === 'string') {\n            if (pagination !== undefined) {\n              logger.warn('Pagination is ignored when querying by id');\n            }\n          }\n\n          modelDefinition = getModelDefinition(modelConstructor);\n\n          if (isQueryOne(idOrCriteria)) {\n            predicate = ModelPredicateCreator.createForId(modelDefinition, idOrCriteria);\n          } else {\n            if (isPredicatesAll(idOrCriteria)) {\n              // Predicates.ALL means \"all records\", so no predicate (undefined)\n              predicate = undefined;\n            } else {\n              predicate = ModelPredicateCreator.createFromExisting(modelDefinition, idOrCriteria);\n            }\n          }\n\n          _a = pagination || {}, limit = _a.limit, page = _a.page;\n\n          if (page !== undefined && limit === undefined) {\n            throw new Error('Limit is required when requesting a page');\n          }\n\n          if (page !== undefined) {\n            if (typeof page !== 'number') {\n              throw new Error('Page should be a number');\n            }\n\n            if (page < 0) {\n              throw new Error(\"Page can't be negative\");\n            }\n          }\n\n          if (limit !== undefined) {\n            if (typeof limit !== 'number') {\n              throw new Error('Limit should be a number');\n            }\n\n            if (limit < 0) {\n              throw new Error(\"Limit can't be negative\");\n            }\n          } //#endregion\n\n\n          logger.debug('params ready', {\n            modelConstructor: modelConstructor,\n            predicate: ModelPredicateCreator.getPredicates(predicate, false),\n            pagination: pagination\n          });\n          return [4\n          /*yield*/\n          , storage.query(modelConstructor, predicate, pagination)];\n\n        case 2:\n          result = _b.sent();\n          return [2\n          /*return*/\n          , isQueryOne(idOrCriteria) ? result[0] : result];\n      }\n    });\n  });\n};\n\nvar sync;\nvar amplifyConfig = {};\nvar conflictHandler;\nvar errorHandler;\nvar maxRecordsToSync;\nvar syncPageSize;\nvar fullSyncInterval;\n\nfunction configure(config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var configDataStore = config.DataStore,\n      configConflictHandler = config.conflictHandler,\n      configErrorHandler = config.errorHandler,\n      configMaxRecordsToSync = config.maxRecordsToSync,\n      configSyncPageSize = config.syncPageSize,\n      configFullSyncInterval = config.fullSyncInterval,\n      configFromAmplify = __rest(config, [\"DataStore\", \"conflictHandler\", \"errorHandler\", \"maxRecordsToSync\", \"syncPageSize\", \"fullSyncInterval\"]);\n\n  amplifyConfig = __assign(__assign({}, configFromAmplify), amplifyConfig);\n  conflictHandler = setConflictHandler(config);\n  errorHandler = setErrorHandler(config);\n  maxRecordsToSync = configDataStore && configDataStore.maxRecordsToSync || maxRecordsToSync || config.maxRecordsToSync;\n  syncPageSize = configDataStore && configDataStore.syncPageSize || syncPageSize || config.syncPageSize;\n  fullSyncInterval = configDataStore && configDataStore.fullSyncInterval || configFullSyncInterval || config.fullSyncInterval || 24 * 60; // 1 day\n}\n\nfunction defaultConflictHandler(conflictData) {\n  var localModel = conflictData.localModel,\n      modelConstructor = conflictData.modelConstructor,\n      remoteModel = conflictData.remoteModel;\n  var _version = remoteModel._version;\n  return modelInstanceCreator(modelConstructor, __assign(__assign({}, localModel), {\n    _version: _version\n  }));\n}\n\nfunction setConflictHandler(config) {\n  var configDataStore = config.DataStore;\n\n  var conflictHandlerIsDefault = function () {\n    return conflictHandler === defaultConflictHandler;\n  };\n\n  if (configDataStore) {\n    return configDataStore.conflictHandler;\n  }\n\n  if (conflictHandlerIsDefault() && config.conflictHandler) {\n    return config.conflictHandler;\n  }\n\n  return conflictHandler || defaultConflictHandler;\n}\n\nfunction setErrorHandler(config) {\n  var configDataStore = config.DataStore;\n\n  var errorHandlerIsDefault = function () {\n    return errorHandler === defaultErrorHandler;\n  };\n\n  if (configDataStore) {\n    return configDataStore.errorHandler;\n  }\n\n  if (errorHandlerIsDefault() && config.errorHandler) {\n    return config.errorHandler;\n  }\n\n  return errorHandler || defaultErrorHandler;\n}\n\nfunction defaultErrorHandler(error) {\n  logger.warn(error);\n}\n\nfunction getModelConstructorByModelName(namespaceName, modelName) {\n  var result;\n\n  switch (namespaceName) {\n    case DATASTORE:\n      result = dataStoreClasses[modelName];\n      break;\n\n    case USER:\n      result = userClasses[modelName];\n      break;\n\n    case SYNC:\n      result = syncClasses[modelName];\n      break;\n\n    case STORAGE:\n      result = storageClasses[modelName];\n      break;\n\n    default:\n      exhaustiveCheck(namespaceName);\n      break;\n  }\n\n  if (isValidModelConstructor(result)) {\n    return result;\n  } else {\n    var msg = \"Model name is not valid for namespace. modelName: \" + modelName + \", namespace: \" + namespaceName;\n    logger.error(msg);\n    throw new Error(msg);\n  }\n}\n\nfunction checkSchemaVersion(storage, version) {\n  return __awaiter(this, void 0, void 0, function () {\n    var Setting, modelDefinition;\n\n    var _this = this;\n\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          Setting = dataStoreClasses.Setting;\n          modelDefinition = schema.namespaces[DATASTORE].models.Setting;\n          return [4\n          /*yield*/\n          , storage.runExclusive(function (s) {\n            return __awaiter(_this, void 0, void 0, function () {\n              var _a, schemaVersionSetting, storedValue;\n\n              return __generator(this, function (_b) {\n                switch (_b.label) {\n                  case 0:\n                    return [4\n                    /*yield*/\n                    , s.query(Setting, ModelPredicateCreator.createFromExisting(modelDefinition, function (c) {\n                      return c.key('eq', SETTING_SCHEMA_VERSION);\n                    }), {\n                      page: 0,\n                      limit: 1\n                    })];\n\n                  case 1:\n                    _a = __read.apply(void 0, [_b.sent(), 1]), schemaVersionSetting = _a[0];\n                    if (!(schemaVersionSetting !== undefined)) return [3\n                    /*break*/\n                    , 4];\n                    storedValue = JSON.parse(schemaVersionSetting.value);\n                    if (!(storedValue !== version)) return [3\n                    /*break*/\n                    , 3];\n                    return [4\n                    /*yield*/\n                    , s.clear(false)];\n\n                  case 2:\n                    _b.sent();\n\n                    _b.label = 3;\n\n                  case 3:\n                    return [3\n                    /*break*/\n                    , 6];\n\n                  case 4:\n                    return [4\n                    /*yield*/\n                    , s.save(modelInstanceCreator(Setting, {\n                      key: SETTING_SCHEMA_VERSION,\n                      value: JSON.stringify(version)\n                    }))];\n\n                  case 5:\n                    _b.sent();\n\n                    _b.label = 6;\n\n                  case 6:\n                    return [2\n                    /*return*/\n                    ];\n                }\n              });\n            });\n          })];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nvar syncSubscription;\nvar initResolve;\nvar initReject;\nvar initialized;\n\nfunction start() {\n  return __awaiter(this, void 0, void 0, function () {\n    var aws_appsync_graphqlEndpoint, fullSyncIntervalInMilliseconds;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!(initialized === undefined)) return [3\n          /*break*/\n          , 1];\n          logger.debug('Starting DataStore');\n          initialized = new Promise(function (res, rej) {\n            initResolve = res;\n            initReject = rej;\n          });\n          return [3\n          /*break*/\n          , 3];\n\n        case 1:\n          return [4\n          /*yield*/\n          , initialized];\n\n        case 2:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n\n        case 3:\n          storage = new Storage(schema, namespaceResolver, getModelConstructorByModelName, modelInstanceCreator);\n          return [4\n          /*yield*/\n          , storage.init()];\n\n        case 4:\n          _a.sent();\n\n          return [4\n          /*yield*/\n          , checkSchemaVersion(storage, schema.version)];\n\n        case 5:\n          _a.sent();\n\n          aws_appsync_graphqlEndpoint = amplifyConfig.aws_appsync_graphqlEndpoint;\n\n          if (aws_appsync_graphqlEndpoint) {\n            logger.debug('GraphQL endpoint available', aws_appsync_graphqlEndpoint);\n            sync = new SyncEngine(schema, namespaceResolver, syncClasses, userClasses, storage, modelInstanceCreator, maxRecordsToSync, syncPageSize, conflictHandler, errorHandler);\n            fullSyncIntervalInMilliseconds = fullSyncInterval * 1000 * 60;\n            syncSubscription = sync.start({\n              fullSyncInterval: fullSyncIntervalInMilliseconds\n            }).subscribe({\n              next: function (_a) {\n                var type = _a.type,\n                    data = _a.data;\n\n                if (type === ControlMessage.SYNC_ENGINE_STORAGE_SUBSCRIBED) {\n                  initResolve();\n                }\n\n                Hub.dispatch('datastore', {\n                  event: type,\n                  data: data\n                });\n              },\n              error: function (err) {\n                logger.warn('Sync error', err);\n                initReject();\n              }\n            });\n          } else {\n            logger.info(\"Data won't be synchronized. No GraphQL endpoint configured.\", {\n              config: amplifyConfig\n            });\n            initResolve();\n          }\n\n          return [4\n          /*yield*/\n          , initialized];\n\n        case 6:\n          _a.sent();\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nfunction clear() {\n  return __awaiter(this, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (storage === undefined) {\n            return [2\n            /*return*/\n            ];\n          }\n\n          if (syncSubscription && !syncSubscription.closed) {\n            syncSubscription.unsubscribe();\n          }\n\n          return [4\n          /*yield*/\n          , storage.clear()];\n\n        case 1:\n          _a.sent();\n\n          initialized = undefined; // Should re-initialize when start() is called.\n\n          storage = undefined;\n          sync = undefined;\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nfunction getNamespace() {\n  var namespace = {\n    name: DATASTORE,\n    relationships: {},\n    enums: {},\n    nonModels: {},\n    models: {\n      Setting: {\n        name: 'Setting',\n        pluralName: 'Settings',\n        syncable: false,\n        fields: {\n          id: {\n            name: 'id',\n            type: 'ID',\n            isRequired: true,\n            isArray: false\n          },\n          key: {\n            name: 'key',\n            type: 'String',\n            isRequired: true,\n            isArray: false\n          },\n          value: {\n            name: 'value',\n            type: 'String',\n            isRequired: true,\n            isArray: false\n          }\n        }\n      }\n    }\n  };\n  return namespace;\n}\n\nvar DataStore =\n/** @class */\nfunction () {\n  function DataStore() {\n    this.start = start;\n    this.query = query;\n    this.save = save;\n    this.delete = remove;\n    this.observe = observe;\n    this.configure = configure;\n    this.clear = clear;\n    Amplify.register(this);\n  }\n\n  DataStore.prototype.getModuleName = function () {\n    return 'DataStore';\n  };\n\n  return DataStore;\n}();\n\nvar instance = new DataStore();\nexport { initSchema, instance as DataStore };","map":{"version":3,"sources":["../../src/datastore/datastore.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { Amplify, ConsoleLogger as Logger, Hub } from '@aws-amplify/core';\nimport { immerable, produce, setAutoFreeze } from 'immer';\nimport { v4 as uuid4 } from 'uuid';\nimport Observable from 'zen-observable-ts';\nimport { isPredicatesAll, ModelPredicateCreator, } from '../predicates';\nimport { ExclusiveStorage as Storage } from '../storage/storage';\nimport { ControlMessage, SyncEngine } from '../sync';\nimport { GraphQLScalarType, isGraphQLScalarType, } from '../types';\nimport { DATASTORE, establishRelation, exhaustiveCheck, isModelConstructor, monotonicUlidFactory, STORAGE, SYNC, USER, } from '../util';\nsetAutoFreeze(true);\nvar logger = new Logger('DataStore');\nvar ulid = monotonicUlidFactory(Date.now());\nvar SETTING_SCHEMA_VERSION = 'schemaVersion';\nvar storage;\nvar schema;\nvar modelNamespaceMap = new WeakMap();\nvar getModelDefinition = function (modelConstructor) {\n    var namespace = modelNamespaceMap.get(modelConstructor);\n    return schema.namespaces[namespace].models[modelConstructor.name];\n};\nvar isValidModelConstructor = function (obj) {\n    return isModelConstructor(obj) && modelNamespaceMap.has(obj);\n};\nvar namespaceResolver = function (modelConstructor) {\n    return modelNamespaceMap.get(modelConstructor);\n};\nvar dataStoreClasses;\nvar userClasses;\nvar syncClasses;\nvar storageClasses;\nvar initSchema = function (userSchema) {\n    var _a;\n    if (schema !== undefined) {\n        throw new Error('The schema has already been initialized');\n    }\n    logger.log('validating schema', { schema: userSchema });\n    var internalUserNamespace = __assign({ name: USER }, userSchema);\n    logger.log('DataStore', 'Init models');\n    userClasses = createTypeClasses(internalUserNamespace);\n    logger.log('DataStore', 'Models initialized');\n    var dataStoreNamespace = getNamespace();\n    var storageNamespace = Storage.getNamespace();\n    var syncNamespace = SyncEngine.getNamespace();\n    dataStoreClasses = createTypeClasses(dataStoreNamespace);\n    storageClasses = createTypeClasses(storageNamespace);\n    syncClasses = createTypeClasses(syncNamespace);\n    schema = {\n        namespaces: (_a = {},\n            _a[dataStoreNamespace.name] = dataStoreNamespace,\n            _a[internalUserNamespace.name] = internalUserNamespace,\n            _a[storageNamespace.name] = storageNamespace,\n            _a[syncNamespace.name] = syncNamespace,\n            _a),\n        version: userSchema.version,\n    };\n    Object.keys(schema.namespaces).forEach(function (namespace) {\n        var e_1, _a;\n        schema.namespaces[namespace].relationships = establishRelation(schema.namespaces[namespace]);\n        var modelAssociations = new Map();\n        Object.values(schema.namespaces[namespace].models).forEach(function (model) {\n            var connectedModels = [];\n            Object.values(model.fields)\n                .filter(function (field) {\n                return field.association &&\n                    field.association.connectionType === 'BELONGS_TO' &&\n                    field.type.model !== model.name;\n            })\n                .forEach(function (field) {\n                return connectedModels.push(field.type.model);\n            });\n            modelAssociations.set(model.name, connectedModels);\n        });\n        var result = new Map();\n        var count = 1000;\n        while (true && count > 0) {\n            if (modelAssociations.size === 0) {\n                break;\n            }\n            count--;\n            if (count === 0) {\n                throw new Error('Models are not topologically sortable. Please verify your schema.');\n            }\n            try {\n                for (var _b = (e_1 = void 0, __values(Array.from(modelAssociations.keys()))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var modelName = _c.value;\n                    var parents = modelAssociations.get(modelName);\n                    if (parents.every(function (x) { return result.has(x); })) {\n                        result.set(modelName, parents);\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            Array.from(result.keys()).forEach(function (x) { return modelAssociations.delete(x); });\n        }\n        schema.namespaces[namespace].modelTopologicalOrdering = result;\n    });\n    return userClasses;\n};\nvar createTypeClasses = function (namespace) {\n    var classes = {};\n    Object.entries(namespace.models).forEach(function (_a) {\n        var _b = __read(_a, 2), modelName = _b[0], modelDefinition = _b[1];\n        var clazz = createModelClass(modelDefinition);\n        classes[modelName] = clazz;\n        modelNamespaceMap.set(clazz, namespace.name);\n    });\n    Object.entries(namespace.nonModels || {}).forEach(function (_a) {\n        var _b = __read(_a, 2), typeName = _b[0], typeDefinition = _b[1];\n        var clazz = createNonModelClass(typeDefinition);\n        classes[typeName] = clazz;\n    });\n    return classes;\n};\nvar instancesMetadata = new WeakSet();\nfunction modelInstanceCreator(modelConstructor, init) {\n    instancesMetadata.add(init);\n    return new modelConstructor(init);\n}\nvar validateModelFields = function (modelDefinition) { return function (k, v) {\n    var fieldDefinition = modelDefinition.fields[k];\n    if (fieldDefinition !== undefined) {\n        var type = fieldDefinition.type, isRequired = fieldDefinition.isRequired, name_1 = fieldDefinition.name, isArray = fieldDefinition.isArray;\n        if (isRequired && (v === null || v === undefined)) {\n            throw new Error(\"Field \" + name_1 + \" is required\");\n        }\n        if (isGraphQLScalarType(type)) {\n            var jsType_1 = GraphQLScalarType.getJSType(type);\n            if (isArray) {\n                if (!Array.isArray(v)) {\n                    throw new Error(\"Field \" + name_1 + \" should be of type \" + jsType_1 + \"[], \" + typeof v + \" received. \" + v);\n                }\n                if (v.some(function (e) { return typeof e !== jsType_1; })) {\n                    var elemTypes = v.map(function (e) { return typeof e; }).join(',');\n                    throw new Error(\"All elements in the \" + name_1 + \" array should be of type \" + jsType_1 + \", [\" + elemTypes + \"] received. \" + v);\n                }\n            }\n            else if (typeof v !== jsType_1 && v !== null) {\n                throw new Error(\"Field \" + name_1 + \" should be of type \" + jsType_1 + \", \" + typeof v + \" received. \" + v);\n            }\n        }\n    }\n}; };\nvar initializeInstance = function (init, modelDefinition, draft) {\n    var modelValidator = validateModelFields(modelDefinition);\n    Object.entries(init).forEach(function (_a) {\n        var _b = __read(_a, 2), k = _b[0], v = _b[1];\n        modelValidator(k, v);\n        draft[k] = v;\n    });\n};\nvar createModelClass = function (modelDefinition) {\n    var clazz = /** @class */ (function () {\n        function Model(init) {\n            var instance = produce(this, function (draft) {\n                initializeInstance(init, modelDefinition, draft);\n                var modelInstanceMetadata = instancesMetadata.has(init)\n                    ? init\n                    : {};\n                var _id = modelInstanceMetadata.id, _version = modelInstanceMetadata._version, _lastChangedAt = modelInstanceMetadata._lastChangedAt, _deleted = modelInstanceMetadata._deleted;\n                var id = \n                // instancesIds is set by modelInstanceCreator, it is accessible only internally\n                _id !== null && _id !== undefined\n                    ? _id\n                    : modelDefinition.syncable\n                        ? uuid4()\n                        : ulid();\n                draft.id = id;\n                if (modelDefinition.syncable) {\n                    draft._version = _version;\n                    draft._lastChangedAt = _lastChangedAt;\n                    draft._deleted = _deleted;\n                }\n            });\n            return instance;\n        }\n        Model.copyOf = function (source, fn) {\n            var modelConstructor = Object.getPrototypeOf(source || {}).constructor;\n            if (!isValidModelConstructor(modelConstructor)) {\n                var msg = 'The source object is not a valid model';\n                logger.error(msg, { source: source });\n                throw new Error(msg);\n            }\n            return produce(source, function (draft) {\n                fn(draft);\n                draft.id = source.id;\n                var modelValidator = validateModelFields(modelDefinition);\n                Object.entries(draft).forEach(function (_a) {\n                    var _b = __read(_a, 2), k = _b[0], v = _b[1];\n                    modelValidator(k, v);\n                });\n            });\n        };\n        return Model;\n    }());\n    clazz[immerable] = true;\n    Object.defineProperty(clazz, 'name', { value: modelDefinition.name });\n    return clazz;\n};\nvar createNonModelClass = function (typeDefinition) {\n    var clazz = /** @class */ (function () {\n        function Model(init) {\n            var instance = produce(this, function (draft) {\n                initializeInstance(init, typeDefinition, draft);\n            });\n            return instance;\n        }\n        return Model;\n    }());\n    clazz[immerable] = true;\n    Object.defineProperty(clazz, 'name', { value: typeDefinition.name });\n    return clazz;\n};\nvar save = function (model, condition) { return __awaiter(void 0, void 0, void 0, function () {\n    var modelConstructor, msg, modelDefinition, producedCondition, _a, savedModel;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0: return [4 /*yield*/, start()];\n            case 1:\n                _b.sent();\n                modelConstructor = model\n                    ? model.constructor\n                    : undefined;\n                if (!isValidModelConstructor(modelConstructor)) {\n                    msg = 'Object is not an instance of a valid model';\n                    logger.error(msg, { model: model });\n                    throw new Error(msg);\n                }\n                modelDefinition = getModelDefinition(modelConstructor);\n                producedCondition = ModelPredicateCreator.createFromExisting(modelDefinition, condition);\n                return [4 /*yield*/, storage.runExclusive(function (s) { return __awaiter(void 0, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0: return [4 /*yield*/, s.save(model, producedCondition)];\n                                case 1:\n                                    _a.sent();\n                                    return [2 /*return*/, s.query(modelConstructor, ModelPredicateCreator.createForId(modelDefinition, model.id))];\n                            }\n                        });\n                    }); })];\n            case 2:\n                _a = __read.apply(void 0, [_b.sent(), 1]), savedModel = _a[0];\n                return [2 /*return*/, savedModel];\n        }\n    });\n}); };\nvar remove = function (modelOrConstructor, idOrCriteria) { return __awaiter(void 0, void 0, void 0, function () {\n    var condition, msg, modelConstructor, msg, msg, _a, deleted, model, modelConstructor, msg, modelDefinition, idPredicate, msg, _b, _c, deleted;\n    return __generator(this, function (_d) {\n        switch (_d.label) {\n            case 0: return [4 /*yield*/, start()];\n            case 1:\n                _d.sent();\n                if (!modelOrConstructor) {\n                    msg = 'Model or Model Constructor required';\n                    logger.error(msg, { modelOrConstructor: modelOrConstructor });\n                    throw new Error(msg);\n                }\n                if (!isValidModelConstructor(modelOrConstructor)) return [3 /*break*/, 3];\n                modelConstructor = modelOrConstructor;\n                if (!idOrCriteria) {\n                    msg = 'Id to delete or criteria required. Do you want to delete all? Pass Predicates.ALL';\n                    logger.error(msg, { idOrCriteria: idOrCriteria });\n                    throw new Error(msg);\n                }\n                if (typeof idOrCriteria === 'string') {\n                    condition = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n                }\n                else {\n                    condition = ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor), \n                    /**\n                     * idOrCriteria is always a ProducerModelPredicate<T>, never a symbol.\n                     * The symbol is used only for typing purposes. e.g. see Predicates.ALL\n                     */\n                    idOrCriteria);\n                    if (!condition || !ModelPredicateCreator.isValidPredicate(condition)) {\n                        msg = 'Criteria required. Do you want to delete all? Pass Predicates.ALL';\n                        logger.error(msg, { condition: condition });\n                        throw new Error(msg);\n                    }\n                }\n                return [4 /*yield*/, storage.delete(modelConstructor, condition)];\n            case 2:\n                _a = __read.apply(void 0, [_d.sent(), 1]), deleted = _a[0];\n                return [2 /*return*/, deleted];\n            case 3:\n                model = modelOrConstructor;\n                modelConstructor = Object.getPrototypeOf(model || {})\n                    .constructor;\n                if (!isValidModelConstructor(modelConstructor)) {\n                    msg = 'Object is not an instance of a valid model';\n                    logger.error(msg, { model: model });\n                    throw new Error(msg);\n                }\n                modelDefinition = getModelDefinition(modelConstructor);\n                idPredicate = ModelPredicateCreator.createForId(modelDefinition, model.id);\n                if (idOrCriteria) {\n                    if (typeof idOrCriteria !== 'function') {\n                        msg = 'Invalid criteria';\n                        logger.error(msg, { idOrCriteria: idOrCriteria });\n                        throw new Error(msg);\n                    }\n                    condition = idOrCriteria(idPredicate);\n                }\n                else {\n                    condition = idPredicate;\n                }\n                return [4 /*yield*/, storage.delete(model, condition)];\n            case 4:\n                _b = __read.apply(void 0, [_d.sent(), 1]), _c = __read(_b[0], 1), deleted = _c[0];\n                return [2 /*return*/, deleted];\n        }\n    });\n}); };\nvar observe = function (modelOrConstructor, idOrCriteria) {\n    var predicate;\n    var modelConstructor = modelOrConstructor && isValidModelConstructor(modelOrConstructor)\n        ? modelOrConstructor\n        : undefined;\n    if (modelOrConstructor && modelConstructor === undefined) {\n        var model = modelOrConstructor;\n        var modelConstructor_1 = model && Object.getPrototypeOf(model).constructor;\n        if (isValidModelConstructor(modelConstructor_1)) {\n            if (idOrCriteria) {\n                logger.warn('idOrCriteria is ignored when using a model instance', {\n                    model: model,\n                    idOrCriteria: idOrCriteria,\n                });\n            }\n            return observe(modelConstructor_1, model.id);\n        }\n        else {\n            var msg = 'The model is not an instance of a PersistentModelConstructor';\n            logger.error(msg, { model: model });\n            throw new Error(msg);\n        }\n    }\n    if (idOrCriteria !== undefined && modelConstructor === undefined) {\n        var msg = 'Cannot provide criteria without a modelConstructor';\n        logger.error(msg, idOrCriteria);\n        throw new Error(msg);\n    }\n    if (modelConstructor && !isValidModelConstructor(modelConstructor)) {\n        var msg = 'Constructor is not for a valid model';\n        logger.error(msg, { modelConstructor: modelConstructor });\n        throw new Error(msg);\n    }\n    if (typeof idOrCriteria === 'string') {\n        predicate = ModelPredicateCreator.createForId(getModelDefinition(modelConstructor), idOrCriteria);\n    }\n    else {\n        predicate =\n            modelConstructor &&\n                ModelPredicateCreator.createFromExisting(getModelDefinition(modelConstructor), idOrCriteria);\n    }\n    return new Observable(function (observer) {\n        var handle;\n        (function () { return __awaiter(void 0, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, start()];\n                    case 1:\n                        _a.sent();\n                        handle = storage\n                            .observe(modelConstructor, predicate)\n                            .filter(function (_a) {\n                            var model = _a.model;\n                            return namespaceResolver(model) === USER;\n                        })\n                            .subscribe(observer);\n                        return [2 /*return*/];\n                }\n            });\n        }); })();\n        return function () {\n            if (handle) {\n                handle.unsubscribe();\n            }\n        };\n    });\n};\nfunction isQueryOne(obj) {\n    return typeof obj === 'string';\n}\nvar query = function (modelConstructor, idOrCriteria, pagination) { return __awaiter(void 0, void 0, void 0, function () {\n    var msg, modelDefinition, predicate, _a, limit, page, result;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0: return [4 /*yield*/, start()];\n            case 1:\n                _b.sent();\n                //#region Input validation\n                if (!isValidModelConstructor(modelConstructor)) {\n                    msg = 'Constructor is not for a valid model';\n                    logger.error(msg, { modelConstructor: modelConstructor });\n                    throw new Error(msg);\n                }\n                if (typeof idOrCriteria === 'string') {\n                    if (pagination !== undefined) {\n                        logger.warn('Pagination is ignored when querying by id');\n                    }\n                }\n                modelDefinition = getModelDefinition(modelConstructor);\n                if (isQueryOne(idOrCriteria)) {\n                    predicate = ModelPredicateCreator.createForId(modelDefinition, idOrCriteria);\n                }\n                else {\n                    if (isPredicatesAll(idOrCriteria)) {\n                        // Predicates.ALL means \"all records\", so no predicate (undefined)\n                        predicate = undefined;\n                    }\n                    else {\n                        predicate = ModelPredicateCreator.createFromExisting(modelDefinition, idOrCriteria);\n                    }\n                }\n                _a = pagination || {}, limit = _a.limit, page = _a.page;\n                if (page !== undefined && limit === undefined) {\n                    throw new Error('Limit is required when requesting a page');\n                }\n                if (page !== undefined) {\n                    if (typeof page !== 'number') {\n                        throw new Error('Page should be a number');\n                    }\n                    if (page < 0) {\n                        throw new Error(\"Page can't be negative\");\n                    }\n                }\n                if (limit !== undefined) {\n                    if (typeof limit !== 'number') {\n                        throw new Error('Limit should be a number');\n                    }\n                    if (limit < 0) {\n                        throw new Error(\"Limit can't be negative\");\n                    }\n                }\n                //#endregion\n                logger.debug('params ready', {\n                    modelConstructor: modelConstructor,\n                    predicate: ModelPredicateCreator.getPredicates(predicate, false),\n                    pagination: pagination,\n                });\n                return [4 /*yield*/, storage.query(modelConstructor, predicate, pagination)];\n            case 2:\n                result = _b.sent();\n                return [2 /*return*/, isQueryOne(idOrCriteria) ? result[0] : result];\n        }\n    });\n}); };\nvar sync;\nvar amplifyConfig = {};\nvar conflictHandler;\nvar errorHandler;\nvar maxRecordsToSync;\nvar syncPageSize;\nvar fullSyncInterval;\nfunction configure(config) {\n    if (config === void 0) { config = {}; }\n    var configDataStore = config.DataStore, configConflictHandler = config.conflictHandler, configErrorHandler = config.errorHandler, configMaxRecordsToSync = config.maxRecordsToSync, configSyncPageSize = config.syncPageSize, configFullSyncInterval = config.fullSyncInterval, configFromAmplify = __rest(config, [\"DataStore\", \"conflictHandler\", \"errorHandler\", \"maxRecordsToSync\", \"syncPageSize\", \"fullSyncInterval\"]);\n    amplifyConfig = __assign(__assign({}, configFromAmplify), amplifyConfig);\n    conflictHandler = setConflictHandler(config);\n    errorHandler = setErrorHandler(config);\n    maxRecordsToSync =\n        (configDataStore && configDataStore.maxRecordsToSync) ||\n            maxRecordsToSync ||\n            config.maxRecordsToSync;\n    syncPageSize =\n        (configDataStore && configDataStore.syncPageSize) ||\n            syncPageSize ||\n            config.syncPageSize;\n    fullSyncInterval =\n        (configDataStore && configDataStore.fullSyncInterval) ||\n            configFullSyncInterval ||\n            config.fullSyncInterval ||\n            24 * 60; // 1 day\n}\nfunction defaultConflictHandler(conflictData) {\n    var localModel = conflictData.localModel, modelConstructor = conflictData.modelConstructor, remoteModel = conflictData.remoteModel;\n    var _version = remoteModel._version;\n    return modelInstanceCreator(modelConstructor, __assign(__assign({}, localModel), { _version: _version }));\n}\nfunction setConflictHandler(config) {\n    var configDataStore = config.DataStore;\n    var conflictHandlerIsDefault = function () {\n        return conflictHandler === defaultConflictHandler;\n    };\n    if (configDataStore) {\n        return configDataStore.conflictHandler;\n    }\n    if (conflictHandlerIsDefault() && config.conflictHandler) {\n        return config.conflictHandler;\n    }\n    return conflictHandler || defaultConflictHandler;\n}\nfunction setErrorHandler(config) {\n    var configDataStore = config.DataStore;\n    var errorHandlerIsDefault = function () {\n        return errorHandler === defaultErrorHandler;\n    };\n    if (configDataStore) {\n        return configDataStore.errorHandler;\n    }\n    if (errorHandlerIsDefault() && config.errorHandler) {\n        return config.errorHandler;\n    }\n    return errorHandler || defaultErrorHandler;\n}\nfunction defaultErrorHandler(error) {\n    logger.warn(error);\n}\nfunction getModelConstructorByModelName(namespaceName, modelName) {\n    var result;\n    switch (namespaceName) {\n        case DATASTORE:\n            result = dataStoreClasses[modelName];\n            break;\n        case USER:\n            result = userClasses[modelName];\n            break;\n        case SYNC:\n            result = syncClasses[modelName];\n            break;\n        case STORAGE:\n            result = storageClasses[modelName];\n            break;\n        default:\n            exhaustiveCheck(namespaceName);\n            break;\n    }\n    if (isValidModelConstructor(result)) {\n        return result;\n    }\n    else {\n        var msg = \"Model name is not valid for namespace. modelName: \" + modelName + \", namespace: \" + namespaceName;\n        logger.error(msg);\n        throw new Error(msg);\n    }\n}\nfunction checkSchemaVersion(storage, version) {\n    return __awaiter(this, void 0, void 0, function () {\n        var Setting, modelDefinition;\n        var _this = this;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    Setting = dataStoreClasses.Setting;\n                    modelDefinition = schema.namespaces[DATASTORE].models.Setting;\n                    return [4 /*yield*/, storage.runExclusive(function (s) { return __awaiter(_this, void 0, void 0, function () {\n                            var _a, schemaVersionSetting, storedValue;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0: return [4 /*yield*/, s.query(Setting, ModelPredicateCreator.createFromExisting(modelDefinition, function (c) {\n                                            return c.key('eq', SETTING_SCHEMA_VERSION);\n                                        }), { page: 0, limit: 1 })];\n                                    case 1:\n                                        _a = __read.apply(void 0, [_b.sent(), 1]), schemaVersionSetting = _a[0];\n                                        if (!(schemaVersionSetting !== undefined)) return [3 /*break*/, 4];\n                                        storedValue = JSON.parse(schemaVersionSetting.value);\n                                        if (!(storedValue !== version)) return [3 /*break*/, 3];\n                                        return [4 /*yield*/, s.clear(false)];\n                                    case 2:\n                                        _b.sent();\n                                        _b.label = 3;\n                                    case 3: return [3 /*break*/, 6];\n                                    case 4: return [4 /*yield*/, s.save(modelInstanceCreator(Setting, {\n                                            key: SETTING_SCHEMA_VERSION,\n                                            value: JSON.stringify(version),\n                                        }))];\n                                    case 5:\n                                        _b.sent();\n                                        _b.label = 6;\n                                    case 6: return [2 /*return*/];\n                                }\n                            });\n                        }); })];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nvar syncSubscription;\nvar initResolve;\nvar initReject;\nvar initialized;\nfunction start() {\n    return __awaiter(this, void 0, void 0, function () {\n        var aws_appsync_graphqlEndpoint, fullSyncIntervalInMilliseconds;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!(initialized === undefined)) return [3 /*break*/, 1];\n                    logger.debug('Starting DataStore');\n                    initialized = new Promise(function (res, rej) {\n                        initResolve = res;\n                        initReject = rej;\n                    });\n                    return [3 /*break*/, 3];\n                case 1: return [4 /*yield*/, initialized];\n                case 2:\n                    _a.sent();\n                    return [2 /*return*/];\n                case 3:\n                    storage = new Storage(schema, namespaceResolver, getModelConstructorByModelName, modelInstanceCreator);\n                    return [4 /*yield*/, storage.init()];\n                case 4:\n                    _a.sent();\n                    return [4 /*yield*/, checkSchemaVersion(storage, schema.version)];\n                case 5:\n                    _a.sent();\n                    aws_appsync_graphqlEndpoint = amplifyConfig.aws_appsync_graphqlEndpoint;\n                    if (aws_appsync_graphqlEndpoint) {\n                        logger.debug('GraphQL endpoint available', aws_appsync_graphqlEndpoint);\n                        sync = new SyncEngine(schema, namespaceResolver, syncClasses, userClasses, storage, modelInstanceCreator, maxRecordsToSync, syncPageSize, conflictHandler, errorHandler);\n                        fullSyncIntervalInMilliseconds = fullSyncInterval * 1000 * 60;\n                        syncSubscription = sync\n                            .start({ fullSyncInterval: fullSyncIntervalInMilliseconds })\n                            .subscribe({\n                            next: function (_a) {\n                                var type = _a.type, data = _a.data;\n                                if (type === ControlMessage.SYNC_ENGINE_STORAGE_SUBSCRIBED) {\n                                    initResolve();\n                                }\n                                Hub.dispatch('datastore', {\n                                    event: type,\n                                    data: data,\n                                });\n                            },\n                            error: function (err) {\n                                logger.warn('Sync error', err);\n                                initReject();\n                            },\n                        });\n                    }\n                    else {\n                        logger.info(\"Data won't be synchronized. No GraphQL endpoint configured.\", {\n                            config: amplifyConfig,\n                        });\n                        initResolve();\n                    }\n                    return [4 /*yield*/, initialized];\n                case 6:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction clear() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (storage === undefined) {\n                        return [2 /*return*/];\n                    }\n                    if (syncSubscription && !syncSubscription.closed) {\n                        syncSubscription.unsubscribe();\n                    }\n                    return [4 /*yield*/, storage.clear()];\n                case 1:\n                    _a.sent();\n                    initialized = undefined; // Should re-initialize when start() is called.\n                    storage = undefined;\n                    sync = undefined;\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getNamespace() {\n    var namespace = {\n        name: DATASTORE,\n        relationships: {},\n        enums: {},\n        nonModels: {},\n        models: {\n            Setting: {\n                name: 'Setting',\n                pluralName: 'Settings',\n                syncable: false,\n                fields: {\n                    id: {\n                        name: 'id',\n                        type: 'ID',\n                        isRequired: true,\n                        isArray: false,\n                    },\n                    key: {\n                        name: 'key',\n                        type: 'String',\n                        isRequired: true,\n                        isArray: false,\n                    },\n                    value: {\n                        name: 'value',\n                        type: 'String',\n                        isRequired: true,\n                        isArray: false,\n                    },\n                },\n            },\n        },\n    };\n    return namespace;\n}\nvar DataStore = /** @class */ (function () {\n    function DataStore() {\n        this.start = start;\n        this.query = query;\n        this.save = save;\n        this.delete = remove;\n        this.observe = observe;\n        this.configure = configure;\n        this.clear = clear;\n        Amplify.register(this);\n    }\n    DataStore.prototype.getModuleName = function () {\n        return 'DataStore';\n    };\n    return DataStore;\n}());\nvar instance = new DataStore();\nexport { initSchema, instance as DataStore };\n//# sourceMappingURL=datastore.js.map"]},"metadata":{},"sourceType":"module"}