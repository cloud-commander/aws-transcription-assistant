{"ast":null,"code":"'use strict';\n\nvar nameStartChar = \":A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\";\nvar nameChar = nameStartChar + \"\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\";\nvar nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*';\nvar regexName = new RegExp('^' + nameRegexp + '$');\n\nvar getAllMatches = function getAllMatches(string, regex) {\n  var matches = [];\n  var match = regex.exec(string);\n\n  while (match) {\n    var allmatches = [];\n    var len = match.length;\n\n    for (var index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n\n  return matches;\n};\n\nvar isName = function isName(string) {\n  var match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function (v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function (obj) {\n  return Object.keys(obj).length === 0;\n};\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\n\n\nexports.merge = function (target, a, arrayMode) {\n  if (a) {\n    var keys = Object.keys(a); // will return an array of own properties\n\n    var len = keys.length; //don't make it inline\n\n    for (var i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [a[keys[i]]];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\n\nexports.getValue = function (v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n}; // const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\n\nexports.buildOptions = function (options, defaultOptions, props) {\n  var newOptions = {};\n\n  if (!options) {\n    return defaultOptions; //if there are not options\n  }\n\n  for (var i = 0; i < props.length; i++) {\n    if (options[props[i]] !== undefined) {\n      newOptions[props[i]] = options[props[i]];\n    } else {\n      newOptions[props[i]] = defaultOptions[props[i]];\n    }\n  }\n\n  return newOptions;\n};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;","map":{"version":3,"sources":["/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/node_modules/fast-xml-parser/src/util.js"],"names":["nameStartChar","nameChar","nameRegexp","regexName","RegExp","getAllMatches","string","regex","matches","match","exec","allmatches","len","length","index","push","isName","exports","isExist","v","isEmptyObject","obj","Object","keys","merge","target","a","arrayMode","i","getValue","buildOptions","options","defaultOptions","props","newOptions","undefined"],"mappings":"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","sourcesContent":["'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if(arrayMode === 'strict'){\n        target[keys[i]] = [ a[keys[i]] ];\n      }else{\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.buildOptions = function(options, defaultOptions, props) {\n  var newOptions = {};\n  if (!options) {\n    return defaultOptions; //if there are not options\n  }\n\n  for (let i = 0; i < props.length; i++) {\n    if (options[props[i]] !== undefined) {\n      newOptions[props[i]] = options[props[i]];\n    } else {\n      newOptions[props[i]] = defaultOptions[props[i]];\n    }\n  }\n  return newOptions;\n};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n"]},"metadata":{},"sourceType":"script"}