{"ast":null,"code":"import _classCallCheck from\"/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faWindowClose}from'@fortawesome/free-solid-svg-icons';import Toggle from'./Toggle/';import TimecodeOffset from'./TimecodeOffset';import style from'./index.module.css';var Settings=/*#__PURE__*/function(_React$Component){_inherits(Settings,_React$Component);var _super=_createSuper(Settings);function Settings(){_classCallCheck(this,Settings);return _super.apply(this,arguments);}_createClass(Settings,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:style.settings},/*#__PURE__*/React.createElement(\"h2\",{className:style.header},\"Settings Panel\"),/*#__PURE__*/React.createElement(\"div\",{className:style.closeButton,onClick:this.props.handleSettingsToggle},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faWindowClose})),/*#__PURE__*/React.createElement(\"div\",{className:style.controlsContainer},/*#__PURE__*/React.createElement(\"section\",{className:style.settingElement},/*#__PURE__*/React.createElement(\"div\",{className:style.label},\"Pause While Typing\"),/*#__PURE__*/React.createElement(Toggle,{defaultValue:this.props.defaultValuePauseWhileTyping,label:'Pause while typing',handleToggle:this.props.handlePauseWhileTyping})),/*#__PURE__*/React.createElement(\"section\",{className:style.settingElement},/*#__PURE__*/React.createElement(\"div\",{className:style.label},\"Scroll Sync\"),/*#__PURE__*/React.createElement(Toggle,{defaultValue:this.props.defaultValueScrollSync,label:'ScrollSync',handleToggle:this.props.handleIsScrollIntoViewChange})),/*#__PURE__*/React.createElement(\"section\",{className:style.settingElement},/*#__PURE__*/React.createElement(\"div\",{className:style.label},\"Rollback Interval (sec)\"),/*#__PURE__*/React.createElement(\"input\",{className:style.rollbackValue,type:\"number\",step:\"1\",max:\"60\",min:\"1\",value:this.props.defaultRollBackValueInSeconds,onChange:this.props.handleRollBackValueInSeconds,name:\"lname\"})),/*#__PURE__*/React.createElement(\"section\",{className:style.settingElement},/*#__PURE__*/React.createElement(\"div\",{className:style.label},\"Show Timecodes\"),/*#__PURE__*/React.createElement(Toggle,{defaultValue:this.props.showTimecodes,label:'Hide Timecodes',handleToggle:this.props.handleShowTimecodes})),/*#__PURE__*/React.createElement(\"section\",{className:style.settingElement},/*#__PURE__*/React.createElement(\"div\",{className:style.label},\"Show Speaker Labels\"),/*#__PURE__*/React.createElement(Toggle,{defaultValue:this.props.showSpeakers,label:'Hide Speaker Labels',handleToggle:this.props.handleShowSpeakers})),/*#__PURE__*/React.createElement(\"section\",{className:style.settingElement},/*#__PURE__*/React.createElement(\"div\",{className:style.timecodeLabel},\"Timecode Offset \\u2139\"),/*#__PURE__*/React.createElement(TimecodeOffset,{timecodeOffset:this.props.timecodeOffset,handleSetTimecodeOffset:this.props.handleSetTimecodeOffset,handleAnalyticsEvents:this.props.handleAnalyticsEvents}))));}}]);return Settings;}(React.Component);export default Settings;","map":{"version":3,"sources":["/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/packages/frontend/src/packages/components/settings/index.js"],"names":["React","FontAwesomeIcon","faWindowClose","Toggle","TimecodeOffset","style","Settings","settings","header","closeButton","props","handleSettingsToggle","controlsContainer","settingElement","label","defaultValuePauseWhileTyping","handlePauseWhileTyping","defaultValueScrollSync","handleIsScrollIntoViewChange","rollbackValue","defaultRollBackValueInSeconds","handleRollBackValueInSeconds","showTimecodes","handleShowTimecodes","showSpeakers","handleShowSpeakers","timecodeLabel","timecodeOffset","handleSetTimecodeOffset","handleAnalyticsEvents","Component"],"mappings":"4tBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,aAAT,KAA8B,mCAA9B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,C,GAEMC,CAAAA,Q,oQAEK,CACP,mBACE,2BAAK,SAAS,CAAGD,KAAK,CAACE,QAAvB,eACE,0BAAI,SAAS,CAAGF,KAAK,CAACG,MAAtB,mBADF,cAEE,2BAAK,SAAS,CAAGH,KAAK,CAACI,WAAvB,CAAqC,OAAO,CAAG,KAAKC,KAAL,CAAWC,oBAA1D,eACE,oBAAC,eAAD,EAAiB,IAAI,CAAGT,aAAxB,EADF,CAFF,cAME,2BAAK,SAAS,CAAGG,KAAK,CAACO,iBAAvB,eACE,+BAAS,SAAS,CAAGP,KAAK,CAACQ,cAA3B,eACE,2BAAK,SAAS,CAAGR,KAAK,CAACS,KAAvB,uBADF,cAEE,oBAAC,MAAD,EACE,YAAY,CAAG,KAAKJ,KAAL,CAAWK,4BAD5B,CAEE,KAAK,CAAG,oBAFV,CAGE,YAAY,CAAG,KAAKL,KAAL,CAAWM,sBAH5B,EAFF,CADF,cAUE,+BAAS,SAAS,CAAGX,KAAK,CAACQ,cAA3B,eACE,2BAAK,SAAS,CAAGR,KAAK,CAACS,KAAvB,gBADF,cAEE,oBAAC,MAAD,EACE,YAAY,CAAG,KAAKJ,KAAL,CAAWO,sBAD5B,CAEE,KAAK,CAAG,YAFV,CAGE,YAAY,CAAG,KAAKP,KAAL,CAAWQ,4BAH5B,EAFF,CAVF,cAmBE,+BAAS,SAAS,CAAGb,KAAK,CAACQ,cAA3B,eACE,2BAAK,SAAS,CAAGR,KAAK,CAACS,KAAvB,4BADF,cAEE,6BACE,SAAS,CAAGT,KAAK,CAACc,aADpB,CAEE,IAAI,CAAC,QAFP,CAGE,IAAI,CAAC,GAHP,CAIE,GAAG,CAAC,IAJN,CAKE,GAAG,CAAC,GALN,CAME,KAAK,CAAG,KAAKT,KAAL,CAAWU,6BANrB,CAOE,QAAQ,CAAG,KAAKV,KAAL,CAAWW,4BAPxB,CAQE,IAAI,CAAC,OARP,EAFF,CAnBF,cAgCE,+BAAS,SAAS,CAAGhB,KAAK,CAACQ,cAA3B,eACE,2BAAK,SAAS,CAAGR,KAAK,CAACS,KAAvB,mBADF,cAEE,oBAAC,MAAD,EACE,YAAY,CAAG,KAAKJ,KAAL,CAAWY,aAD5B,CAEE,KAAK,CAAG,gBAFV,CAGE,YAAY,CAAG,KAAKZ,KAAL,CAAWa,mBAH5B,EAFF,CAhCF,cAyCE,+BAAS,SAAS,CAAGlB,KAAK,CAACQ,cAA3B,eACE,2BAAK,SAAS,CAAGR,KAAK,CAACS,KAAvB,wBADF,cAEE,oBAAC,MAAD,EACE,YAAY,CAAG,KAAKJ,KAAL,CAAWc,YAD5B,CAEE,KAAK,CAAG,qBAFV,CAGE,YAAY,CAAG,KAAKd,KAAL,CAAWe,kBAH5B,EAFF,CAzCF,cAmDE,+BAAS,SAAS,CAAGpB,KAAK,CAACQ,cAA3B,eACE,2BAAK,SAAS,CAAGR,KAAK,CAACqB,aAAvB,2BADF,cAEE,oBAAC,cAAD,EACE,cAAc,CAAG,KAAKhB,KAAL,CAAWiB,cAD9B,CAEE,uBAAuB,CAAG,KAAKjB,KAAL,CAAWkB,uBAFvC,CAGE,qBAAqB,CAAG,KAAKlB,KAAL,CAAWmB,qBAHrC,EAFF,CAnDF,CANF,CADF,CAqED,C,sBAxEoB7B,KAAK,CAAC8B,S,EAgG7B,cAAexB,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\n\nimport Toggle from './Toggle/';\nimport TimecodeOffset from './TimecodeOffset';\n\nimport style from './index.module.css';\n\nclass Settings extends React.Component {\n\n  render() {\n    return (\n      <div className={ style.settings }>\n        <h2 className={ style.header }>Settings Panel</h2>\n        <div className={ style.closeButton } onClick={ this.props.handleSettingsToggle }>\n          <FontAwesomeIcon icon={ faWindowClose } />\n        </div>\n\n        <div className={ style.controlsContainer }>\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Pause While Typing</div>\n            <Toggle\n              defaultValue={ this.props.defaultValuePauseWhileTyping }\n              label={ 'Pause while typing' }\n              handleToggle={ this.props.handlePauseWhileTyping }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Scroll Sync</div>\n            <Toggle\n              defaultValue={ this.props.defaultValueScrollSync }\n              label={ 'ScrollSync' }\n              handleToggle={ this.props.handleIsScrollIntoViewChange }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Rollback Interval (sec)</div>\n            <input\n              className={ style.rollbackValue }\n              type=\"number\"\n              step=\"1\"\n              max=\"60\"\n              min=\"1\"\n              value={ this.props.defaultRollBackValueInSeconds }\n              onChange={ this.props.handleRollBackValueInSeconds }\n              name=\"lname\"/>\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Show Timecodes</div>\n            <Toggle\n              defaultValue={ this.props.showTimecodes }\n              label={ 'Hide Timecodes' }\n              handleToggle={ this.props.handleShowTimecodes }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Show Speaker Labels</div>\n            <Toggle\n              defaultValue={ this.props.showSpeakers }\n              label={ 'Hide Speaker Labels' }\n              handleToggle={ this.props.handleShowSpeakers }\n            />\n          </section>\n      \n\n          <section className={ style.settingElement }>\n            <div className={ style.timecodeLabel }>Timecode Offset â„¹</div>\n            <TimecodeOffset\n              timecodeOffset={ this.props.timecodeOffset }\n              handleSetTimecodeOffset={ this.props.handleSetTimecodeOffset }\n              handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n            />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nSettings.propTypes = {\n  showTimecodes: PropTypes.bool,\n  showSpeakers: PropTypes.bool,\n  timecodeOffset: PropTypes.number,\n  handleShowTimecodes: PropTypes.func,\n  handleShowSpeakers: PropTypes.func,\n  handleSetTimecodeOffset: PropTypes.func,\n  handleSettingsToggle: PropTypes.func,\n  handlePauseWhileTyping: PropTypes.func,\n  handleIsScrollIntoViewChange: PropTypes.func,\n  handleRollBackValueInSeconds: PropTypes.func,\n  defaultValueScrollSync: PropTypes.bool,\n  defaultValuePauseWhileTyping: PropTypes.bool,\n  defaultRollBackValueInSeconds: PropTypes.number,\n  previewIsDisplayed: PropTypes.bool,\n  handlePreviewIsDisplayed: PropTypes.func,\n  // previewViewWidth: PropTypes.string,\n  handleChangePreviewViewWidth: PropTypes.func,\n  handleAnalyticsEvents: PropTypes.func\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}