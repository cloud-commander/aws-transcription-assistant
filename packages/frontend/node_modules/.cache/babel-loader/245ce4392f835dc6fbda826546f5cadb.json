{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @legacyServerCallableInstance\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar Immutable = require(\"immutable\");\n\nvar Record = Immutable.Record;\nvar DraftEntityInstanceRecord = Record({\n  type: 'TOKEN',\n  mutability: 'IMMUTABLE',\n  data: Object\n});\n/**\n * An instance of a document entity, consisting of a `type` and relevant\n * `data`, metadata about the entity.\n *\n * For instance, a \"link\" entity might provide a URI, and a \"mention\"\n * entity might provide the mentioned user's ID. These pieces of data\n * may be used when rendering the entity as part of a ContentBlock DOM\n * representation. For a link, the data would be used as an href for\n * the rendered anchor. For a mention, the ID could be used to retrieve\n * a hovercard.\n */\n\nvar DraftEntityInstance = /*#__PURE__*/function (_DraftEntityInstanceR) {\n  _inheritsLoose(DraftEntityInstance, _DraftEntityInstanceR);\n\n  function DraftEntityInstance() {\n    return _DraftEntityInstanceR.apply(this, arguments) || this;\n  }\n\n  var _proto = DraftEntityInstance.prototype;\n\n  _proto.getType = function getType() {\n    return this.get('type');\n  };\n\n  _proto.getMutability = function getMutability() {\n    return this.get('mutability');\n  };\n\n  _proto.getData = function getData() {\n    return this.get('data');\n  };\n\n  return DraftEntityInstance;\n}(DraftEntityInstanceRecord);\n\nmodule.exports = DraftEntityInstance;","map":{"version":3,"sources":["/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/node_modules/draft-js/lib/DraftEntityInstance.js"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","Immutable","require","Record","DraftEntityInstanceRecord","type","mutability","data","DraftEntityInstance","_DraftEntityInstanceR","apply","arguments","_proto","getType","get","getMutability","getData","module","exports"],"mappings":"AAAA;;;;;;;;;;;AAWA;;AAEA,SAASA,cAAT,CAAwBC,QAAxB,EAAkCC,UAAlC,EAA8C;AAAED,EAAAA,QAAQ,CAACE,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAcH,UAAU,CAACC,SAAzB,CAArB;AAA0DF,EAAAA,QAAQ,CAACE,SAAT,CAAmBG,WAAnB,GAAiCL,QAAjC;AAA2CA,EAAAA,QAAQ,CAACM,SAAT,GAAqBL,UAArB;AAAkC;;AAEvL,IAAIM,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AAEA,IAAIC,MAAM,GAAGF,SAAS,CAACE,MAAvB;AACA,IAAIC,yBAAyB,GAAGD,MAAM,CAAC;AACrCE,EAAAA,IAAI,EAAE,OAD+B;AAErCC,EAAAA,UAAU,EAAE,WAFyB;AAGrCC,EAAAA,IAAI,EAAEV;AAH+B,CAAD,CAAtC;AAKA;;;;;;;;;;;;AAYA,IAAIW,mBAAmB,GAAG,aAAa,UAAUC,qBAAV,EAAiC;AACtEhB,EAAAA,cAAc,CAACe,mBAAD,EAAsBC,qBAAtB,CAAd;;AAEA,WAASD,mBAAT,GAA+B;AAC7B,WAAOC,qBAAqB,CAACC,KAAtB,CAA4B,IAA5B,EAAkCC,SAAlC,KAAgD,IAAvD;AACD;;AAED,MAAIC,MAAM,GAAGJ,mBAAmB,CAACZ,SAAjC;;AAEAgB,EAAAA,MAAM,CAACC,OAAP,GAAiB,SAASA,OAAT,GAAmB;AAClC,WAAO,KAAKC,GAAL,CAAS,MAAT,CAAP;AACD,GAFD;;AAIAF,EAAAA,MAAM,CAACG,aAAP,GAAuB,SAASA,aAAT,GAAyB;AAC9C,WAAO,KAAKD,GAAL,CAAS,YAAT,CAAP;AACD,GAFD;;AAIAF,EAAAA,MAAM,CAACI,OAAP,GAAiB,SAASA,OAAT,GAAmB;AAClC,WAAO,KAAKF,GAAL,CAAS,MAAT,CAAP;AACD,GAFD;;AAIA,SAAON,mBAAP;AACD,CAtBsC,CAsBrCJ,yBAtBqC,CAAvC;;AAwBAa,MAAM,CAACC,OAAP,GAAiBV,mBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @legacyServerCallableInstance\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar Immutable = require(\"immutable\");\n\nvar Record = Immutable.Record;\nvar DraftEntityInstanceRecord = Record({\n  type: 'TOKEN',\n  mutability: 'IMMUTABLE',\n  data: Object\n});\n/**\n * An instance of a document entity, consisting of a `type` and relevant\n * `data`, metadata about the entity.\n *\n * For instance, a \"link\" entity might provide a URI, and a \"mention\"\n * entity might provide the mentioned user's ID. These pieces of data\n * may be used when rendering the entity as part of a ContentBlock DOM\n * representation. For a link, the data would be used as an href for\n * the rendered anchor. For a mention, the ID could be used to retrieve\n * a hovercard.\n */\n\nvar DraftEntityInstance = /*#__PURE__*/function (_DraftEntityInstanceR) {\n  _inheritsLoose(DraftEntityInstance, _DraftEntityInstanceR);\n\n  function DraftEntityInstance() {\n    return _DraftEntityInstanceR.apply(this, arguments) || this;\n  }\n\n  var _proto = DraftEntityInstance.prototype;\n\n  _proto.getType = function getType() {\n    return this.get('type');\n  };\n\n  _proto.getMutability = function getMutability() {\n    return this.get('mutability');\n  };\n\n  _proto.getData = function getData() {\n    return this.get('data');\n  };\n\n  return DraftEntityInstance;\n}(DraftEntityInstanceRecord);\n\nmodule.exports = DraftEntityInstance;"]},"metadata":{},"sourceType":"script"}