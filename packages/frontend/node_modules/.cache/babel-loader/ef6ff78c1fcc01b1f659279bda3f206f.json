{"ast":null,"code":"import { r as registerInstance, h } from './index-a93ff41e.js';\nvar amplifyIconButtonCss = \":host{--button-color:var(--amplify-secondary-contrast);--button-background-hover:var(--amplify-secondary-color)}.action-button button{position:relative;padding:0;background:none;height:54px;width:54px;cursor:pointer;outline:none;text-decoration:none;border:none;border-radius:30px;-webkit-transition:all 0.3s ease-in-out;transition:all 0.3s ease-in-out;color:var(--button-color);fill:currentColor}.action-button button:hover{background-color:var(--button-background-hover);-webkit-box-shadow:0.3px 0.3px 0.3px rgba(0, 0, 0, 0.3);box-shadow:0.3px 0.3px 0.3px rgba(0, 0, 0, 0.3)}.action-button button:hover>.tooltip{display:block}.action-button button:hover>svg{-webkit-filter:none;filter:none}.action-button button:focus{outline:none}.action-button button svg{width:1.8em;height:1.8em;-webkit-filter:drop-shadow(1px 1px 1px var(--amplify-grey));filter:drop-shadow(1px 1px 1px var(--amplify-grey))}\";\n\nvar AmplifyIconButton =\n/** @class */\nfunction () {\n  function AmplifyIconButton(hostRef) {\n    registerInstance(this, hostRef);\n    /** (Optional) The tooltip that will show on hover of the button */\n\n    this.tooltip = null;\n    /** (Optional) Whether or not to show the tooltip automatically */\n\n    this.autoShowTooltip = false;\n  }\n\n  AmplifyIconButton.prototype.render = function () {\n    return h(\"span\", {\n      class: \"action-button\"\n    }, h(\"amplify-tooltip\", {\n      text: this.tooltip,\n      shouldAutoShow: this.autoShowTooltip\n    }, h(\"button\", null, h(\"amplify-icon\", {\n      name: this.name\n    }))));\n  };\n\n  return AmplifyIconButton;\n}();\n\nAmplifyIconButton.style = amplifyIconButtonCss;\nexport { AmplifyIconButton as amplify_icon_button };","map":{"version":3,"sources":["/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/packages/frontend/node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-icon-button.entry.js"],"names":["r","registerInstance","h","amplifyIconButtonCss","AmplifyIconButton","hostRef","tooltip","autoShowTooltip","prototype","render","class","text","shouldAutoShow","name","style","amplify_icon_button"],"mappings":"AAAA,SAASA,CAAC,IAAIC,gBAAd,EAAgCC,CAAhC,QAAyC,qBAAzC;AACA,IAAIC,oBAAoB,GAAG,k4BAA3B;;AACA,IAAIC,iBAAiB;AAAG;AAAe,YAAY;AAC/C,WAASA,iBAAT,CAA2BC,OAA3B,EAAoC;AAChCJ,IAAAA,gBAAgB,CAAC,IAAD,EAAOI,OAAP,CAAhB;AACA;;AACA,SAAKC,OAAL,GAAe,IAAf;AACA;;AACA,SAAKC,eAAL,GAAuB,KAAvB;AACH;;AACDH,EAAAA,iBAAiB,CAACI,SAAlB,CAA4BC,MAA5B,GAAqC,YAAY;AAC7C,WAAQP,CAAC,CAAC,MAAD,EAAS;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAAT,EAAqCR,CAAC,CAAC,iBAAD,EAAoB;AAAES,MAAAA,IAAI,EAAE,KAAKL,OAAb;AAAsBM,MAAAA,cAAc,EAAE,KAAKL;AAA3C,KAApB,EAAkFL,CAAC,CAAC,QAAD,EAAW,IAAX,EAAiBA,CAAC,CAAC,cAAD,EAAiB;AAAEW,MAAAA,IAAI,EAAE,KAAKA;AAAb,KAAjB,CAAlB,CAAnF,CAAtC,CAAT;AACH,GAFD;;AAGA,SAAOT,iBAAP;AACH,CAZsC,EAAvC;;AAaAA,iBAAiB,CAACU,KAAlB,GAA0BX,oBAA1B;AACA,SAASC,iBAAiB,IAAIW,mBAA9B","sourcesContent":["import { r as registerInstance, h } from './index-a93ff41e.js';\nvar amplifyIconButtonCss = \":host{--button-color:var(--amplify-secondary-contrast);--button-background-hover:var(--amplify-secondary-color)}.action-button button{position:relative;padding:0;background:none;height:54px;width:54px;cursor:pointer;outline:none;text-decoration:none;border:none;border-radius:30px;-webkit-transition:all 0.3s ease-in-out;transition:all 0.3s ease-in-out;color:var(--button-color);fill:currentColor}.action-button button:hover{background-color:var(--button-background-hover);-webkit-box-shadow:0.3px 0.3px 0.3px rgba(0, 0, 0, 0.3);box-shadow:0.3px 0.3px 0.3px rgba(0, 0, 0, 0.3)}.action-button button:hover>.tooltip{display:block}.action-button button:hover>svg{-webkit-filter:none;filter:none}.action-button button:focus{outline:none}.action-button button svg{width:1.8em;height:1.8em;-webkit-filter:drop-shadow(1px 1px 1px var(--amplify-grey));filter:drop-shadow(1px 1px 1px var(--amplify-grey))}\";\nvar AmplifyIconButton = /** @class */ (function () {\n    function AmplifyIconButton(hostRef) {\n        registerInstance(this, hostRef);\n        /** (Optional) The tooltip that will show on hover of the button */\n        this.tooltip = null;\n        /** (Optional) Whether or not to show the tooltip automatically */\n        this.autoShowTooltip = false;\n    }\n    AmplifyIconButton.prototype.render = function () {\n        return (h(\"span\", { class: \"action-button\" }, h(\"amplify-tooltip\", { text: this.tooltip, shouldAutoShow: this.autoShowTooltip }, h(\"button\", null, h(\"amplify-icon\", { name: this.name })))));\n    };\n    return AmplifyIconButton;\n}());\nAmplifyIconButton.style = amplifyIconButtonCss;\nexport { AmplifyIconButton as amplify_icon_button };\n"]},"metadata":{},"sourceType":"module"}