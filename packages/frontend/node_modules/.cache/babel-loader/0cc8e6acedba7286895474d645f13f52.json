{"ast":null,"code":"import { __values } from \"tslib\";\nimport { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\n/**\n * @internal\n */\n\nexport function prepareRequest(request) {\n  var e_1, _a; // Create a clone of the request object that does not clone the body\n\n\n  request = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n\n  try {\n    for (var _b = __values(Object.keys(request.headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var headerName = _c.value;\n\n      if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n        delete request.headers[headerName];\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return request;\n}","map":{"version":3,"sources":["../../src/prepareRequest.ts"],"names":[],"mappings":";AAEA,SAAS,YAAT,QAA6B,gBAA7B;AACA,SAAS,iBAAT,QAAkC,aAAlC;AAEA;;;;AAGA,OAAM,SAAU,cAAV,CAAyB,OAAzB,EAA6C;cAAA,CACjD;;;AACA,EAAA,OAAO,GAAG,OAAQ,OAAe,CAAC,KAAxB,KAAkC,UAAlC,GAAgD,OAAe,CAAC,KAAhB,EAAhD,GAA0E,YAAY,CAAC,OAAD,CAAhG;;;AAEA,SAAyB,IAAA,EAAA,GAAA,QAAA,CAAA,MAAM,CAAC,IAAP,CAAY,OAAO,CAAC,OAApB,CAAA,CAAA,EAA4B,EAAA,GAAA,EAAA,CAAA,IAAA,EAArD,EAAqD,CAAA,EAAA,CAAA,IAArD,EAAqD,EAAA,GAAA,EAAA,CAAA,IAAA,EAArD,EAAuD;AAAlD,UAAM,UAAU,GAAA,EAAA,CAAA,KAAhB;;AACH,UAAI,iBAAiB,CAAC,OAAlB,CAA0B,UAAU,CAAC,WAAX,EAA1B,IAAsD,CAAC,CAA3D,EAA8D;AAC5D,eAAO,OAAO,CAAC,OAAR,CAAgB,UAAhB,CAAP;AACD;AACF;;;;;;;;;;;;;AAED,SAAO,OAAP;AACD","sourceRoot":"","sourcesContent":["import { __values } from \"tslib\";\nimport { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\n/**\n * @internal\n */\nexport function prepareRequest(request) {\n    var e_1, _a;\n    // Create a clone of the request object that does not clone the body\n    request = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n    try {\n        for (var _b = __values(Object.keys(request.headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var headerName = _c.value;\n            if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n                delete request.headers[headerName];\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return request;\n}\n//# sourceMappingURL=prepareRequest.js.map"]},"metadata":{},"sourceType":"module"}