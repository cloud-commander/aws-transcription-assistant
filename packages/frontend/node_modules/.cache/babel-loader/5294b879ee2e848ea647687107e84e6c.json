{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar BlockMapBuilder = require(\"./BlockMapBuilder\");\n\nvar CharacterMetadata = require(\"./CharacterMetadata\");\n\nvar ContentBlock = require(\"./ContentBlock\");\n\nvar ContentBlockNode = require(\"./ContentBlockNode\");\n\nvar DraftEntity = require(\"./DraftEntity\");\n\nvar SelectionState = require(\"./SelectionState\");\n\nvar generateRandomKey = require(\"./generateRandomKey\");\n\nvar getOwnObjectValues = require(\"./getOwnObjectValues\");\n\nvar gkx = require(\"./gkx\");\n\nvar Immutable = require(\"immutable\");\n\nvar sanitizeDraftText = require(\"./sanitizeDraftText\");\n\nvar List = Immutable.List,\n    Record = Immutable.Record,\n    Repeat = Immutable.Repeat,\n    ImmutableMap = Immutable.Map,\n    OrderedMap = Immutable.OrderedMap;\nvar defaultRecord = {\n  entityMap: null,\n  blockMap: null,\n  selectionBefore: null,\n  selectionAfter: null\n};\nvar ContentStateRecord = Record(defaultRecord);\n/* $FlowFixMe[signature-verification-failure] Supressing a `signature-\n * verification-failure` error here. TODO: T65949050 Clean up the branch for\n * this GK */\n\nvar ContentBlockNodeRecord = gkx('draft_tree_data_support') ? ContentBlockNode : ContentBlock;\n\nvar ContentState = /*#__PURE__*/function (_ContentStateRecord) {\n  _inheritsLoose(ContentState, _ContentStateRecord);\n\n  function ContentState() {\n    return _ContentStateRecord.apply(this, arguments) || this;\n  }\n\n  var _proto = ContentState.prototype;\n\n  _proto.getEntityMap = function getEntityMap() {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity;\n  };\n\n  _proto.getBlockMap = function getBlockMap() {\n    return this.get('blockMap');\n  };\n\n  _proto.getSelectionBefore = function getSelectionBefore() {\n    return this.get('selectionBefore');\n  };\n\n  _proto.getSelectionAfter = function getSelectionAfter() {\n    return this.get('selectionAfter');\n  };\n\n  _proto.getBlockForKey = function getBlockForKey(key) {\n    var block = this.getBlockMap().get(key);\n    return block;\n  };\n\n  _proto.getKeyBefore = function getKeyBefore(key) {\n    return this.getBlockMap().reverse().keySeq().skipUntil(function (v) {\n      return v === key;\n    }).skip(1).first();\n  };\n\n  _proto.getKeyAfter = function getKeyAfter(key) {\n    return this.getBlockMap().keySeq().skipUntil(function (v) {\n      return v === key;\n    }).skip(1).first();\n  };\n\n  _proto.getBlockAfter = function getBlockAfter(key) {\n    return this.getBlockMap().skipUntil(function (_, k) {\n      return k === key;\n    }).skip(1).first();\n  };\n\n  _proto.getBlockBefore = function getBlockBefore(key) {\n    return this.getBlockMap().reverse().skipUntil(function (_, k) {\n      return k === key;\n    }).skip(1).first();\n  };\n\n  _proto.getBlocksAsArray = function getBlocksAsArray() {\n    return this.getBlockMap().toArray();\n  };\n\n  _proto.getFirstBlock = function getFirstBlock() {\n    return this.getBlockMap().first();\n  };\n\n  _proto.getLastBlock = function getLastBlock() {\n    return this.getBlockMap().last();\n  };\n\n  _proto.getPlainText = function getPlainText(delimiter) {\n    return this.getBlockMap().map(function (block) {\n      return block ? block.getText() : '';\n    }).join(delimiter || '\\n');\n  };\n\n  _proto.getLastCreatedEntityKey = function getLastCreatedEntityKey() {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity.__getLastCreatedEntityKey();\n  };\n\n  _proto.hasText = function hasText() {\n    var blockMap = this.getBlockMap();\n    return blockMap.size > 1 || // make sure that there are no zero width space chars\n    escape(blockMap.first().getText()).replace(/%u200B/g, '').length > 0;\n  };\n\n  _proto.createEntity = function createEntity(type, mutability, data) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__create(type, mutability, data);\n\n    return this;\n  };\n\n  _proto.mergeEntityData = function mergeEntityData(key, toMerge) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__mergeData(key, toMerge);\n\n    return this;\n  };\n\n  _proto.replaceEntityData = function replaceEntityData(key, newData) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__replaceData(key, newData);\n\n    return this;\n  };\n\n  _proto.addEntity = function addEntity(instance) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__add(instance);\n\n    return this;\n  };\n\n  _proto.getEntity = function getEntity(key) {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity.__get(key);\n  };\n\n  _proto.getAllEntities = function getAllEntities() {\n    return DraftEntity.__getAll();\n  };\n\n  _proto.loadWithEntities = function loadWithEntities(entities) {\n    return DraftEntity.__loadWithEntities(entities);\n  };\n\n  ContentState.createFromBlockArray = function createFromBlockArray( // TODO: update flow type when we completely deprecate the old entity API\n  blocks, entityMap) {\n    // TODO: remove this when we completely deprecate the old entity API\n    var theBlocks = Array.isArray(blocks) ? blocks : blocks.contentBlocks;\n    var blockMap = BlockMapBuilder.createFromArray(theBlocks);\n    var selectionState = blockMap.isEmpty() ? new SelectionState() : SelectionState.createEmpty(blockMap.first().getKey());\n    return new ContentState({\n      blockMap: blockMap,\n      entityMap: entityMap || DraftEntity,\n      selectionBefore: selectionState,\n      selectionAfter: selectionState\n    });\n  };\n\n  ContentState.createFromText = function createFromText(text) {\n    var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /\\r\\n?|\\n/g;\n    var strings = text.split(delimiter);\n    var blocks = strings.map(function (block) {\n      block = sanitizeDraftText(block);\n      return new ContentBlockNodeRecord({\n        key: generateRandomKey(),\n        text: block,\n        type: 'unstyled',\n        characterList: List(Repeat(CharacterMetadata.EMPTY, block.length))\n      });\n    });\n    return ContentState.createFromBlockArray(blocks);\n  };\n\n  ContentState.fromJS = function fromJS(state) {\n    return new ContentState(_objectSpread({}, state, {\n      blockMap: OrderedMap(state.blockMap).map(ContentState.createContentBlockFromJS),\n      selectionBefore: new SelectionState(state.selectionBefore),\n      selectionAfter: new SelectionState(state.selectionAfter)\n    }));\n  };\n\n  ContentState.createContentBlockFromJS = function createContentBlockFromJS(block) {\n    var characterList = block.characterList;\n    return new ContentBlockNodeRecord(_objectSpread({}, block, {\n      data: ImmutableMap(block.data),\n      characterList: characterList != null ? List((Array.isArray(characterList) ? characterList : getOwnObjectValues(characterList)).map(function (c) {\n        return CharacterMetadata.fromJS(c);\n      })) : undefined\n    }));\n  };\n\n  return ContentState;\n}(ContentStateRecord);\n\nmodule.exports = ContentState;","map":{"version":3,"sources":["/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/packages/frontend/node_modules/draft-js/lib/ContentState.js"],"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","obj","value","defineProperty","configurable","writable","_inheritsLoose","subClass","superClass","prototype","create","constructor","__proto__","BlockMapBuilder","require","CharacterMetadata","ContentBlock","ContentBlockNode","DraftEntity","SelectionState","generateRandomKey","getOwnObjectValues","gkx","Immutable","sanitizeDraftText","List","Record","Repeat","ImmutableMap","Map","OrderedMap","defaultRecord","entityMap","blockMap","selectionBefore","selectionAfter","ContentStateRecord","ContentBlockNodeRecord","ContentState","_ContentStateRecord","apply","_proto","getEntityMap","getBlockMap","get","getSelectionBefore","getSelectionAfter","getBlockForKey","block","getKeyBefore","reverse","keySeq","skipUntil","v","skip","first","getKeyAfter","getBlockAfter","_","k","getBlockBefore","getBlocksAsArray","toArray","getFirstBlock","getLastBlock","last","getPlainText","delimiter","map","getText","join","getLastCreatedEntityKey","__getLastCreatedEntityKey","hasText","size","escape","replace","createEntity","type","mutability","data","__create","mergeEntityData","toMerge","__mergeData","replaceEntityData","newData","__replaceData","addEntity","instance","__add","getEntity","__get","getAllEntities","__getAll","loadWithEntities","entities","__loadWithEntities","createFromBlockArray","blocks","theBlocks","Array","isArray","contentBlocks","createFromArray","selectionState","isEmpty","createEmpty","getKey","createFromText","text","undefined","strings","split","characterList","EMPTY","fromJS","state","createContentBlockFromJS","c","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar BlockMapBuilder = require(\"./BlockMapBuilder\");\n\nvar CharacterMetadata = require(\"./CharacterMetadata\");\n\nvar ContentBlock = require(\"./ContentBlock\");\n\nvar ContentBlockNode = require(\"./ContentBlockNode\");\n\nvar DraftEntity = require(\"./DraftEntity\");\n\nvar SelectionState = require(\"./SelectionState\");\n\nvar generateRandomKey = require(\"./generateRandomKey\");\n\nvar getOwnObjectValues = require(\"./getOwnObjectValues\");\n\nvar gkx = require(\"./gkx\");\n\nvar Immutable = require(\"immutable\");\n\nvar sanitizeDraftText = require(\"./sanitizeDraftText\");\n\nvar List = Immutable.List,\n    Record = Immutable.Record,\n    Repeat = Immutable.Repeat,\n    ImmutableMap = Immutable.Map,\n    OrderedMap = Immutable.OrderedMap;\nvar defaultRecord = {\n  entityMap: null,\n  blockMap: null,\n  selectionBefore: null,\n  selectionAfter: null\n};\nvar ContentStateRecord = Record(defaultRecord);\n/* $FlowFixMe[signature-verification-failure] Supressing a `signature-\n * verification-failure` error here. TODO: T65949050 Clean up the branch for\n * this GK */\n\nvar ContentBlockNodeRecord = gkx('draft_tree_data_support') ? ContentBlockNode : ContentBlock;\n\nvar ContentState = /*#__PURE__*/function (_ContentStateRecord) {\n  _inheritsLoose(ContentState, _ContentStateRecord);\n\n  function ContentState() {\n    return _ContentStateRecord.apply(this, arguments) || this;\n  }\n\n  var _proto = ContentState.prototype;\n\n  _proto.getEntityMap = function getEntityMap() {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity;\n  };\n\n  _proto.getBlockMap = function getBlockMap() {\n    return this.get('blockMap');\n  };\n\n  _proto.getSelectionBefore = function getSelectionBefore() {\n    return this.get('selectionBefore');\n  };\n\n  _proto.getSelectionAfter = function getSelectionAfter() {\n    return this.get('selectionAfter');\n  };\n\n  _proto.getBlockForKey = function getBlockForKey(key) {\n    var block = this.getBlockMap().get(key);\n    return block;\n  };\n\n  _proto.getKeyBefore = function getKeyBefore(key) {\n    return this.getBlockMap().reverse().keySeq().skipUntil(function (v) {\n      return v === key;\n    }).skip(1).first();\n  };\n\n  _proto.getKeyAfter = function getKeyAfter(key) {\n    return this.getBlockMap().keySeq().skipUntil(function (v) {\n      return v === key;\n    }).skip(1).first();\n  };\n\n  _proto.getBlockAfter = function getBlockAfter(key) {\n    return this.getBlockMap().skipUntil(function (_, k) {\n      return k === key;\n    }).skip(1).first();\n  };\n\n  _proto.getBlockBefore = function getBlockBefore(key) {\n    return this.getBlockMap().reverse().skipUntil(function (_, k) {\n      return k === key;\n    }).skip(1).first();\n  };\n\n  _proto.getBlocksAsArray = function getBlocksAsArray() {\n    return this.getBlockMap().toArray();\n  };\n\n  _proto.getFirstBlock = function getFirstBlock() {\n    return this.getBlockMap().first();\n  };\n\n  _proto.getLastBlock = function getLastBlock() {\n    return this.getBlockMap().last();\n  };\n\n  _proto.getPlainText = function getPlainText(delimiter) {\n    return this.getBlockMap().map(function (block) {\n      return block ? block.getText() : '';\n    }).join(delimiter || '\\n');\n  };\n\n  _proto.getLastCreatedEntityKey = function getLastCreatedEntityKey() {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity.__getLastCreatedEntityKey();\n  };\n\n  _proto.hasText = function hasText() {\n    var blockMap = this.getBlockMap();\n    return blockMap.size > 1 || // make sure that there are no zero width space chars\n    escape(blockMap.first().getText()).replace(/%u200B/g, '').length > 0;\n  };\n\n  _proto.createEntity = function createEntity(type, mutability, data) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__create(type, mutability, data);\n\n    return this;\n  };\n\n  _proto.mergeEntityData = function mergeEntityData(key, toMerge) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__mergeData(key, toMerge);\n\n    return this;\n  };\n\n  _proto.replaceEntityData = function replaceEntityData(key, newData) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__replaceData(key, newData);\n\n    return this;\n  };\n\n  _proto.addEntity = function addEntity(instance) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__add(instance);\n\n    return this;\n  };\n\n  _proto.getEntity = function getEntity(key) {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity.__get(key);\n  };\n\n  _proto.getAllEntities = function getAllEntities() {\n    return DraftEntity.__getAll();\n  };\n\n  _proto.loadWithEntities = function loadWithEntities(entities) {\n    return DraftEntity.__loadWithEntities(entities);\n  };\n\n  ContentState.createFromBlockArray = function createFromBlockArray( // TODO: update flow type when we completely deprecate the old entity API\n  blocks, entityMap) {\n    // TODO: remove this when we completely deprecate the old entity API\n    var theBlocks = Array.isArray(blocks) ? blocks : blocks.contentBlocks;\n    var blockMap = BlockMapBuilder.createFromArray(theBlocks);\n    var selectionState = blockMap.isEmpty() ? new SelectionState() : SelectionState.createEmpty(blockMap.first().getKey());\n    return new ContentState({\n      blockMap: blockMap,\n      entityMap: entityMap || DraftEntity,\n      selectionBefore: selectionState,\n      selectionAfter: selectionState\n    });\n  };\n\n  ContentState.createFromText = function createFromText(text) {\n    var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /\\r\\n?|\\n/g;\n    var strings = text.split(delimiter);\n    var blocks = strings.map(function (block) {\n      block = sanitizeDraftText(block);\n      return new ContentBlockNodeRecord({\n        key: generateRandomKey(),\n        text: block,\n        type: 'unstyled',\n        characterList: List(Repeat(CharacterMetadata.EMPTY, block.length))\n      });\n    });\n    return ContentState.createFromBlockArray(blocks);\n  };\n\n  ContentState.fromJS = function fromJS(state) {\n    return new ContentState(_objectSpread({}, state, {\n      blockMap: OrderedMap(state.blockMap).map(ContentState.createContentBlockFromJS),\n      selectionBefore: new SelectionState(state.selectionBefore),\n      selectionAfter: new SelectionState(state.selectionAfter)\n    }));\n  };\n\n  ContentState.createContentBlockFromJS = function createContentBlockFromJS(block) {\n    var characterList = block.characterList;\n    return new ContentBlockNodeRecord(_objectSpread({}, block, {\n      data: ImmutableMap(block.data),\n      characterList: characterList != null ? List((Array.isArray(characterList) ? characterList : getOwnObjectValues(characterList)).map(function (c) {\n        return CharacterMetadata.fromJS(c);\n      })) : undefined\n    }));\n  };\n\n  return ContentState;\n}(ContentStateRecord);\n\nmodule.exports = ContentState;"]},"metadata":{},"sourceType":"script"}