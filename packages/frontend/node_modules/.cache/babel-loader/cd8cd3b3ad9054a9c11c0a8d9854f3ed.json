{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar _assign = require(\"object-assign\");\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar DraftEditorTextNode = require(\"./DraftEditorTextNode.react\");\n\nvar React = require(\"react\");\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar isHTMLBRElement = require(\"./isHTMLBRElement\");\n\nvar setDraftEditorSelection = require(\"./setDraftEditorSelection\").setDraftEditorSelection;\n/**\n * All leaf nodes in the editor are spans with single text nodes. Leaf\n * elements are styled based on the merging of an optional custom style map\n * and a default style map.\n *\n * `DraftEditorLeaf` also provides a wrapper for calling into the imperative\n * DOM Selection API. In this way, top-level components can declaratively\n * maintain the selection state.\n */\n\n\nvar DraftEditorLeaf = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(DraftEditorLeaf, _React$Component);\n\n  function DraftEditorLeaf() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"leaf\", void 0);\n\n    return _this;\n  }\n\n  var _proto = DraftEditorLeaf.prototype;\n\n  _proto._setSelection = function _setSelection() {\n    var selection = this.props.selection; // If selection state is irrelevant to the parent block, no-op.\n\n    if (selection == null || !selection.getHasFocus()) {\n      return;\n    }\n\n    var _this$props = this.props,\n        block = _this$props.block,\n        start = _this$props.start,\n        text = _this$props.text;\n    var blockKey = block.getKey();\n    var end = start + text.length;\n\n    if (!selection.hasEdgeWithin(blockKey, start, end)) {\n      return;\n    } // Determine the appropriate target node for selection. If the child\n    // is not a text node, it is a <br /> spacer. In this case, use the\n    // <span> itself as the selection target.\n\n\n    var node = this.leaf;\n    !node ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Missing node') : invariant(false) : void 0;\n    var child = node.firstChild;\n    !child ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Missing child') : invariant(false) : void 0;\n    var targetNode;\n\n    if (child.nodeType === Node.TEXT_NODE) {\n      targetNode = child;\n    } else if (isHTMLBRElement(child)) {\n      targetNode = node;\n    } else {\n      targetNode = child.firstChild;\n      !targetNode ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Missing targetNode') : invariant(false) : void 0;\n    }\n\n    setDraftEditorSelection(selection, targetNode, blockKey, start, end);\n  };\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var leafNode = this.leaf;\n    !leafNode ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Missing leafNode') : invariant(false) : void 0;\n    var shouldUpdate = leafNode.textContent !== nextProps.text || nextProps.styleSet !== this.props.styleSet || nextProps.forceSelection;\n    return shouldUpdate;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this._setSelection();\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._setSelection();\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var block = this.props.block;\n    var text = this.props.text; // If the leaf is at the end of its block and ends in a soft newline, append\n    // an extra line feed character. Browsers collapse trailing newline\n    // characters, which leaves the cursor in the wrong place after a\n    // shift+enter. The extra character repairs this.\n\n    if (text.endsWith('\\n') && this.props.isLast) {\n      text += '\\n';\n    }\n\n    var _this$props2 = this.props,\n        customStyleMap = _this$props2.customStyleMap,\n        customStyleFn = _this$props2.customStyleFn,\n        offsetKey = _this$props2.offsetKey,\n        styleSet = _this$props2.styleSet;\n    var styleObj = styleSet.reduce(function (map, styleName) {\n      var mergedStyles = {};\n      var style = customStyleMap[styleName];\n\n      if (style !== undefined && map.textDecoration !== style.textDecoration) {\n        // .trim() is necessary for IE9/10/11 and Edge\n        mergedStyles.textDecoration = [map.textDecoration, style.textDecoration].join(' ').trim();\n      }\n\n      return _assign(map, style, mergedStyles);\n    }, {});\n\n    if (customStyleFn) {\n      var newStyles = customStyleFn(styleSet, block);\n      styleObj = _assign(styleObj, newStyles);\n    }\n\n    return React.createElement(\"span\", {\n      \"data-offset-key\": offsetKey,\n      ref: function ref(_ref) {\n        return _this2.leaf = _ref;\n      },\n      style: styleObj\n    }, React.createElement(DraftEditorTextNode, null, text));\n  };\n\n  return DraftEditorLeaf;\n}(React.Component);\n\nmodule.exports = DraftEditorLeaf;","map":{"version":3,"sources":["/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/node_modules/draft-js/lib/DraftEditorLeaf.react.js"],"names":["_assign","require","_assertThisInitialized","self","ReferenceError","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","_defineProperty","obj","key","value","defineProperty","enumerable","configurable","writable","DraftEditorTextNode","React","invariant","isHTMLBRElement","setDraftEditorSelection","DraftEditorLeaf","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","_proto","_setSelection","selection","props","getHasFocus","_this$props","block","start","text","blockKey","getKey","end","hasEdgeWithin","node","leaf","process","env","NODE_ENV","child","firstChild","targetNode","nodeType","Node","TEXT_NODE","shouldComponentUpdate","nextProps","leafNode","shouldUpdate","textContent","styleSet","forceSelection","componentDidUpdate","componentDidMount","render","_this2","endsWith","isLast","_this$props2","customStyleMap","customStyleFn","offsetKey","styleObj","reduce","map","styleName","mergedStyles","style","undefined","textDecoration","join","trim","newStyles","createElement","ref","_ref","Component","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar _assign = require(\"object-assign\");\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar DraftEditorTextNode = require(\"./DraftEditorTextNode.react\");\n\nvar React = require(\"react\");\n\nvar invariant = require(\"fbjs/lib/invariant\");\n\nvar isHTMLBRElement = require(\"./isHTMLBRElement\");\n\nvar setDraftEditorSelection = require(\"./setDraftEditorSelection\").setDraftEditorSelection;\n\n/**\n * All leaf nodes in the editor are spans with single text nodes. Leaf\n * elements are styled based on the merging of an optional custom style map\n * and a default style map.\n *\n * `DraftEditorLeaf` also provides a wrapper for calling into the imperative\n * DOM Selection API. In this way, top-level components can declaratively\n * maintain the selection state.\n */\nvar DraftEditorLeaf = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(DraftEditorLeaf, _React$Component);\n\n  function DraftEditorLeaf() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"leaf\", void 0);\n\n    return _this;\n  }\n\n  var _proto = DraftEditorLeaf.prototype;\n\n  _proto._setSelection = function _setSelection() {\n    var selection = this.props.selection; // If selection state is irrelevant to the parent block, no-op.\n\n    if (selection == null || !selection.getHasFocus()) {\n      return;\n    }\n\n    var _this$props = this.props,\n        block = _this$props.block,\n        start = _this$props.start,\n        text = _this$props.text;\n    var blockKey = block.getKey();\n    var end = start + text.length;\n\n    if (!selection.hasEdgeWithin(blockKey, start, end)) {\n      return;\n    } // Determine the appropriate target node for selection. If the child\n    // is not a text node, it is a <br /> spacer. In this case, use the\n    // <span> itself as the selection target.\n\n\n    var node = this.leaf;\n    !node ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Missing node') : invariant(false) : void 0;\n    var child = node.firstChild;\n    !child ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Missing child') : invariant(false) : void 0;\n    var targetNode;\n\n    if (child.nodeType === Node.TEXT_NODE) {\n      targetNode = child;\n    } else if (isHTMLBRElement(child)) {\n      targetNode = node;\n    } else {\n      targetNode = child.firstChild;\n      !targetNode ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Missing targetNode') : invariant(false) : void 0;\n    }\n\n    setDraftEditorSelection(selection, targetNode, blockKey, start, end);\n  };\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var leafNode = this.leaf;\n    !leafNode ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Missing leafNode') : invariant(false) : void 0;\n    var shouldUpdate = leafNode.textContent !== nextProps.text || nextProps.styleSet !== this.props.styleSet || nextProps.forceSelection;\n    return shouldUpdate;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this._setSelection();\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this._setSelection();\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var block = this.props.block;\n    var text = this.props.text; // If the leaf is at the end of its block and ends in a soft newline, append\n    // an extra line feed character. Browsers collapse trailing newline\n    // characters, which leaves the cursor in the wrong place after a\n    // shift+enter. The extra character repairs this.\n\n    if (text.endsWith('\\n') && this.props.isLast) {\n      text += '\\n';\n    }\n\n    var _this$props2 = this.props,\n        customStyleMap = _this$props2.customStyleMap,\n        customStyleFn = _this$props2.customStyleFn,\n        offsetKey = _this$props2.offsetKey,\n        styleSet = _this$props2.styleSet;\n    var styleObj = styleSet.reduce(function (map, styleName) {\n      var mergedStyles = {};\n      var style = customStyleMap[styleName];\n\n      if (style !== undefined && map.textDecoration !== style.textDecoration) {\n        // .trim() is necessary for IE9/10/11 and Edge\n        mergedStyles.textDecoration = [map.textDecoration, style.textDecoration].join(' ').trim();\n      }\n\n      return _assign(map, style, mergedStyles);\n    }, {});\n\n    if (customStyleFn) {\n      var newStyles = customStyleFn(styleSet, block);\n      styleObj = _assign(styleObj, newStyles);\n    }\n\n    return React.createElement(\"span\", {\n      \"data-offset-key\": offsetKey,\n      ref: function ref(_ref) {\n        return _this2.leaf = _ref;\n      },\n      style: styleObj\n    }, React.createElement(DraftEditorTextNode, null, text));\n  };\n\n  return DraftEditorLeaf;\n}(React.Component);\n\nmodule.exports = DraftEditorLeaf;"]},"metadata":{},"sourceType":"script"}