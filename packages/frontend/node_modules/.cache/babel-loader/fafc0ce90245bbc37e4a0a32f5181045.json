{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n/**\n * Obtain the start and end positions of the range that has the\n * specified entity applied to it.\n *\n * Entity keys are applied only to contiguous stretches of text, so this\n * method searches for the first instance of the entity key and returns\n * the subsequent range.\n */\n\n\nfunction getRangesForDraftEntity(block, key) {\n  var ranges = [];\n  block.findEntityRanges(function (c) {\n    return c.getEntity() === key;\n  }, function (start, end) {\n    ranges.push({\n      start: start,\n      end: end\n    });\n  });\n  !!!ranges.length ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Entity key not found in this range.') : invariant(false) : void 0;\n  return ranges;\n}\n\nmodule.exports = getRangesForDraftEntity;","map":{"version":3,"sources":["/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/node_modules/draft-js/lib/getRangesForDraftEntity.js"],"names":["invariant","require","getRangesForDraftEntity","block","key","ranges","findEntityRanges","c","getEntity","start","end","push","length","process","env","NODE_ENV","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,oBAAD,CAAvB;AACA;;;;;;;;;;AAUA,SAASC,uBAAT,CAAiCC,KAAjC,EAAwCC,GAAxC,EAA6C;AAC3C,MAAIC,MAAM,GAAG,EAAb;AACAF,EAAAA,KAAK,CAACG,gBAAN,CAAuB,UAAUC,CAAV,EAAa;AAClC,WAAOA,CAAC,CAACC,SAAF,OAAkBJ,GAAzB;AACD,GAFD,EAEG,UAAUK,KAAV,EAAiBC,GAAjB,EAAsB;AACvBL,IAAAA,MAAM,CAACM,IAAP,CAAY;AACVF,MAAAA,KAAK,EAAEA,KADG;AAEVC,MAAAA,GAAG,EAAEA;AAFK,KAAZ;AAID,GAPD;AAQA,GAAC,CAAC,CAACL,MAAM,CAACO,MAAV,GAAmBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCf,SAAS,CAAC,KAAD,EAAQ,qCAAR,CAAjD,GAAkGA,SAAS,CAAC,KAAD,CAA9H,GAAwI,KAAK,CAA7I;AACA,SAAOK,MAAP;AACD;;AAEDW,MAAM,CAACC,OAAP,GAAiBf,uBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar invariant = require(\"fbjs/lib/invariant\");\n/**\n * Obtain the start and end positions of the range that has the\n * specified entity applied to it.\n *\n * Entity keys are applied only to contiguous stretches of text, so this\n * method searches for the first instance of the entity key and returns\n * the subsequent range.\n */\n\n\nfunction getRangesForDraftEntity(block, key) {\n  var ranges = [];\n  block.findEntityRanges(function (c) {\n    return c.getEntity() === key;\n  }, function (start, end) {\n    ranges.push({\n      start: start,\n      end: end\n    });\n  });\n  !!!ranges.length ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Entity key not found in this range.') : invariant(false) : void 0;\n  return ranges;\n}\n\nmodule.exports = getRangesForDraftEntity;"]},"metadata":{},"sourceType":"script"}