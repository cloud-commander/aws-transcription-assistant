{"ast":null,"code":"import PropTypes from \"prop-types\";\nvar normalEasingPropType = PropTypes.oneOf([\"linear\", \"ease\", \"ease-in\", \"ease-out\", \"ease-in-out\"]); // A regex to test if a string matches the CSS cubic-beizer format\n// cubic-bezier(n,n,n,n)\n// See: https://regex101.com/r/n2fAzV for details\n\nvar cubicEasingRegex = /^cubic-bezier\\((-?((\\d*\\.\\d+)|\\d+),){3}(-?(\\d*\\.\\d+)|\\d+)\\)$/;\n\nvar cubicEasingPropType = function cubicEasingPropType(props, propName, componentName) {\n  if (!cubicEasingRegex.test(props[propName])) {\n    return new Error(\"Invalid prop `\" + propName + \"` supplied to\" + \" `\" + componentName + \"`. Validation failed.\");\n  }\n};\n\nvar easingPropType = PropTypes.oneOfType([normalEasingPropType, cubicEasingPropType]);\nexport { easingPropType };","map":{"version":3,"sources":["/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/packages/frontend/node_modules/react-simple-tooltip/es/utils/propTypes.js"],"names":["PropTypes","normalEasingPropType","oneOf","cubicEasingRegex","cubicEasingPropType","props","propName","componentName","test","Error","easingPropType","oneOfType"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAEA,IAAIC,oBAAoB,GAAGD,SAAS,CAACE,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,SAAnB,EAA8B,UAA9B,EAA0C,aAA1C,CAAhB,CAA3B,C,CAEA;AACA;AACA;;AACA,IAAIC,gBAAgB,GAAG,8DAAvB;;AAEA,IAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,KAA7B,EAAoCC,QAApC,EAA8CC,aAA9C,EAA6D;AACrF,MAAI,CAACJ,gBAAgB,CAACK,IAAjB,CAAsBH,KAAK,CAACC,QAAD,CAA3B,CAAL,EAA6C;AAC3C,WAAO,IAAIG,KAAJ,CAAU,mBAAmBH,QAAnB,GAA8B,eAA9B,GAAgD,IAAhD,GAAuDC,aAAvD,GAAuE,uBAAjF,CAAP;AACD;AACF,CAJD;;AAMA,IAAIG,cAAc,GAAGV,SAAS,CAACW,SAAV,CAAoB,CAACV,oBAAD,EAAuBG,mBAAvB,CAApB,CAArB;AAEA,SAASM,cAAT","sourcesContent":["import PropTypes from \"prop-types\";\n\nvar normalEasingPropType = PropTypes.oneOf([\"linear\", \"ease\", \"ease-in\", \"ease-out\", \"ease-in-out\"]);\n\n// A regex to test if a string matches the CSS cubic-beizer format\n// cubic-bezier(n,n,n,n)\n// See: https://regex101.com/r/n2fAzV for details\nvar cubicEasingRegex = /^cubic-bezier\\((-?((\\d*\\.\\d+)|\\d+),){3}(-?(\\d*\\.\\d+)|\\d+)\\)$/;\n\nvar cubicEasingPropType = function cubicEasingPropType(props, propName, componentName) {\n  if (!cubicEasingRegex.test(props[propName])) {\n    return new Error(\"Invalid prop `\" + propName + \"` supplied to\" + \" `\" + componentName + \"`. Validation failed.\");\n  }\n};\n\nvar easingPropType = PropTypes.oneOfType([normalEasingPropType, cubicEasingPropType]);\n\nexport { easingPropType };"]},"metadata":{},"sourceType":"module"}