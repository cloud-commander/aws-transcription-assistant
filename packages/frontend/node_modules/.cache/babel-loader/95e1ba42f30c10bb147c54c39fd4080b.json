{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar util_utf8_browser_1 = require(\"@aws-sdk/util-utf8-browser\");\n\nvar isEmptyData_1 = require(\"./isEmptyData\");\n\nvar constants_1 = require(\"./constants\");\n\nvar util_locate_window_1 = require(\"@aws-sdk/util-locate-window\");\n\nvar Sha256 =\n/** @class */\nfunction () {\n  function Sha256(secret) {\n    this.toHash = new Uint8Array(0);\n\n    if (secret !== void 0) {\n      this.key = new Promise(function (resolve, reject) {\n        util_locate_window_1.locateWindow().crypto.subtle.importKey(\"raw\", convertToBuffer(secret), constants_1.SHA_256_HMAC_ALGO, false, [\"sign\"]).then(resolve, reject);\n      });\n      this.key.catch(function () {});\n    }\n  }\n\n  Sha256.prototype.update = function (data) {\n    if (isEmptyData_1.isEmptyData(data)) {\n      return;\n    }\n\n    var update = convertToBuffer(data);\n    var typedArray = new Uint8Array(this.toHash.byteLength + update.byteLength);\n    typedArray.set(this.toHash, 0);\n    typedArray.set(update, this.toHash.byteLength);\n    this.toHash = typedArray;\n  };\n\n  Sha256.prototype.digest = function () {\n    var _this = this;\n\n    if (this.key) {\n      return this.key.then(function (key) {\n        return util_locate_window_1.locateWindow().crypto.subtle.sign(constants_1.SHA_256_HMAC_ALGO, key, _this.toHash).then(function (data) {\n          return new Uint8Array(data);\n        });\n      });\n    }\n\n    if (isEmptyData_1.isEmptyData(this.toHash)) {\n      return Promise.resolve(constants_1.EMPTY_DATA_SHA_256);\n    }\n\n    return Promise.resolve().then(function () {\n      return util_locate_window_1.locateWindow().crypto.subtle.digest(constants_1.SHA_256_HASH, _this.toHash);\n    }).then(function (data) {\n      return Promise.resolve(new Uint8Array(data));\n    });\n  };\n\n  return Sha256;\n}();\n\nexports.Sha256 = Sha256;\n\nfunction convertToBuffer(data) {\n  if (typeof data === \"string\") {\n    return util_utf8_browser_1.fromUtf8(data);\n  }\n\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n  }\n\n  return new Uint8Array(data);\n}","map":{"version":3,"sources":["../src/webCryptoSha256.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_utf8_browser_1 = require(\"@aws-sdk/util-utf8-browser\");\nvar isEmptyData_1 = require(\"./isEmptyData\");\nvar constants_1 = require(\"./constants\");\nvar util_locate_window_1 = require(\"@aws-sdk/util-locate-window\");\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        this.toHash = new Uint8Array(0);\n        if (secret !== void 0) {\n            this.key = new Promise(function (resolve, reject) {\n                util_locate_window_1.locateWindow()\n                    .crypto.subtle.importKey(\"raw\", convertToBuffer(secret), constants_1.SHA_256_HMAC_ALGO, false, [\"sign\"])\n                    .then(resolve, reject);\n            });\n            this.key.catch(function () { });\n        }\n    }\n    Sha256.prototype.update = function (data) {\n        if (isEmptyData_1.isEmptyData(data)) {\n            return;\n        }\n        var update = convertToBuffer(data);\n        var typedArray = new Uint8Array(this.toHash.byteLength + update.byteLength);\n        typedArray.set(this.toHash, 0);\n        typedArray.set(update, this.toHash.byteLength);\n        this.toHash = typedArray;\n    };\n    Sha256.prototype.digest = function () {\n        var _this = this;\n        if (this.key) {\n            return this.key.then(function (key) {\n                return util_locate_window_1.locateWindow()\n                    .crypto.subtle.sign(constants_1.SHA_256_HMAC_ALGO, key, _this.toHash)\n                    .then(function (data) { return new Uint8Array(data); });\n            });\n        }\n        if (isEmptyData_1.isEmptyData(this.toHash)) {\n            return Promise.resolve(constants_1.EMPTY_DATA_SHA_256);\n        }\n        return Promise.resolve()\n            .then(function () {\n            return util_locate_window_1.locateWindow().crypto.subtle.digest(constants_1.SHA_256_HASH, _this.toHash);\n        })\n            .then(function (data) { return Promise.resolve(new Uint8Array(data)); });\n    };\n    return Sha256;\n}());\nexports.Sha256 = Sha256;\nfunction convertToBuffer(data) {\n    if (typeof data === \"string\") {\n        return util_utf8_browser_1.fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n//# sourceMappingURL=webCryptoSha256.js.map"]},"metadata":{},"sourceType":"script"}