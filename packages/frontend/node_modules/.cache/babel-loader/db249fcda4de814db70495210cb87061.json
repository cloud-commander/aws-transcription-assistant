{"ast":null,"code":"import textSegmentation from './text-segmentation/index.js';\nimport addLineBreakBetweenSentences from './line-break-between-sentences/index.js';\nimport foldWords from './fold/index.js';\nimport divideIntoTwoLines from './divide-into-two-lines/index.js';\n/**\n * Takes in array of word object,\n *  and returns string containing all the text\n * @param {array} words - Words\n */\n\nfunction getTextFromWordsList(words) {\n  return words.map(word => {\n    return word.text;\n  }).join(' ');\n}\n/**\n *\n * @param {*} textInput - can be either plain text string or an array of word objects\n */\n\n\nfunction preSegmentText(textInput, tmpNumberOfCharPerLine = 35) {\n  let text = textInput;\n\n  if (typeof textInput === 'object') {\n    text = getTextFromWordsList(textInput);\n  }\n\n  const segmentedText = textSegmentation(text); // - 2.Line brek between stentences\n\n  const textWithLineBreakBetweenSentences = addLineBreakBetweenSentences(segmentedText); // - 3.Fold char limit per line\n\n  const foldedText = foldWords(textWithLineBreakBetweenSentences, tmpNumberOfCharPerLine); // - 4.Divide into two lines\n  // console.log(foldedText)\n\n  const textDividedIntoTwoLines = divideIntoTwoLines(foldedText);\n  return textDividedIntoTwoLines;\n}\n\nexport { preSegmentText, getTextFromWordsList };\nexport default preSegmentText;","map":{"version":3,"sources":["/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/packages/frontend/src/packages/export-adapters/subtitles-generator/presegment-text/index.js"],"names":["textSegmentation","addLineBreakBetweenSentences","foldWords","divideIntoTwoLines","getTextFromWordsList","words","map","word","text","join","preSegmentText","textInput","tmpNumberOfCharPerLine","segmentedText","textWithLineBreakBetweenSentences","foldedText","textDividedIntoTwoLines"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,4BAAP,MAAyC,yCAAzC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AAEA;;;;;;AAKA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AACnC,SAAOA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AAAC,WAAOA,IAAI,CAACC,IAAZ;AAAkB,GAAvC,EAAyCC,IAAzC,CAA8C,GAA9C,CAAP;AACD;AAED;;;;;;AAIA,SAASC,cAAT,CAAwBC,SAAxB,EAAmCC,sBAAsB,GAAG,EAA5D,EAAgE;AAC9D,MAAIJ,IAAI,GAAGG,SAAX;;AACA,MAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;AACjCH,IAAAA,IAAI,GAAGJ,oBAAoB,CAACO,SAAD,CAA3B;AACD;;AACD,QAAME,aAAa,GAAGb,gBAAgB,CAACQ,IAAD,CAAtC,CAL8D,CAM9D;;AACA,QAAMM,iCAAiC,GAAGb,4BAA4B,CAACY,aAAD,CAAtE,CAP8D,CAQ9D;;AACA,QAAME,UAAU,GAAGb,SAAS,CAACY,iCAAD,EAAoCF,sBAApC,CAA5B,CAT8D,CAU9D;AACA;;AACA,QAAMI,uBAAuB,GAAGb,kBAAkB,CAACY,UAAD,CAAlD;AAEA,SAAOC,uBAAP;AACD;;AAED,SACEN,cADF,EAEEN,oBAFF;AAKA,eAAeM,cAAf","sourcesContent":["import textSegmentation from './text-segmentation/index.js';\nimport addLineBreakBetweenSentences from './line-break-between-sentences/index.js';\nimport foldWords from './fold/index.js';\nimport divideIntoTwoLines from './divide-into-two-lines/index.js';\n\n/**\n * Takes in array of word object,\n *  and returns string containing all the text\n * @param {array} words - Words\n */\nfunction getTextFromWordsList(words) {\n  return words.map((word) => {return word.text;}).join(' ');\n}\n\n/**\n *\n * @param {*} textInput - can be either plain text string or an array of word objects\n */\nfunction preSegmentText(textInput, tmpNumberOfCharPerLine = 35) {\n  let text = textInput;\n  if (typeof textInput === 'object') {\n    text = getTextFromWordsList(textInput);\n  }\n  const segmentedText = textSegmentation(text);\n  // - 2.Line brek between stentences\n  const textWithLineBreakBetweenSentences = addLineBreakBetweenSentences(segmentedText);\n  // - 3.Fold char limit per line\n  const foldedText = foldWords(textWithLineBreakBetweenSentences, tmpNumberOfCharPerLine);\n  // - 4.Divide into two lines\n  // console.log(foldedText)\n  const textDividedIntoTwoLines = divideIntoTwoLines(foldedText);\n\n  return textDividedIntoTwoLines;\n}\n\nexport {\n  preSegmentText,\n  getTextFromWordsList\n};\n\nexport default preSegmentText;"]},"metadata":{},"sourceType":"module"}