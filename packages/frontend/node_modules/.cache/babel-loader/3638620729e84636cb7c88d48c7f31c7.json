{"ast":null,"code":"var _jsxFileName = \"/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/packages/frontend/src/packages/components/timed-text-editor/Word.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Word extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.generateConfidence = data => {\n      // handling edge case where confidence score not present\n      if (data.confidence) {\n        return data.confidence > 0.6 ? 'high' : 'low';\n      }\n\n      return 'high';\n    };\n\n    this.generatePreviousTimes = data => {\n      let prevTimes = '';\n\n      for (let i = 0; i < data.start; i++) {\n        prevTimes += `${i} `;\n      }\n\n      if (data.start % 1 > 0) {\n        // Find the closest quarter-second to the current time, for more dynamic results\n        const dec = Math.floor(data.start % 1 * 4.0) / 4.0;\n        prevTimes += ` ${Math.floor(data.start) + dec}`;\n      }\n\n      return prevTimes;\n    };\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.decoratedText !== this.props.decoratedText) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    const data = this.props.entityKey ? this.props.contentState.getEntity(this.props.entityKey).getData() : {};\n    return /*#__PURE__*/React.createElement(\"span\", {\n      \"data-start\": data.start,\n      \"data-end\": data.end,\n      \"data-confidence\": this.generateConfidence(data),\n      \"data-prev-times\": this.generatePreviousTimes(data),\n      \"data-entity-key\": data.key,\n      className: \"Word\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nWord.propTypes = {\n  contentState: PropTypes.object,\n  entityKey: PropTypes.string,\n  children: PropTypes.array\n};\nexport default Word;","map":{"version":3,"sources":["/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/packages/frontend/src/packages/components/timed-text-editor/Word.js"],"names":["React","Component","PropTypes","Word","generateConfidence","data","confidence","generatePreviousTimes","prevTimes","i","start","dec","Math","floor","shouldComponentUpdate","nextProps","decoratedText","props","render","entityKey","contentState","getEntity","getData","end","key","children","propTypes","object","string","array"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAU3BG,kBAV2B,GAULC,IAAD,IAAU;AAC7B;AACA,UAAIA,IAAI,CAACC,UAAT,EAAqB;AACnB,eAAOD,IAAI,CAACC,UAAL,GAAkB,GAAlB,GAAwB,MAAxB,GAAiC,KAAxC;AACD;;AAED,aAAO,MAAP;AACD,KAjB0B;;AAAA,SAmB3BC,qBAnB2B,GAmBFF,IAAD,IAAU;AAChC,UAAIG,SAAS,GAAG,EAAhB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACK,KAAzB,EAAgCD,CAAC,EAAjC,EAAqC;AACnCD,QAAAA,SAAS,IAAK,GAAGC,CAAG,GAApB;AACD;;AAED,UAAIJ,IAAI,CAACK,KAAL,GAAa,CAAb,GAAiB,CAArB,EAAwB;AACtB;AACA,cAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAYR,IAAI,CAACK,KAAL,GAAa,CAAd,GAAmB,GAA9B,IAAqC,GAAjD;AACAF,QAAAA,SAAS,IAAK,IAAII,IAAI,CAACC,KAAL,CAAWR,IAAI,CAACK,KAAhB,IAAyBC,GAAK,EAAhD;AACD;;AAED,aAAOH,SAAP;AACD,KAjC0B;AAAA;;AAE3BM,EAAAA,qBAAqB,CAACC,SAAD,EAAY;AAC/B,QAAKA,SAAS,CAACC,aAAV,KAA4B,KAAKC,KAAL,CAAWD,aAA5C,EAA2D;AACzD,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD;;AA2BDE,EAAAA,MAAM,GAAG;AACP,UAAMb,IAAI,GAAG,KAAKY,KAAL,CAAWE,SAAX,GACT,KAAKF,KAAL,CAAWG,YAAX,CAAwBC,SAAxB,CAAkC,KAAKJ,KAAL,CAAWE,SAA7C,EAAwDG,OAAxD,EADS,GAET,EAFJ;AAIA,wBACE;AACE,oBAAajB,IAAI,CAACK,KADpB;AAEE,kBAAWL,IAAI,CAACkB,GAFlB;AAGE,yBAAoB,KAAKnB,kBAAL,CAAwBC,IAAxB,CAHtB;AAIE,yBAAoB,KAAKE,qBAAL,CAA2BF,IAA3B,CAJtB;AAKE,yBAAkBA,IAAI,CAACmB,GALzB;AAME,MAAA,SAAS,EAAC,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAKP,KAAL,CAAWQ,QAPd,CADF;AAWD;;AAnD0B;;AAsD7BtB,IAAI,CAACuB,SAAL,GAAiB;AACfN,EAAAA,YAAY,EAAElB,SAAS,CAACyB,MADT;AAEfR,EAAAA,SAAS,EAAEjB,SAAS,CAAC0B,MAFN;AAGfH,EAAAA,QAAQ,EAAEvB,SAAS,CAAC2B;AAHL,CAAjB;AAMA,eAAe1B,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Word extends Component {\n\n  shouldComponentUpdate(nextProps) {\n    if ( nextProps.decoratedText !== this.props.decoratedText) {\n      return true;\n    }\n\n    return false;\n  }\n\n  generateConfidence = (data) => {\n    // handling edge case where confidence score not present\n    if (data.confidence) {\n      return data.confidence > 0.6 ? 'high' : 'low';\n    }\n\n    return 'high';\n  }\n\n  generatePreviousTimes = (data) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < data.start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (data.start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((data.start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(data.start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n\n  render() {\n    const data = this.props.entityKey\n      ? this.props.contentState.getEntity(this.props.entityKey).getData()\n      : {};\n\n    return (\n      <span\n        data-start={ data.start }\n        data-end={ data.end }\n        data-confidence = { this.generateConfidence(data) }\n        data-prev-times = { this.generatePreviousTimes(data) }\n        data-entity-key={ data.key }\n        className=\"Word\">\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nWord.propTypes = {\n  contentState: PropTypes.object,\n  entityKey: PropTypes.string,\n  children: PropTypes.array\n};\n\nexport default Word;\n"]},"metadata":{},"sourceType":"module"}