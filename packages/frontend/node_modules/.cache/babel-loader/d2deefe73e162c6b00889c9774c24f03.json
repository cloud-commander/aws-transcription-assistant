{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { TextractClient } from \"./TextractClient\";\nimport { AnalyzeDocumentCommand } from \"./commands/AnalyzeDocumentCommand\";\nimport { DetectDocumentTextCommand } from \"./commands/DetectDocumentTextCommand\";\nimport { GetDocumentAnalysisCommand } from \"./commands/GetDocumentAnalysisCommand\";\nimport { GetDocumentTextDetectionCommand } from \"./commands/GetDocumentTextDetectionCommand\";\nimport { StartDocumentAnalysisCommand } from \"./commands/StartDocumentAnalysisCommand\";\nimport { StartDocumentTextDetectionCommand } from \"./commands/StartDocumentTextDetectionCommand\";\n/**\n * <p>Amazon Textract detects and analyzes text in documents and converts it\n *          into machine-readable text. This is the API reference documentation for\n *          Amazon Textract.</p>\n */\n\nvar Textract =\n/** @class */\nfunction (_super) {\n  __extends(Textract, _super);\n\n  function Textract() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Textract.prototype.analyzeDocument = function (args, optionsOrCb, cb) {\n    var command = new AnalyzeDocumentCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Textract.prototype.detectDocumentText = function (args, optionsOrCb, cb) {\n    var command = new DetectDocumentTextCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Textract.prototype.getDocumentAnalysis = function (args, optionsOrCb, cb) {\n    var command = new GetDocumentAnalysisCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Textract.prototype.getDocumentTextDetection = function (args, optionsOrCb, cb) {\n    var command = new GetDocumentTextDetectionCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Textract.prototype.startDocumentAnalysis = function (args, optionsOrCb, cb) {\n    var command = new StartDocumentAnalysisCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  Textract.prototype.startDocumentTextDetection = function (args, optionsOrCb, cb) {\n    var command = new StartDocumentTextDetectionCommand(args);\n\n    if (typeof optionsOrCb === \"function\") {\n      this.send(command, optionsOrCb);\n    } else if (typeof cb === \"function\") {\n      if (typeof optionsOrCb !== \"object\") throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n      this.send(command, optionsOrCb || {}, cb);\n    } else {\n      return this.send(command, optionsOrCb);\n    }\n  };\n\n  return Textract;\n}(TextractClient);\n\nexport { Textract };","map":{"version":3,"sources":["../../Textract.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { TextractClient } from \"./TextractClient\";\nimport { AnalyzeDocumentCommand, } from \"./commands/AnalyzeDocumentCommand\";\nimport { DetectDocumentTextCommand, } from \"./commands/DetectDocumentTextCommand\";\nimport { GetDocumentAnalysisCommand, } from \"./commands/GetDocumentAnalysisCommand\";\nimport { GetDocumentTextDetectionCommand, } from \"./commands/GetDocumentTextDetectionCommand\";\nimport { StartDocumentAnalysisCommand, } from \"./commands/StartDocumentAnalysisCommand\";\nimport { StartDocumentTextDetectionCommand, } from \"./commands/StartDocumentTextDetectionCommand\";\n/**\n * <p>Amazon Textract detects and analyzes text in documents and converts it\n *          into machine-readable text. This is the API reference documentation for\n *          Amazon Textract.</p>\n */\nvar Textract = /** @class */ (function (_super) {\n    __extends(Textract, _super);\n    function Textract() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Textract.prototype.analyzeDocument = function (args, optionsOrCb, cb) {\n        var command = new AnalyzeDocumentCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Textract.prototype.detectDocumentText = function (args, optionsOrCb, cb) {\n        var command = new DetectDocumentTextCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Textract.prototype.getDocumentAnalysis = function (args, optionsOrCb, cb) {\n        var command = new GetDocumentAnalysisCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Textract.prototype.getDocumentTextDetection = function (args, optionsOrCb, cb) {\n        var command = new GetDocumentTextDetectionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Textract.prototype.startDocumentAnalysis = function (args, optionsOrCb, cb) {\n        var command = new StartDocumentAnalysisCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    Textract.prototype.startDocumentTextDetection = function (args, optionsOrCb, cb) {\n        var command = new StartDocumentTextDetectionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(\"Expect http options but get \" + typeof optionsOrCb);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    };\n    return Textract;\n}(TextractClient));\nexport { Textract };\n//# sourceMappingURL=Textract.js.map"]},"metadata":{},"sourceType":"module"}