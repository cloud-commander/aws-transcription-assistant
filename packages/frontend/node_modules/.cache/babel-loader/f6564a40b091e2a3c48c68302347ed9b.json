{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar EditorState = require(\"./EditorState\");\n\nvar containsNode = require(\"fbjs/lib/containsNode\");\n\nvar getActiveElement = require(\"fbjs/lib/getActiveElement\");\n\nfunction editOnBlur(editor, e) {\n  // In a contentEditable element, when you select a range and then click\n  // another active element, this does trigger a `blur` event but will not\n  // remove the DOM selection from the contenteditable.\n  // This is consistent across all browsers, but we prefer that the editor\n  // behave like a textarea, where a `blur` event clears the DOM selection.\n  // We therefore force the issue to be certain, checking whether the active\n  // element is `body` to force it when blurring occurs within the window (as\n  // opposed to clicking to another tab or window).\n  var ownerDocument = e.currentTarget.ownerDocument;\n\n  if ( // This ESLint rule conflicts with `sketchy-null-bool` flow check\n  // eslint-disable-next-line no-extra-boolean-cast\n  !Boolean(editor.props.preserveSelectionOnBlur) && getActiveElement(ownerDocument) === ownerDocument.body) {\n    var _selection = ownerDocument.defaultView.getSelection();\n\n    var editorNode = editor.editor;\n\n    if (_selection.rangeCount === 1 && containsNode(editorNode, _selection.anchorNode) && containsNode(editorNode, _selection.focusNode)) {\n      _selection.removeAllRanges();\n    }\n  }\n\n  var editorState = editor._latestEditorState;\n  var currentSelection = editorState.getSelection();\n\n  if (!currentSelection.getHasFocus()) {\n    return;\n  }\n\n  var selection = currentSelection.set('hasFocus', false);\n  editor.props.onBlur && editor.props.onBlur(e);\n  editor.update(EditorState.acceptSelection(editorState, selection));\n}\n\nmodule.exports = editOnBlur;","map":{"version":3,"sources":["/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/node_modules/draft-js/lib/editOnBlur.js"],"names":["EditorState","require","containsNode","getActiveElement","editOnBlur","editor","e","ownerDocument","currentTarget","Boolean","props","preserveSelectionOnBlur","body","_selection","defaultView","getSelection","editorNode","rangeCount","anchorNode","focusNode","removeAllRanges","editorState","_latestEditorState","currentSelection","getHasFocus","selection","set","onBlur","update","acceptSelection","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAIC,YAAY,GAAGD,OAAO,CAAC,uBAAD,CAA1B;;AAEA,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,2BAAD,CAA9B;;AAEA,SAASG,UAAT,CAAoBC,MAApB,EAA4BC,CAA5B,EAA+B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAIC,aAAa,GAAGD,CAAC,CAACE,aAAF,CAAgBD,aAApC;;AAEA,OAAK;AACL;AACA,GAACE,OAAO,CAACJ,MAAM,CAACK,KAAP,CAAaC,uBAAd,CAAR,IAAkDR,gBAAgB,CAACI,aAAD,CAAhB,KAAoCA,aAAa,CAACK,IAFpG,EAE0G;AACxG,QAAIC,UAAU,GAAGN,aAAa,CAACO,WAAd,CAA0BC,YAA1B,EAAjB;;AAEA,QAAIC,UAAU,GAAGX,MAAM,CAACA,MAAxB;;AAEA,QAAIQ,UAAU,CAACI,UAAX,KAA0B,CAA1B,IAA+Bf,YAAY,CAACc,UAAD,EAAaH,UAAU,CAACK,UAAxB,CAA3C,IAAkFhB,YAAY,CAACc,UAAD,EAAaH,UAAU,CAACM,SAAxB,CAAlG,EAAsI;AACpIN,MAAAA,UAAU,CAACO,eAAX;AACD;AACF;;AAED,MAAIC,WAAW,GAAGhB,MAAM,CAACiB,kBAAzB;AACA,MAAIC,gBAAgB,GAAGF,WAAW,CAACN,YAAZ,EAAvB;;AAEA,MAAI,CAACQ,gBAAgB,CAACC,WAAjB,EAAL,EAAqC;AACnC;AACD;;AAED,MAAIC,SAAS,GAAGF,gBAAgB,CAACG,GAAjB,CAAqB,UAArB,EAAiC,KAAjC,CAAhB;AACArB,EAAAA,MAAM,CAACK,KAAP,CAAaiB,MAAb,IAAuBtB,MAAM,CAACK,KAAP,CAAaiB,MAAb,CAAoBrB,CAApB,CAAvB;AACAD,EAAAA,MAAM,CAACuB,MAAP,CAAc5B,WAAW,CAAC6B,eAAZ,CAA4BR,WAA5B,EAAyCI,SAAzC,CAAd;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiB3B,UAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar EditorState = require(\"./EditorState\");\n\nvar containsNode = require(\"fbjs/lib/containsNode\");\n\nvar getActiveElement = require(\"fbjs/lib/getActiveElement\");\n\nfunction editOnBlur(editor, e) {\n  // In a contentEditable element, when you select a range and then click\n  // another active element, this does trigger a `blur` event but will not\n  // remove the DOM selection from the contenteditable.\n  // This is consistent across all browsers, but we prefer that the editor\n  // behave like a textarea, where a `blur` event clears the DOM selection.\n  // We therefore force the issue to be certain, checking whether the active\n  // element is `body` to force it when blurring occurs within the window (as\n  // opposed to clicking to another tab or window).\n  var ownerDocument = e.currentTarget.ownerDocument;\n\n  if ( // This ESLint rule conflicts with `sketchy-null-bool` flow check\n  // eslint-disable-next-line no-extra-boolean-cast\n  !Boolean(editor.props.preserveSelectionOnBlur) && getActiveElement(ownerDocument) === ownerDocument.body) {\n    var _selection = ownerDocument.defaultView.getSelection();\n\n    var editorNode = editor.editor;\n\n    if (_selection.rangeCount === 1 && containsNode(editorNode, _selection.anchorNode) && containsNode(editorNode, _selection.focusNode)) {\n      _selection.removeAllRanges();\n    }\n  }\n\n  var editorState = editor._latestEditorState;\n  var currentSelection = editorState.getSelection();\n\n  if (!currentSelection.getHasFocus()) {\n    return;\n  }\n\n  var selection = currentSelection.set('hasFocus', false);\n  editor.props.onBlur && editor.props.onBlur(e);\n  editor.update(EditorState.acceptSelection(editorState, selection));\n}\n\nmodule.exports = editOnBlur;"]},"metadata":{},"sourceType":"script"}