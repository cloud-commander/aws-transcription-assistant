{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseUrl = void 0;\n\nvar querystring_parser_1 = require(\"@aws-sdk/querystring-parser\");\n\nvar url_1 = require(\"url\");\n\nexports.parseUrl = function (url) {\n  var _a = url_1.parse(url),\n      _b = _a.hostname,\n      hostname = _b === void 0 ? \"localhost\" : _b,\n      _c = _a.pathname,\n      pathname = _c === void 0 ? \"/\" : _c,\n      port = _a.port,\n      _d = _a.protocol,\n      protocol = _d === void 0 ? \"https:\" : _d,\n      search = _a.search;\n\n  var query;\n\n  if (search) {\n    query = querystring_parser_1.parseQueryString(search);\n  }\n\n  return {\n    hostname: hostname,\n    port: port ? parseInt(port) : undefined,\n    protocol: protocol,\n    path: pathname,\n    query: query\n  };\n};","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,oBAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AAEA,IAAA,KAAA,GAAA,OAAA,CAAA,KAAA,CAAA;;AAEa,OAAA,CAAA,QAAA,GAAsB,UAAC,GAAD,EAAY;AACvC,MAAA,EAAA,GAAgF,KAAA,CAAA,KAAA,CAAM,GAAN,CAAhF;AAAA,MAAE,EAAA,GAAA,EAAA,CAAA,QAAF;AAAA,MAAE,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,WAAH,GAAc,EAAxB;AAAA,MAA0B,EAAA,GAAA,EAAA,CAAA,QAA1B;AAAA,MAA0B,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,GAAH,GAAM,EAAxC;AAAA,MAA0C,IAAI,GAAA,EAAA,CAAA,IAA9C;AAAA,MAAgD,EAAA,GAAA,EAAA,CAAA,QAAhD;AAAA,MAAgD,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,QAAH,GAAW,EAAnE;AAAA,MAAqE,MAAM,GAAA,EAAA,CAAA,MAA3E;;AAEN,MAAI,KAAJ;;AACA,MAAI,MAAJ,EAAY;AACV,IAAA,KAAK,GAAG,oBAAA,CAAA,gBAAA,CAAiB,MAAjB,CAAR;AACD;;AAED,SAAO;AACL,IAAA,QAAQ,EAAA,QADH;AAEL,IAAA,IAAI,EAAE,IAAI,GAAG,QAAQ,CAAC,IAAD,CAAX,GAAoB,SAFzB;AAGL,IAAA,QAAQ,EAAA,QAHH;AAIL,IAAA,IAAI,EAAE,QAJD;AAKL,IAAA,KAAK,EAAA;AALA,GAAP;AAOD,CAfY","sourcesContent":["import { parseQueryString } from \"@aws-sdk/querystring-parser\";\nimport { Endpoint, QueryParameterBag, UrlParser } from \"@aws-sdk/types\";\nimport { parse } from \"url\";\n\nexport const parseUrl: UrlParser = (url: string): Endpoint => {\n  const { hostname = \"localhost\", pathname = \"/\", port, protocol = \"https:\", search } = parse(url);\n\n  let query: QueryParameterBag | undefined;\n  if (search) {\n    query = parseQueryString(search);\n  }\n\n  return {\n    hostname,\n    port: port ? parseInt(port) : undefined,\n    protocol,\n    path: pathname,\n    query,\n  };\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}