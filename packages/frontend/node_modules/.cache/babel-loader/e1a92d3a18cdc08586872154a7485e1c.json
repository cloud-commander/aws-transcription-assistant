{"ast":null,"code":"var _jsxFileName = \"/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/packages/frontend/src/packages/components/timed-text-editor/CustomEditor.js\";\nimport React from \"react\"; //import PropTypes from \"prop-types\";\n\nimport { Editor } from \"draft-js\";\nimport WrapperBlock from './WrapperBlock'; // NOTE: custom editor is in a separate class to minimise re-renders\n// if considering refactoring, removing the separate class, please double check\n// that doing so does not introduce uncessary re-renders first.\n\nclass CustomEditor extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleWordClick = e => {\n      this.props.onWordClick(e);\n    };\n\n    this.renderBlockWithTimecodes = () => {\n      return {\n        component: WrapperBlock,\n        editable: true,\n        props: {\n          showSpeakers: this.props.showSpeakers,\n          showTimecodes: this.props.showTimecodes,\n          timecodeOffset: this.props.timecodeOffset,\n          editorState: this.props.editorState,\n          setEditorNewContentStateSpeakersUpdate: this.props.setEditorNewContentStateSpeakersUpdate,\n          onWordClick: this.handleWordClick,\n          handleAnalyticsEvents: this.props.handleAnalyticsEvents,\n          isEditable: this.props.isEditable\n        }\n      };\n    };\n\n    this.handleOnChange = e => {\n      this.props.onChange(e);\n    };\n  }\n\n  shouldComponentUpdate(nextProps) {\n    // https://stackoverflow.com/questions/39182657/best-performance-method-to-check-if-contentstate-changed-in-draftjs-or-just-edi\n    if (nextProps.editorState !== this.props.editorState) {\n      return true;\n    }\n\n    if (nextProps.isEditable !== this.props.isEditable) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Editor, {\n      editorState: this.props.editorState,\n      onChange: this.handleOnChange,\n      stripPastedStyles: true,\n      blockRendererFn: this.renderBlockWithTimecodes,\n      handleKeyCommand: this.props.handleKeyCommand,\n      keyBindingFn: this.props.customKeyBindingFn,\n      spellCheck: this.props.spellCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default CustomEditor;","map":{"version":3,"sources":["/home/cmsgdiav/Desktop/React Projects/aws-transcription-assistant-05/packages/frontend/src/packages/components/timed-text-editor/CustomEditor.js"],"names":["React","Editor","WrapperBlock","CustomEditor","Component","handleWordClick","e","props","onWordClick","renderBlockWithTimecodes","component","editable","showSpeakers","showTimecodes","timecodeOffset","editorState","setEditorNewContentStateSpeakersUpdate","handleAnalyticsEvents","isEditable","handleOnChange","onChange","shouldComponentUpdate","nextProps","render","handleKeyCommand","customKeyBindingFn","spellCheck"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,MAAT,QAAuB,UAAvB;AAGA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;AACA;AACA;;AACA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACzCC,eADyC,GACvBC,CAAC,IAAI;AACrB,WAAKC,KAAL,CAAWC,WAAX,CAAuBF,CAAvB;AACD,KAHwC;;AAAA,SAKzCG,wBALyC,GAKd,MAAM;AAC/B,aAAO;AACLC,QAAAA,SAAS,EAAER,YADN;AAELS,QAAAA,QAAQ,EAAE,IAFL;AAGLJ,QAAAA,KAAK,EAAE;AACLK,UAAAA,YAAY,EAAE,KAAKL,KAAL,CAAWK,YADpB;AAELC,UAAAA,aAAa,EAAE,KAAKN,KAAL,CAAWM,aAFrB;AAGLC,UAAAA,cAAc,EAAE,KAAKP,KAAL,CAAWO,cAHtB;AAILC,UAAAA,WAAW,EAAE,KAAKR,KAAL,CAAWQ,WAJnB;AAKLC,UAAAA,sCAAsC,EAAE,KAAKT,KAAL,CAAWS,sCAL9C;AAMLR,UAAAA,WAAW,EAAE,KAAKH,eANb;AAOLY,UAAAA,qBAAqB,EAAE,KAAKV,KAAL,CAAWU,qBAP7B;AAQLC,UAAAA,UAAU,EAAE,KAAKX,KAAL,CAAWW;AARlB;AAHF,OAAP;AAcD,KApBwC;;AAAA,SAmCzCC,cAnCyC,GAmCxBb,CAAC,IAAI;AACpB,WAAKC,KAAL,CAAWa,QAAX,CAAoBd,CAApB;AACD,KArCwC;AAAA;;AAsBzCe,EAAAA,qBAAqB,CAACC,SAAD,EAAY;AAC/B;AACA,QAAIA,SAAS,CAACP,WAAV,KAA0B,KAAKR,KAAL,CAAWQ,WAAzC,EAAsD;AACpD,aAAO,IAAP;AACD;;AAED,QAAIO,SAAS,CAACJ,UAAV,KAAyB,KAAKX,KAAL,CAAWW,UAAxC,EAAoD;AAClD,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD;;AAMDK,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWQ,WAD1B;AAEE,MAAA,QAAQ,EAAE,KAAKI,cAFjB;AAGE,MAAA,iBAAiB,MAHnB;AAIE,MAAA,eAAe,EAAE,KAAKV,wBAJxB;AAKE,MAAA,gBAAgB,EAAE,KAAKF,KAAL,CAAWiB,gBAL/B;AAME,MAAA,YAAY,EAAE,KAAKjB,KAAL,CAAWkB,kBAN3B;AAOE,MAAA,UAAU,EAAE,KAAKlB,KAAL,CAAWmB,UAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;;AAnDwC;;AAsD3C,eAAevB,YAAf","sourcesContent":["import React from \"react\";\n//import PropTypes from \"prop-types\";\nimport { Editor } from \"draft-js\";\n\n\nimport WrapperBlock from './WrapperBlock';\n\n// NOTE: custom editor is in a separate class to minimise re-renders\n// if considering refactoring, removing the separate class, please double check\n// that doing so does not introduce uncessary re-renders first.\nclass CustomEditor extends React.Component {\n  handleWordClick = e => {\n    this.props.onWordClick(e);\n  };\n\n  renderBlockWithTimecodes = () => {\n    return {\n      component: WrapperBlock,\n      editable: true,\n      props: {\n        showSpeakers: this.props.showSpeakers,\n        showTimecodes: this.props.showTimecodes,\n        timecodeOffset: this.props.timecodeOffset,\n        editorState: this.props.editorState,\n        setEditorNewContentStateSpeakersUpdate: this.props.setEditorNewContentStateSpeakersUpdate,\n        onWordClick: this.handleWordClick,\n        handleAnalyticsEvents: this.props.handleAnalyticsEvents,\n        isEditable: this.props.isEditable\n      }\n    };\n  };\n\n  shouldComponentUpdate(nextProps) {\n    // https://stackoverflow.com/questions/39182657/best-performance-method-to-check-if-contentstate-changed-in-draftjs-or-just-edi\n    if (nextProps.editorState !== this.props.editorState) {\n      return true;\n    }\n\n    if (nextProps.isEditable !== this.props.isEditable) {\n      return true;\n    }\n\n    return false;\n  }\n\n  handleOnChange = e => {\n    this.props.onChange(e);\n  };\n\n  render() {\n    return (\n      <Editor\n        editorState={this.props.editorState}\n        onChange={this.handleOnChange}\n        stripPastedStyles\n        blockRendererFn={this.renderBlockWithTimecodes}\n        handleKeyCommand={this.props.handleKeyCommand}\n        keyBindingFn={this.props.customKeyBindingFn}\n        spellCheck={this.props.spellCheck}\n      />\n    );\n  }\n}\n\nexport default CustomEditor;\n"]},"metadata":{},"sourceType":"module"}