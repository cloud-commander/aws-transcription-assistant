{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nexport var serializeAws_json1_1AddTagsToStreamCommand = function serializeAws_json1_1AddTagsToStreamCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.AddTagsToStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1AddTagsToStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1CreateStreamCommand = function serializeAws_json1_1CreateStreamCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.CreateStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1CreateStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DecreaseStreamRetentionPeriodCommand = function serializeAws_json1_1DecreaseStreamRetentionPeriodCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DecreaseStreamRetentionPeriod\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DecreaseStreamRetentionPeriodInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteStreamCommand = function serializeAws_json1_1DeleteStreamCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DeleteStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeregisterStreamConsumerCommand = function serializeAws_json1_1DeregisterStreamConsumerCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DeregisterStreamConsumer\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeregisterStreamConsumerInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeLimitsCommand = function serializeAws_json1_1DescribeLimitsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DescribeLimits\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeLimitsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeStreamCommand = function serializeAws_json1_1DescribeStreamCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DescribeStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeStreamConsumerCommand = function serializeAws_json1_1DescribeStreamConsumerCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DescribeStreamConsumer\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamConsumerInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeStreamSummaryCommand = function serializeAws_json1_1DescribeStreamSummaryCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DescribeStreamSummary\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamSummaryInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DisableEnhancedMonitoringCommand = function serializeAws_json1_1DisableEnhancedMonitoringCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.DisableEnhancedMonitoring\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DisableEnhancedMonitoringInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1EnableEnhancedMonitoringCommand = function serializeAws_json1_1EnableEnhancedMonitoringCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.EnableEnhancedMonitoring\"\n      };\n      body = JSON.stringify(serializeAws_json1_1EnableEnhancedMonitoringInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetRecordsCommand = function serializeAws_json1_1GetRecordsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.GetRecords\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetRecordsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetShardIteratorCommand = function serializeAws_json1_1GetShardIteratorCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.GetShardIterator\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetShardIteratorInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1IncreaseStreamRetentionPeriodCommand = function serializeAws_json1_1IncreaseStreamRetentionPeriodCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.IncreaseStreamRetentionPeriod\"\n      };\n      body = JSON.stringify(serializeAws_json1_1IncreaseStreamRetentionPeriodInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListShardsCommand = function serializeAws_json1_1ListShardsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.ListShards\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListShardsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListStreamConsumersCommand = function serializeAws_json1_1ListStreamConsumersCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.ListStreamConsumers\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListStreamConsumersInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListStreamsCommand = function serializeAws_json1_1ListStreamsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.ListStreams\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListStreamsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListTagsForStreamCommand = function serializeAws_json1_1ListTagsForStreamCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.ListTagsForStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListTagsForStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1MergeShardsCommand = function serializeAws_json1_1MergeShardsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.MergeShards\"\n      };\n      body = JSON.stringify(serializeAws_json1_1MergeShardsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutRecordCommand = function serializeAws_json1_1PutRecordCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.PutRecord\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutRecordInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutRecordsCommand = function serializeAws_json1_1PutRecordsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.PutRecords\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutRecordsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1RegisterStreamConsumerCommand = function serializeAws_json1_1RegisterStreamConsumerCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.RegisterStreamConsumer\"\n      };\n      body = JSON.stringify(serializeAws_json1_1RegisterStreamConsumerInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1RemoveTagsFromStreamCommand = function serializeAws_json1_1RemoveTagsFromStreamCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.RemoveTagsFromStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1RemoveTagsFromStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1SplitShardCommand = function serializeAws_json1_1SplitShardCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.SplitShard\"\n      };\n      body = JSON.stringify(serializeAws_json1_1SplitShardInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StartStreamEncryptionCommand = function serializeAws_json1_1StartStreamEncryptionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.StartStreamEncryption\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StartStreamEncryptionInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StopStreamEncryptionCommand = function serializeAws_json1_1StopStreamEncryptionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.StopStreamEncryption\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StopStreamEncryptionInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1SubscribeToShardCommand = function serializeAws_json1_1SubscribeToShardCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.SubscribeToShard\"\n      };\n      body = JSON.stringify(serializeAws_json1_1SubscribeToShardInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1UpdateShardCountCommand = function serializeAws_json1_1UpdateShardCountCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"Content-Type\": \"application/x-amz-json-1.1\",\n        \"X-Amz-Target\": \"Kinesis_20131202.UpdateShardCount\"\n      };\n      body = JSON.stringify(serializeAws_json1_1UpdateShardCountInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var deserializeAws_json1_1AddTagsToStreamCommand = function deserializeAws_json1_1AddTagsToStreamCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1AddTagsToStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1AddTagsToStreamCommandError = function deserializeAws_json1_1AddTagsToStreamCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1CreateStreamCommand = function deserializeAws_json1_1CreateStreamCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1CreateStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1CreateStreamCommandError = function deserializeAws_json1_1CreateStreamCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand = function deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError = function deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DeleteStreamCommand = function deserializeAws_json1_1DeleteStreamCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeleteStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DeleteStreamCommandError = function deserializeAws_json1_1DeleteStreamCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DeregisterStreamConsumerCommand = function deserializeAws_json1_1DeregisterStreamConsumerCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DeregisterStreamConsumerCommandError = function deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeLimitsCommand = function deserializeAws_json1_1DescribeLimitsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeLimitsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeLimitsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"DescribeLimitsOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeLimitsCommandError = function deserializeAws_json1_1DescribeLimitsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeStreamCommand = function deserializeAws_json1_1DescribeStreamCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"DescribeStreamOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeStreamCommandError = function deserializeAws_json1_1DescribeStreamCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, parsedBody, message;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _f.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeStreamConsumerCommand = function deserializeAws_json1_1DescribeStreamConsumerCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamConsumerOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"DescribeStreamConsumerOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeStreamConsumerCommandError = function deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeStreamSummaryCommand = function deserializeAws_json1_1DescribeStreamSummaryCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamSummaryOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"DescribeStreamSummaryOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeStreamSummaryCommandError = function deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, parsedBody, message;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _f.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DisableEnhancedMonitoringCommand = function deserializeAws_json1_1DisableEnhancedMonitoringCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"EnhancedMonitoringOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DisableEnhancedMonitoringCommandError = function deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1EnableEnhancedMonitoringCommand = function deserializeAws_json1_1EnableEnhancedMonitoringCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"EnhancedMonitoringOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1EnableEnhancedMonitoringCommandError = function deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1GetRecordsCommand = function deserializeAws_json1_1GetRecordsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1GetRecordsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetRecordsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"GetRecordsOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1GetRecordsCommandError = function deserializeAws_json1_1GetRecordsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, parsedBody, message;\n\n    return __generator(this, function (_p) {\n      switch (_p.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _p.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"ExpiredIteratorException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#ExpiredIteratorException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"KMSDisabledException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 20];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 20];\n          }\n\n          return [3\n          /*break*/\n          , 22];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ExpiredIteratorExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 14:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 16:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 18:\n          _m = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 20:\n          _o = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _o.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 22:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _p.label = 23;\n\n        case 23:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1GetShardIteratorCommand = function deserializeAws_json1_1GetShardIteratorCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1GetShardIteratorCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetShardIteratorOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"GetShardIteratorOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1GetShardIteratorCommandError = function deserializeAws_json1_1GetShardIteratorCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand = function deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError = function deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1ListShardsCommand = function deserializeAws_json1_1ListShardsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListShardsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListShardsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"ListShardsOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ListShardsCommandError = function deserializeAws_json1_1ListShardsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"ExpiredNextTokenException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1ListStreamConsumersCommand = function deserializeAws_json1_1ListStreamConsumersCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListStreamConsumersCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListStreamConsumersOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"ListStreamConsumersOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ListStreamConsumersCommandError = function deserializeAws_json1_1ListStreamConsumersCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"ExpiredNextTokenException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1ListStreamsCommand = function deserializeAws_json1_1ListStreamsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListStreamsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListStreamsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"ListStreamsOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ListStreamsCommandError = function deserializeAws_json1_1ListStreamsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, parsedBody, message;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1ListTagsForStreamCommand = function deserializeAws_json1_1ListTagsForStreamCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListTagsForStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListTagsForStreamOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"ListTagsForStreamOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ListTagsForStreamCommandError = function deserializeAws_json1_1ListTagsForStreamCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1MergeShardsCommand = function deserializeAws_json1_1MergeShardsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1MergeShardsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1MergeShardsCommandError = function deserializeAws_json1_1MergeShardsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1PutRecordCommand = function deserializeAws_json1_1PutRecordCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1PutRecordCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutRecordOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"PutRecordOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1PutRecordCommandError = function deserializeAws_json1_1PutRecordCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _o.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n          }\n\n          return [3\n          /*break*/\n          , 20];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 14:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 16:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 18:\n          _m = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 20:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _o.label = 21;\n\n        case 21:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1PutRecordsCommand = function deserializeAws_json1_1PutRecordsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1PutRecordsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutRecordsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"PutRecordsOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1PutRecordsCommandError = function deserializeAws_json1_1PutRecordsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _o.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n          }\n\n          return [3\n          /*break*/\n          , 20];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 14:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 16:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 18:\n          _m = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 20:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _o.label = 21;\n\n        case 21:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1RegisterStreamConsumerCommand = function deserializeAws_json1_1RegisterStreamConsumerCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1RegisterStreamConsumerOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"RegisterStreamConsumerOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1RegisterStreamConsumerCommandError = function deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1RemoveTagsFromStreamCommand = function deserializeAws_json1_1RemoveTagsFromStreamCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1RemoveTagsFromStreamCommandError = function deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1SplitShardCommand = function deserializeAws_json1_1SplitShardCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1SplitShardCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1SplitShardCommandError = function deserializeAws_json1_1SplitShardCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1StartStreamEncryptionCommand = function deserializeAws_json1_1StartStreamEncryptionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1StartStreamEncryptionCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1StartStreamEncryptionCommandError = function deserializeAws_json1_1StartStreamEncryptionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, parsedBody, message;\n\n    return __generator(this, function (_p) {\n      switch (_p.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _p.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 20];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 20];\n          }\n\n          return [3\n          /*break*/\n          , 22];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 10:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 12:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 14:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 16:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 18:\n          _m = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 20:\n          _o = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _o.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 22:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _p.label = 23;\n\n        case 23:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1StopStreamEncryptionCommand = function deserializeAws_json1_1StopStreamEncryptionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1StopStreamEncryptionCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1StopStreamEncryptionCommandError = function deserializeAws_json1_1StopStreamEncryptionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1SubscribeToShardCommand = function deserializeAws_json1_1SubscribeToShardCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1SubscribeToShardCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1SubscribeToShardOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"SubscribeToShardOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1SubscribeToShardCommandError = function deserializeAws_json1_1SubscribeToShardCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1UpdateShardCountCommand = function deserializeAws_json1_1UpdateShardCountCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 400) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1UpdateShardCountCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1UpdateShardCountOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output),\n            __type: \"UpdateShardCountOutput\"\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1UpdateShardCountCommandError = function deserializeAws_json1_1UpdateShardCountCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n          errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n          _c = errorCode;\n\n          switch (_c) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ExpiredIteratorExceptionResponse = function deserializeAws_json1_1ExpiredIteratorExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ExpiredIteratorException(body, context);\n      contents = __assign({\n        name: \"ExpiredIteratorException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ExpiredNextTokenExceptionResponse = function deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ExpiredNextTokenException(body, context);\n      contents = __assign({\n        name: \"ExpiredNextTokenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1InvalidArgumentExceptionResponse = function deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidArgumentException(body, context);\n      contents = __assign({\n        name: \"InvalidArgumentException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSAccessDeniedExceptionResponse = function deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSAccessDeniedException(body, context);\n      contents = __assign({\n        name: \"KMSAccessDeniedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSDisabledExceptionResponse = function deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSDisabledException(body, context);\n      contents = __assign({\n        name: \"KMSDisabledException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSInvalidStateExceptionResponse = function deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSInvalidStateException(body, context);\n      contents = __assign({\n        name: \"KMSInvalidStateException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSNotFoundExceptionResponse = function deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSNotFoundException(body, context);\n      contents = __assign({\n        name: \"KMSNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSOptInRequiredResponse = function deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSOptInRequired(body, context);\n      contents = __assign({\n        name: \"KMSOptInRequired\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSThrottlingExceptionResponse = function deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSThrottlingException(body, context);\n      contents = __assign({\n        name: \"KMSThrottlingException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1LimitExceededExceptionResponse = function deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n      contents = __assign({\n        name: \"LimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse = function deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ProvisionedThroughputExceededException(body, context);\n      contents = __assign({\n        name: \"ProvisionedThroughputExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ResourceInUseExceptionResponse = function deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceInUseException(body, context);\n      contents = __assign({\n        name: \"ResourceInUseException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ResourceNotFoundExceptionResponse = function deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n      contents = __assign({\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_json1_1AddTagsToStreamInput = function serializeAws_json1_1AddTagsToStreamInput(input, context) {\n  return __assign(__assign({}, input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  }), input.Tags !== undefined && {\n    Tags: serializeAws_json1_1TagMap(input.Tags, context)\n  });\n};\n\nvar serializeAws_json1_1CreateStreamInput = function serializeAws_json1_1CreateStreamInput(input, context) {\n  return __assign(__assign({}, input.ShardCount !== undefined && {\n    ShardCount: input.ShardCount\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1DecreaseStreamRetentionPeriodInput = function serializeAws_json1_1DecreaseStreamRetentionPeriodInput(input, context) {\n  return __assign(__assign({}, input.RetentionPeriodHours !== undefined && {\n    RetentionPeriodHours: input.RetentionPeriodHours\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1DeleteStreamInput = function serializeAws_json1_1DeleteStreamInput(input, context) {\n  return __assign(__assign({}, input.EnforceConsumerDeletion !== undefined && {\n    EnforceConsumerDeletion: input.EnforceConsumerDeletion\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1DeregisterStreamConsumerInput = function serializeAws_json1_1DeregisterStreamConsumerInput(input, context) {\n  return __assign(__assign(__assign({}, input.ConsumerARN !== undefined && {\n    ConsumerARN: input.ConsumerARN\n  }), input.ConsumerName !== undefined && {\n    ConsumerName: input.ConsumerName\n  }), input.StreamARN !== undefined && {\n    StreamARN: input.StreamARN\n  });\n};\n\nvar serializeAws_json1_1DescribeLimitsInput = function serializeAws_json1_1DescribeLimitsInput(input, context) {\n  return {};\n};\n\nvar serializeAws_json1_1DescribeStreamConsumerInput = function serializeAws_json1_1DescribeStreamConsumerInput(input, context) {\n  return __assign(__assign(__assign({}, input.ConsumerARN !== undefined && {\n    ConsumerARN: input.ConsumerARN\n  }), input.ConsumerName !== undefined && {\n    ConsumerName: input.ConsumerName\n  }), input.StreamARN !== undefined && {\n    StreamARN: input.StreamARN\n  });\n};\n\nvar serializeAws_json1_1DescribeStreamInput = function serializeAws_json1_1DescribeStreamInput(input, context) {\n  return __assign(__assign(__assign({}, input.ExclusiveStartShardId !== undefined && {\n    ExclusiveStartShardId: input.ExclusiveStartShardId\n  }), input.Limit !== undefined && {\n    Limit: input.Limit\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1DescribeStreamSummaryInput = function serializeAws_json1_1DescribeStreamSummaryInput(input, context) {\n  return __assign({}, input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1DisableEnhancedMonitoringInput = function serializeAws_json1_1DisableEnhancedMonitoringInput(input, context) {\n  return __assign(__assign({}, input.ShardLevelMetrics !== undefined && {\n    ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context)\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1EnableEnhancedMonitoringInput = function serializeAws_json1_1EnableEnhancedMonitoringInput(input, context) {\n  return __assign(__assign({}, input.ShardLevelMetrics !== undefined && {\n    ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context)\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1GetRecordsInput = function serializeAws_json1_1GetRecordsInput(input, context) {\n  return __assign(__assign({}, input.Limit !== undefined && {\n    Limit: input.Limit\n  }), input.ShardIterator !== undefined && {\n    ShardIterator: input.ShardIterator\n  });\n};\n\nvar serializeAws_json1_1GetShardIteratorInput = function serializeAws_json1_1GetShardIteratorInput(input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.ShardId !== undefined && {\n    ShardId: input.ShardId\n  }), input.ShardIteratorType !== undefined && {\n    ShardIteratorType: input.ShardIteratorType\n  }), input.StartingSequenceNumber !== undefined && {\n    StartingSequenceNumber: input.StartingSequenceNumber\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  }), input.Timestamp !== undefined && {\n    Timestamp: Math.round(input.Timestamp.getTime() / 1000)\n  });\n};\n\nvar serializeAws_json1_1IncreaseStreamRetentionPeriodInput = function serializeAws_json1_1IncreaseStreamRetentionPeriodInput(input, context) {\n  return __assign(__assign({}, input.RetentionPeriodHours !== undefined && {\n    RetentionPeriodHours: input.RetentionPeriodHours\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1ListShardsInput = function serializeAws_json1_1ListShardsInput(input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.ExclusiveStartShardId !== undefined && {\n    ExclusiveStartShardId: input.ExclusiveStartShardId\n  }), input.MaxResults !== undefined && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && {\n    NextToken: input.NextToken\n  }), input.StreamCreationTimestamp !== undefined && {\n    StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000)\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1ListStreamConsumersInput = function serializeAws_json1_1ListStreamConsumersInput(input, context) {\n  return __assign(__assign(__assign(__assign({}, input.MaxResults !== undefined && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && {\n    NextToken: input.NextToken\n  }), input.StreamARN !== undefined && {\n    StreamARN: input.StreamARN\n  }), input.StreamCreationTimestamp !== undefined && {\n    StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000)\n  });\n};\n\nvar serializeAws_json1_1ListStreamsInput = function serializeAws_json1_1ListStreamsInput(input, context) {\n  return __assign(__assign({}, input.ExclusiveStartStreamName !== undefined && {\n    ExclusiveStartStreamName: input.ExclusiveStartStreamName\n  }), input.Limit !== undefined && {\n    Limit: input.Limit\n  });\n};\n\nvar serializeAws_json1_1ListTagsForStreamInput = function serializeAws_json1_1ListTagsForStreamInput(input, context) {\n  return __assign(__assign(__assign({}, input.ExclusiveStartTagKey !== undefined && {\n    ExclusiveStartTagKey: input.ExclusiveStartTagKey\n  }), input.Limit !== undefined && {\n    Limit: input.Limit\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1MergeShardsInput = function serializeAws_json1_1MergeShardsInput(input, context) {\n  return __assign(__assign(__assign({}, input.AdjacentShardToMerge !== undefined && {\n    AdjacentShardToMerge: input.AdjacentShardToMerge\n  }), input.ShardToMerge !== undefined && {\n    ShardToMerge: input.ShardToMerge\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1MetricsNameList = function serializeAws_json1_1MetricsNameList(input, context) {\n  return input.map(function (entry) {\n    return entry;\n  });\n};\n\nvar serializeAws_json1_1PutRecordInput = function serializeAws_json1_1PutRecordInput(input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Data !== undefined && {\n    Data: context.base64Encoder(input.Data)\n  }), input.ExplicitHashKey !== undefined && {\n    ExplicitHashKey: input.ExplicitHashKey\n  }), input.PartitionKey !== undefined && {\n    PartitionKey: input.PartitionKey\n  }), input.SequenceNumberForOrdering !== undefined && {\n    SequenceNumberForOrdering: input.SequenceNumberForOrdering\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1PutRecordsInput = function serializeAws_json1_1PutRecordsInput(input, context) {\n  return __assign(__assign({}, input.Records !== undefined && {\n    Records: serializeAws_json1_1PutRecordsRequestEntryList(input.Records, context)\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1PutRecordsRequestEntry = function serializeAws_json1_1PutRecordsRequestEntry(input, context) {\n  return __assign(__assign(__assign({}, input.Data !== undefined && {\n    Data: context.base64Encoder(input.Data)\n  }), input.ExplicitHashKey !== undefined && {\n    ExplicitHashKey: input.ExplicitHashKey\n  }), input.PartitionKey !== undefined && {\n    PartitionKey: input.PartitionKey\n  });\n};\n\nvar serializeAws_json1_1PutRecordsRequestEntryList = function serializeAws_json1_1PutRecordsRequestEntryList(input, context) {\n  return input.map(function (entry) {\n    return serializeAws_json1_1PutRecordsRequestEntry(entry, context);\n  });\n};\n\nvar serializeAws_json1_1RegisterStreamConsumerInput = function serializeAws_json1_1RegisterStreamConsumerInput(input, context) {\n  return __assign(__assign({}, input.ConsumerName !== undefined && {\n    ConsumerName: input.ConsumerName\n  }), input.StreamARN !== undefined && {\n    StreamARN: input.StreamARN\n  });\n};\n\nvar serializeAws_json1_1RemoveTagsFromStreamInput = function serializeAws_json1_1RemoveTagsFromStreamInput(input, context) {\n  return __assign(__assign({}, input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  }), input.TagKeys !== undefined && {\n    TagKeys: serializeAws_json1_1TagKeyList(input.TagKeys, context)\n  });\n};\n\nvar serializeAws_json1_1SplitShardInput = function serializeAws_json1_1SplitShardInput(input, context) {\n  return __assign(__assign(__assign({}, input.NewStartingHashKey !== undefined && {\n    NewStartingHashKey: input.NewStartingHashKey\n  }), input.ShardToSplit !== undefined && {\n    ShardToSplit: input.ShardToSplit\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1StartingPosition = function serializeAws_json1_1StartingPosition(input, context) {\n  return __assign(__assign(__assign({}, input.SequenceNumber !== undefined && {\n    SequenceNumber: input.SequenceNumber\n  }), input.Timestamp !== undefined && {\n    Timestamp: Math.round(input.Timestamp.getTime() / 1000)\n  }), input.Type !== undefined && {\n    Type: input.Type\n  });\n};\n\nvar serializeAws_json1_1StartStreamEncryptionInput = function serializeAws_json1_1StartStreamEncryptionInput(input, context) {\n  return __assign(__assign(__assign({}, input.EncryptionType !== undefined && {\n    EncryptionType: input.EncryptionType\n  }), input.KeyId !== undefined && {\n    KeyId: input.KeyId\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1StopStreamEncryptionInput = function serializeAws_json1_1StopStreamEncryptionInput(input, context) {\n  return __assign(__assign(__assign({}, input.EncryptionType !== undefined && {\n    EncryptionType: input.EncryptionType\n  }), input.KeyId !== undefined && {\n    KeyId: input.KeyId\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1SubscribeToShardInput = function serializeAws_json1_1SubscribeToShardInput(input, context) {\n  return __assign(__assign(__assign({}, input.ConsumerARN !== undefined && {\n    ConsumerARN: input.ConsumerARN\n  }), input.ShardId !== undefined && {\n    ShardId: input.ShardId\n  }), input.StartingPosition !== undefined && {\n    StartingPosition: serializeAws_json1_1StartingPosition(input.StartingPosition, context)\n  });\n};\n\nvar serializeAws_json1_1TagKeyList = function serializeAws_json1_1TagKeyList(input, context) {\n  return input.map(function (entry) {\n    return entry;\n  });\n};\n\nvar serializeAws_json1_1TagMap = function serializeAws_json1_1TagMap(input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar serializeAws_json1_1UpdateShardCountInput = function serializeAws_json1_1UpdateShardCountInput(input, context) {\n  return __assign(__assign(__assign({}, input.ScalingType !== undefined && {\n    ScalingType: input.ScalingType\n  }), input.StreamName !== undefined && {\n    StreamName: input.StreamName\n  }), input.TargetShardCount !== undefined && {\n    TargetShardCount: input.TargetShardCount\n  });\n};\n\nvar deserializeAws_json1_1Consumer = function deserializeAws_json1_1Consumer(output, context) {\n  return {\n    __type: \"Consumer\",\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp: output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000)) : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus: output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined\n  };\n};\n\nvar deserializeAws_json1_1ConsumerDescription = function deserializeAws_json1_1ConsumerDescription(output, context) {\n  return {\n    __type: \"ConsumerDescription\",\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp: output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000)) : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus: output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined\n  };\n};\n\nvar deserializeAws_json1_1ConsumerList = function deserializeAws_json1_1ConsumerList(output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1Consumer(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1DescribeLimitsOutput = function deserializeAws_json1_1DescribeLimitsOutput(output, context) {\n  return {\n    __type: \"DescribeLimitsOutput\",\n    OpenShardCount: output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    ShardLimit: output.ShardLimit !== undefined && output.ShardLimit !== null ? output.ShardLimit : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeStreamConsumerOutput = function deserializeAws_json1_1DescribeStreamConsumerOutput(output, context) {\n  return {\n    __type: \"DescribeStreamConsumerOutput\",\n    ConsumerDescription: output.ConsumerDescription !== undefined && output.ConsumerDescription !== null ? deserializeAws_json1_1ConsumerDescription(output.ConsumerDescription, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeStreamOutput = function deserializeAws_json1_1DescribeStreamOutput(output, context) {\n  return {\n    __type: \"DescribeStreamOutput\",\n    StreamDescription: output.StreamDescription !== undefined && output.StreamDescription !== null ? deserializeAws_json1_1StreamDescription(output.StreamDescription, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeStreamSummaryOutput = function deserializeAws_json1_1DescribeStreamSummaryOutput(output, context) {\n  return {\n    __type: \"DescribeStreamSummaryOutput\",\n    StreamDescriptionSummary: output.StreamDescriptionSummary !== undefined && output.StreamDescriptionSummary !== null ? deserializeAws_json1_1StreamDescriptionSummary(output.StreamDescriptionSummary, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1EnhancedMetrics = function deserializeAws_json1_1EnhancedMetrics(output, context) {\n  return {\n    __type: \"EnhancedMetrics\",\n    ShardLevelMetrics: output.ShardLevelMetrics !== undefined && output.ShardLevelMetrics !== null ? deserializeAws_json1_1MetricsNameList(output.ShardLevelMetrics, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1EnhancedMonitoringList = function deserializeAws_json1_1EnhancedMonitoringList(output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1EnhancedMetrics(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1EnhancedMonitoringOutput = function deserializeAws_json1_1EnhancedMonitoringOutput(output, context) {\n  return {\n    __type: \"EnhancedMonitoringOutput\",\n    CurrentShardLevelMetrics: output.CurrentShardLevelMetrics !== undefined && output.CurrentShardLevelMetrics !== null ? deserializeAws_json1_1MetricsNameList(output.CurrentShardLevelMetrics, context) : undefined,\n    DesiredShardLevelMetrics: output.DesiredShardLevelMetrics !== undefined && output.DesiredShardLevelMetrics !== null ? deserializeAws_json1_1MetricsNameList(output.DesiredShardLevelMetrics, context) : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined\n  };\n};\n\nvar deserializeAws_json1_1ExpiredIteratorException = function deserializeAws_json1_1ExpiredIteratorException(output, context) {\n  return {\n    __type: \"ExpiredIteratorException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1ExpiredNextTokenException = function deserializeAws_json1_1ExpiredNextTokenException(output, context) {\n  return {\n    __type: \"ExpiredNextTokenException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1GetRecordsOutput = function deserializeAws_json1_1GetRecordsOutput(output, context) {\n  return {\n    __type: \"GetRecordsOutput\",\n    MillisBehindLatest: output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null ? output.MillisBehindLatest : undefined,\n    NextShardIterator: output.NextShardIterator !== undefined && output.NextShardIterator !== null ? output.NextShardIterator : undefined,\n    Records: output.Records !== undefined && output.Records !== null ? deserializeAws_json1_1RecordList(output.Records, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1GetShardIteratorOutput = function deserializeAws_json1_1GetShardIteratorOutput(output, context) {\n  return {\n    __type: \"GetShardIteratorOutput\",\n    ShardIterator: output.ShardIterator !== undefined && output.ShardIterator !== null ? output.ShardIterator : undefined\n  };\n};\n\nvar deserializeAws_json1_1HashKeyRange = function deserializeAws_json1_1HashKeyRange(output, context) {\n  return {\n    __type: \"HashKeyRange\",\n    EndingHashKey: output.EndingHashKey !== undefined && output.EndingHashKey !== null ? output.EndingHashKey : undefined,\n    StartingHashKey: output.StartingHashKey !== undefined && output.StartingHashKey !== null ? output.StartingHashKey : undefined\n  };\n};\n\nvar deserializeAws_json1_1InternalFailureException = function deserializeAws_json1_1InternalFailureException(output, context) {\n  return {\n    __type: \"InternalFailureException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1InvalidArgumentException = function deserializeAws_json1_1InvalidArgumentException(output, context) {\n  return {\n    __type: \"InvalidArgumentException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1KMSAccessDeniedException = function deserializeAws_json1_1KMSAccessDeniedException(output, context) {\n  return {\n    __type: \"KMSAccessDeniedException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1KMSDisabledException = function deserializeAws_json1_1KMSDisabledException(output, context) {\n  return {\n    __type: \"KMSDisabledException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1KMSInvalidStateException = function deserializeAws_json1_1KMSInvalidStateException(output, context) {\n  return {\n    __type: \"KMSInvalidStateException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1KMSNotFoundException = function deserializeAws_json1_1KMSNotFoundException(output, context) {\n  return {\n    __type: \"KMSNotFoundException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1KMSOptInRequired = function deserializeAws_json1_1KMSOptInRequired(output, context) {\n  return {\n    __type: \"KMSOptInRequired\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1KMSThrottlingException = function deserializeAws_json1_1KMSThrottlingException(output, context) {\n  return {\n    __type: \"KMSThrottlingException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1LimitExceededException = function deserializeAws_json1_1LimitExceededException(output, context) {\n  return {\n    __type: \"LimitExceededException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1ListShardsOutput = function deserializeAws_json1_1ListShardsOutput(output, context) {\n  return {\n    __type: \"ListShardsOutput\",\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    Shards: output.Shards !== undefined && output.Shards !== null ? deserializeAws_json1_1ShardList(output.Shards, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1ListStreamConsumersOutput = function deserializeAws_json1_1ListStreamConsumersOutput(output, context) {\n  return {\n    __type: \"ListStreamConsumersOutput\",\n    Consumers: output.Consumers !== undefined && output.Consumers !== null ? deserializeAws_json1_1ConsumerList(output.Consumers, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_json1_1ListStreamsOutput = function deserializeAws_json1_1ListStreamsOutput(output, context) {\n  return {\n    __type: \"ListStreamsOutput\",\n    HasMoreStreams: output.HasMoreStreams !== undefined && output.HasMoreStreams !== null ? output.HasMoreStreams : undefined,\n    StreamNames: output.StreamNames !== undefined && output.StreamNames !== null ? deserializeAws_json1_1StreamNameList(output.StreamNames, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1ListTagsForStreamOutput = function deserializeAws_json1_1ListTagsForStreamOutput(output, context) {\n  return {\n    __type: \"ListTagsForStreamOutput\",\n    HasMoreTags: output.HasMoreTags !== undefined && output.HasMoreTags !== null ? output.HasMoreTags : undefined,\n    Tags: output.Tags !== undefined && output.Tags !== null ? deserializeAws_json1_1TagList(output.Tags, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1MetricsNameList = function deserializeAws_json1_1MetricsNameList(output, context) {\n  return (output || []).map(function (entry) {\n    return entry;\n  });\n};\n\nvar deserializeAws_json1_1ProvisionedThroughputExceededException = function deserializeAws_json1_1ProvisionedThroughputExceededException(output, context) {\n  return {\n    __type: \"ProvisionedThroughputExceededException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1PutRecordOutput = function deserializeAws_json1_1PutRecordOutput(output, context) {\n  return {\n    __type: \"PutRecordOutput\",\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\n\nvar deserializeAws_json1_1PutRecordsOutput = function deserializeAws_json1_1PutRecordsOutput(output, context) {\n  return {\n    __type: \"PutRecordsOutput\",\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    FailedRecordCount: output.FailedRecordCount !== undefined && output.FailedRecordCount !== null ? output.FailedRecordCount : undefined,\n    Records: output.Records !== undefined && output.Records !== null ? deserializeAws_json1_1PutRecordsResultEntryList(output.Records, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1PutRecordsResultEntry = function deserializeAws_json1_1PutRecordsResultEntry(output, context) {\n  return {\n    __type: \"PutRecordsResultEntry\",\n    ErrorCode: output.ErrorCode !== undefined && output.ErrorCode !== null ? output.ErrorCode : undefined,\n    ErrorMessage: output.ErrorMessage !== undefined && output.ErrorMessage !== null ? output.ErrorMessage : undefined,\n    SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\n\nvar deserializeAws_json1_1PutRecordsResultEntryList = function deserializeAws_json1_1PutRecordsResultEntryList(output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1PutRecordsResultEntry(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1_Record = function deserializeAws_json1_1_Record(output, context) {\n  return {\n    __type: \"Record\",\n    ApproximateArrivalTimestamp: output.ApproximateArrivalTimestamp !== undefined && output.ApproximateArrivalTimestamp !== null ? new Date(Math.round(output.ApproximateArrivalTimestamp * 1000)) : undefined,\n    Data: output.Data !== undefined && output.Data !== null ? context.base64Decoder(output.Data) : undefined,\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    PartitionKey: output.PartitionKey !== undefined && output.PartitionKey !== null ? output.PartitionKey : undefined,\n    SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined\n  };\n};\n\nvar deserializeAws_json1_1RecordList = function deserializeAws_json1_1RecordList(output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1_Record(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1RegisterStreamConsumerOutput = function deserializeAws_json1_1RegisterStreamConsumerOutput(output, context) {\n  return {\n    __type: \"RegisterStreamConsumerOutput\",\n    Consumer: output.Consumer !== undefined && output.Consumer !== null ? deserializeAws_json1_1Consumer(output.Consumer, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1ResourceInUseException = function deserializeAws_json1_1ResourceInUseException(output, context) {\n  return {\n    __type: \"ResourceInUseException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1ResourceNotFoundException = function deserializeAws_json1_1ResourceNotFoundException(output, context) {\n  return {\n    __type: \"ResourceNotFoundException\",\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1SequenceNumberRange = function deserializeAws_json1_1SequenceNumberRange(output, context) {\n  return {\n    __type: \"SequenceNumberRange\",\n    EndingSequenceNumber: output.EndingSequenceNumber !== undefined && output.EndingSequenceNumber !== null ? output.EndingSequenceNumber : undefined,\n    StartingSequenceNumber: output.StartingSequenceNumber !== undefined && output.StartingSequenceNumber !== null ? output.StartingSequenceNumber : undefined\n  };\n};\n\nvar deserializeAws_json1_1Shard = function deserializeAws_json1_1Shard(output, context) {\n  return {\n    __type: \"Shard\",\n    AdjacentParentShardId: output.AdjacentParentShardId !== undefined && output.AdjacentParentShardId !== null ? output.AdjacentParentShardId : undefined,\n    HashKeyRange: output.HashKeyRange !== undefined && output.HashKeyRange !== null ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context) : undefined,\n    ParentShardId: output.ParentShardId !== undefined && output.ParentShardId !== null ? output.ParentShardId : undefined,\n    SequenceNumberRange: output.SequenceNumberRange !== undefined && output.SequenceNumberRange !== null ? deserializeAws_json1_1SequenceNumberRange(output.SequenceNumberRange, context) : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\n\nvar deserializeAws_json1_1ShardList = function deserializeAws_json1_1ShardList(output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1Shard(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1StreamDescription = function deserializeAws_json1_1StreamDescription(output, context) {\n  return {\n    __type: \"StreamDescription\",\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring: output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context) : undefined,\n    HasMoreShards: output.HasMoreShards !== undefined && output.HasMoreShards !== null ? output.HasMoreShards : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    RetentionPeriodHours: output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null ? output.RetentionPeriodHours : undefined,\n    Shards: output.Shards !== undefined && output.Shards !== null ? deserializeAws_json1_1ShardList(output.Shards, context) : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp: output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null ? new Date(Math.round(output.StreamCreationTimestamp * 1000)) : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined\n  };\n};\n\nvar deserializeAws_json1_1StreamDescriptionSummary = function deserializeAws_json1_1StreamDescriptionSummary(output, context) {\n  return {\n    __type: \"StreamDescriptionSummary\",\n    ConsumerCount: output.ConsumerCount !== undefined && output.ConsumerCount !== null ? output.ConsumerCount : undefined,\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring: output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context) : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    OpenShardCount: output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    RetentionPeriodHours: output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null ? output.RetentionPeriodHours : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp: output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null ? new Date(Math.round(output.StreamCreationTimestamp * 1000)) : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined\n  };\n};\n\nvar deserializeAws_json1_1StreamNameList = function deserializeAws_json1_1StreamNameList(output, context) {\n  return (output || []).map(function (entry) {\n    return entry;\n  });\n};\n\nvar deserializeAws_json1_1SubscribeToShardEvent = function deserializeAws_json1_1SubscribeToShardEvent(output, context) {\n  return {\n    __type: \"SubscribeToShardEvent\",\n    ContinuationSequenceNumber: output.ContinuationSequenceNumber !== undefined && output.ContinuationSequenceNumber !== null ? output.ContinuationSequenceNumber : undefined,\n    MillisBehindLatest: output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null ? output.MillisBehindLatest : undefined,\n    Records: output.Records !== undefined && output.Records !== null ? deserializeAws_json1_1RecordList(output.Records, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1SubscribeToShardEventStream = function deserializeAws_json1_1SubscribeToShardEventStream(output, context) {\n  if (output.InternalFailureException !== undefined && output.InternalFailureException !== null) {\n    return {\n      InternalFailureException: deserializeAws_json1_1InternalFailureException(output.InternalFailureException, context)\n    };\n  }\n\n  if (output.KMSAccessDeniedException !== undefined && output.KMSAccessDeniedException !== null) {\n    return {\n      KMSAccessDeniedException: deserializeAws_json1_1KMSAccessDeniedException(output.KMSAccessDeniedException, context)\n    };\n  }\n\n  if (output.KMSDisabledException !== undefined && output.KMSDisabledException !== null) {\n    return {\n      KMSDisabledException: deserializeAws_json1_1KMSDisabledException(output.KMSDisabledException, context)\n    };\n  }\n\n  if (output.KMSInvalidStateException !== undefined && output.KMSInvalidStateException !== null) {\n    return {\n      KMSInvalidStateException: deserializeAws_json1_1KMSInvalidStateException(output.KMSInvalidStateException, context)\n    };\n  }\n\n  if (output.KMSNotFoundException !== undefined && output.KMSNotFoundException !== null) {\n    return {\n      KMSNotFoundException: deserializeAws_json1_1KMSNotFoundException(output.KMSNotFoundException, context)\n    };\n  }\n\n  if (output.KMSOptInRequired !== undefined && output.KMSOptInRequired !== null) {\n    return {\n      KMSOptInRequired: deserializeAws_json1_1KMSOptInRequired(output.KMSOptInRequired, context)\n    };\n  }\n\n  if (output.KMSThrottlingException !== undefined && output.KMSThrottlingException !== null) {\n    return {\n      KMSThrottlingException: deserializeAws_json1_1KMSThrottlingException(output.KMSThrottlingException, context)\n    };\n  }\n\n  if (output.ResourceInUseException !== undefined && output.ResourceInUseException !== null) {\n    return {\n      ResourceInUseException: deserializeAws_json1_1ResourceInUseException(output.ResourceInUseException, context)\n    };\n  }\n\n  if (output.ResourceNotFoundException !== undefined && output.ResourceNotFoundException !== null) {\n    return {\n      ResourceNotFoundException: deserializeAws_json1_1ResourceNotFoundException(output.ResourceNotFoundException, context)\n    };\n  }\n\n  if (output.SubscribeToShardEvent !== undefined && output.SubscribeToShardEvent !== null) {\n    return {\n      SubscribeToShardEvent: deserializeAws_json1_1SubscribeToShardEvent(output.SubscribeToShardEvent, context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_json1_1SubscribeToShardOutput = function deserializeAws_json1_1SubscribeToShardOutput(output, context) {\n  return {\n    __type: \"SubscribeToShardOutput\",\n    EventStream: output.EventStream !== undefined && output.EventStream !== null ? deserializeAws_json1_1SubscribeToShardEventStream(output.EventStream, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1Tag = function deserializeAws_json1_1Tag(output, context) {\n  return {\n    __type: \"Tag\",\n    Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined\n  };\n};\n\nvar deserializeAws_json1_1TagList = function deserializeAws_json1_1TagList(output, context) {\n  return (output || []).map(function (entry) {\n    return deserializeAws_json1_1Tag(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1UpdateShardCountOutput = function deserializeAws_json1_1UpdateShardCountOutput(output, context) {\n  return {\n    __type: \"UpdateShardCountOutput\",\n    CurrentShardCount: output.CurrentShardCount !== undefined && output.CurrentShardCount !== null ? output.CurrentShardCount : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    TargetShardCount: output.TargetShardCount !== undefined && output.TargetShardCount !== null ? output.TargetShardCount : undefined\n  };\n};\n\nvar deserializeMetadata = function deserializeMetadata(output) {\n  return {\n    httpStatusCode: output.statusCode,\n    httpHeaders: output.headers,\n    requestId: output.headers[\"x-amzn-requestid\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function collectBody(streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function collectBodyString(streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar buildHttpRpcRequest = function buildHttpRpcRequest(context, headers, path, resolvedHostname, body) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          contents = {\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            path: path,\n            headers: headers\n          };\n\n          if (resolvedHostname !== undefined) {\n            contents.hostname = resolvedHostname;\n          }\n\n          if (body !== undefined) {\n            contents.body = body;\n          }\n\n          return [2\n          /*return*/\n          , new __HttpRequest(contents)];\n      }\n    });\n  });\n};\n\nvar parseBody = function parseBody(streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};","map":{"version":3,"sources":["../../../protocols/Aws_json1_1.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nexport var serializeAws_json1_1AddTagsToStreamCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.AddTagsToStream\",\n        };\n        body = JSON.stringify(serializeAws_json1_1AddTagsToStreamInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1CreateStreamCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.CreateStream\",\n        };\n        body = JSON.stringify(serializeAws_json1_1CreateStreamInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1DecreaseStreamRetentionPeriodCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.DecreaseStreamRetentionPeriod\",\n        };\n        body = JSON.stringify(serializeAws_json1_1DecreaseStreamRetentionPeriodInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1DeleteStreamCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.DeleteStream\",\n        };\n        body = JSON.stringify(serializeAws_json1_1DeleteStreamInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1DeregisterStreamConsumerCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.DeregisterStreamConsumer\",\n        };\n        body = JSON.stringify(serializeAws_json1_1DeregisterStreamConsumerInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1DescribeLimitsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.DescribeLimits\",\n        };\n        body = JSON.stringify(serializeAws_json1_1DescribeLimitsInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1DescribeStreamCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.DescribeStream\",\n        };\n        body = JSON.stringify(serializeAws_json1_1DescribeStreamInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1DescribeStreamConsumerCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.DescribeStreamConsumer\",\n        };\n        body = JSON.stringify(serializeAws_json1_1DescribeStreamConsumerInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1DescribeStreamSummaryCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.DescribeStreamSummary\",\n        };\n        body = JSON.stringify(serializeAws_json1_1DescribeStreamSummaryInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1DisableEnhancedMonitoringCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.DisableEnhancedMonitoring\",\n        };\n        body = JSON.stringify(serializeAws_json1_1DisableEnhancedMonitoringInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1EnableEnhancedMonitoringCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.EnableEnhancedMonitoring\",\n        };\n        body = JSON.stringify(serializeAws_json1_1EnableEnhancedMonitoringInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1GetRecordsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.GetRecords\",\n        };\n        body = JSON.stringify(serializeAws_json1_1GetRecordsInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1GetShardIteratorCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.GetShardIterator\",\n        };\n        body = JSON.stringify(serializeAws_json1_1GetShardIteratorInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1IncreaseStreamRetentionPeriodCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.IncreaseStreamRetentionPeriod\",\n        };\n        body = JSON.stringify(serializeAws_json1_1IncreaseStreamRetentionPeriodInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1ListShardsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.ListShards\",\n        };\n        body = JSON.stringify(serializeAws_json1_1ListShardsInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1ListStreamConsumersCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.ListStreamConsumers\",\n        };\n        body = JSON.stringify(serializeAws_json1_1ListStreamConsumersInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1ListStreamsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.ListStreams\",\n        };\n        body = JSON.stringify(serializeAws_json1_1ListStreamsInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1ListTagsForStreamCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.ListTagsForStream\",\n        };\n        body = JSON.stringify(serializeAws_json1_1ListTagsForStreamInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1MergeShardsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.MergeShards\",\n        };\n        body = JSON.stringify(serializeAws_json1_1MergeShardsInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1PutRecordCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.PutRecord\",\n        };\n        body = JSON.stringify(serializeAws_json1_1PutRecordInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1PutRecordsCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.PutRecords\",\n        };\n        body = JSON.stringify(serializeAws_json1_1PutRecordsInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1RegisterStreamConsumerCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.RegisterStreamConsumer\",\n        };\n        body = JSON.stringify(serializeAws_json1_1RegisterStreamConsumerInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1RemoveTagsFromStreamCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.RemoveTagsFromStream\",\n        };\n        body = JSON.stringify(serializeAws_json1_1RemoveTagsFromStreamInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1SplitShardCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.SplitShard\",\n        };\n        body = JSON.stringify(serializeAws_json1_1SplitShardInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1StartStreamEncryptionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.StartStreamEncryption\",\n        };\n        body = JSON.stringify(serializeAws_json1_1StartStreamEncryptionInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1StopStreamEncryptionCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.StopStreamEncryption\",\n        };\n        body = JSON.stringify(serializeAws_json1_1StopStreamEncryptionInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1SubscribeToShardCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.SubscribeToShard\",\n        };\n        body = JSON.stringify(serializeAws_json1_1SubscribeToShardInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var serializeAws_json1_1UpdateShardCountCommand = function (input, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n        headers = {\n            \"Content-Type\": \"application/x-amz-json-1.1\",\n            \"X-Amz-Target\": \"Kinesis_20131202.UpdateShardCount\",\n        };\n        body = JSON.stringify(serializeAws_json1_1UpdateShardCountInput(input, context));\n        return [2 /*return*/, buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n}); };\nexport var deserializeAws_json1_1AddTagsToStreamCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1AddTagsToStreamCommandError(output, context)];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                response = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1AddTagsToStreamCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 8];\n                }\n                return [3 /*break*/, 10];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1CreateStreamCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1CreateStreamCommandError(output, context)];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                response = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1CreateStreamCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 6];\n                }\n                return [3 /*break*/, 8];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context)];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                response = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 8];\n                }\n                return [3 /*break*/, 10];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1DeleteStreamCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1DeleteStreamCommandError(output, context)];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                response = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DeleteStreamCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"LimitExceededException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 2];\n                    case \"ResourceInUseException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 4];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 6];\n                }\n                return [3 /*break*/, 8];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1DeregisterStreamConsumerCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context)];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                response = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DeregisterStreamConsumerCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 6];\n                }\n                return [3 /*break*/, 8];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1DescribeLimitsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1DescribeLimitsCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1DescribeLimitsOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"DescribeLimitsOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DescribeLimitsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, parsedBody, message;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"LimitExceededException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 2];\n                }\n                return [3 /*break*/, 4];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1DescribeStreamCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1DescribeStreamCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1DescribeStreamOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"DescribeStreamOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DescribeStreamCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, parsedBody, message;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _f.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"LimitExceededException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 2];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 4];\n                }\n                return [3 /*break*/, 6];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1DescribeStreamConsumerCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1DescribeStreamConsumerOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"DescribeStreamConsumerOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DescribeStreamConsumerCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 6];\n                }\n                return [3 /*break*/, 8];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1DescribeStreamSummaryCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1DescribeStreamSummaryOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"DescribeStreamSummaryOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DescribeStreamSummaryCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, parsedBody, message;\n    return __generator(this, function (_f) {\n        switch (_f.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _f.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"LimitExceededException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 2];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 4];\n                }\n                return [3 /*break*/, 6];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_f.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 7];\n            case 6:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _f.label = 7;\n            case 7:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1DisableEnhancedMonitoringCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"EnhancedMonitoringOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1DisableEnhancedMonitoringCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 8];\n                }\n                return [3 /*break*/, 10];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1EnableEnhancedMonitoringCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"EnhancedMonitoringOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1EnableEnhancedMonitoringCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 8];\n                }\n                return [3 /*break*/, 10];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1GetRecordsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1GetRecordsCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1GetRecordsOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"GetRecordsOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1GetRecordsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, parsedBody, message;\n    return __generator(this, function (_p) {\n        switch (_p.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _p.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"ExpiredIteratorException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#ExpiredIteratorException\": return [3 /*break*/, 2];\n                    case \"InvalidArgumentException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 4];\n                    case \"KMSAccessDeniedException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#KMSAccessDeniedException\": return [3 /*break*/, 6];\n                    case \"KMSDisabledException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#KMSDisabledException\": return [3 /*break*/, 8];\n                    case \"KMSInvalidStateException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.kinesis#KMSInvalidStateException\": return [3 /*break*/, 10];\n                    case \"KMSNotFoundException\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.kinesis#KMSNotFoundException\": return [3 /*break*/, 12];\n                    case \"KMSOptInRequired\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.kinesis#KMSOptInRequired\": return [3 /*break*/, 14];\n                    case \"KMSThrottlingException\": return [3 /*break*/, 16];\n                    case \"com.amazonaws.kinesis#KMSThrottlingException\": return [3 /*break*/, 16];\n                    case \"ProvisionedThroughputExceededException\": return [3 /*break*/, 18];\n                    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\": return [3 /*break*/, 18];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 20];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 20];\n                }\n                return [3 /*break*/, 22];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ExpiredIteratorExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 10:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 12:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 14:\n                _k = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n            case 15:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 16:\n                _l = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n            case 17:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 18:\n                _m = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n            case 19:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 20:\n                _o = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 21:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _o.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 22:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _p.label = 23;\n            case 23:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1GetShardIteratorCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1GetShardIteratorCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1GetShardIteratorOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"GetShardIteratorOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1GetShardIteratorCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"ProvisionedThroughputExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 6];\n                }\n                return [3 /*break*/, 8];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context)];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                response = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 8];\n                }\n                return [3 /*break*/, 10];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1ListShardsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1ListShardsCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1ListShardsOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"ListShardsOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1ListShardsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;\n    return __generator(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"ExpiredNextTokenException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#ExpiredNextTokenException\": return [3 /*break*/, 2];\n                    case \"InvalidArgumentException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 4];\n                    case \"LimitExceededException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 6];\n                    case \"ResourceInUseException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 8];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 10];\n                }\n                return [3 /*break*/, 12];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 10:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1ListStreamConsumersCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1ListStreamConsumersCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1ListStreamConsumersOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"ListStreamConsumersOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1ListStreamConsumersCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, parsedBody, message;\n    return __generator(this, function (_j) {\n        switch (_j.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _j.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"ExpiredNextTokenException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#ExpiredNextTokenException\": return [3 /*break*/, 2];\n                    case \"InvalidArgumentException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 4];\n                    case \"LimitExceededException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 6];\n                    case \"ResourceInUseException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 8];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 10];\n                }\n                return [3 /*break*/, 12];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 10:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_j.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 13];\n            case 12:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _j.label = 13;\n            case 13:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1ListStreamsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1ListStreamsCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1ListStreamsOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"ListStreamsOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1ListStreamsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, parsedBody, message;\n    return __generator(this, function (_e) {\n        switch (_e.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _e.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"LimitExceededException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 2];\n                }\n                return [3 /*break*/, 4];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_e.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 5];\n            case 4:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _e.label = 5;\n            case 5:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1ListTagsForStreamCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1ListTagsForStreamCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1ListTagsForStreamOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"ListTagsForStreamOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1ListTagsForStreamCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, parsedBody, message;\n    return __generator(this, function (_g) {\n        switch (_g.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _g.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 6];\n                }\n                return [3 /*break*/, 8];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_g.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 9];\n            case 8:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _g.label = 9;\n            case 9:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1MergeShardsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1MergeShardsCommandError(output, context)];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                response = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1MergeShardsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 8];\n                }\n                return [3 /*break*/, 10];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1PutRecordCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1PutRecordCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1PutRecordOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"PutRecordOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1PutRecordCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n    return __generator(this, function (_o) {\n        switch (_o.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _o.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"KMSAccessDeniedException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#KMSAccessDeniedException\": return [3 /*break*/, 4];\n                    case \"KMSDisabledException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#KMSDisabledException\": return [3 /*break*/, 6];\n                    case \"KMSInvalidStateException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#KMSInvalidStateException\": return [3 /*break*/, 8];\n                    case \"KMSNotFoundException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.kinesis#KMSNotFoundException\": return [3 /*break*/, 10];\n                    case \"KMSOptInRequired\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.kinesis#KMSOptInRequired\": return [3 /*break*/, 12];\n                    case \"KMSThrottlingException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.kinesis#KMSThrottlingException\": return [3 /*break*/, 14];\n                    case \"ProvisionedThroughputExceededException\": return [3 /*break*/, 16];\n                    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\": return [3 /*break*/, 16];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 18];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 18];\n                }\n                return [3 /*break*/, 20];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 10:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 12:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 14:\n                _k = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 16:\n                _l = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n            case 17:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 18:\n                _m = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 19:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 20:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _o.label = 21;\n            case 21:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1PutRecordsCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1PutRecordsCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1PutRecordsOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"PutRecordsOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1PutRecordsCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n    return __generator(this, function (_o) {\n        switch (_o.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _o.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"KMSAccessDeniedException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#KMSAccessDeniedException\": return [3 /*break*/, 4];\n                    case \"KMSDisabledException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#KMSDisabledException\": return [3 /*break*/, 6];\n                    case \"KMSInvalidStateException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#KMSInvalidStateException\": return [3 /*break*/, 8];\n                    case \"KMSNotFoundException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.kinesis#KMSNotFoundException\": return [3 /*break*/, 10];\n                    case \"KMSOptInRequired\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.kinesis#KMSOptInRequired\": return [3 /*break*/, 12];\n                    case \"KMSThrottlingException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.kinesis#KMSThrottlingException\": return [3 /*break*/, 14];\n                    case \"ProvisionedThroughputExceededException\": return [3 /*break*/, 16];\n                    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\": return [3 /*break*/, 16];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 18];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 18];\n                }\n                return [3 /*break*/, 20];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 10:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 12:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 14:\n                _k = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 16:\n                _l = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n            case 17:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 18:\n                _m = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 19:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([(_o.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 21];\n            case 20:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _o.label = 21;\n            case 21:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1RegisterStreamConsumerCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1RegisterStreamConsumerOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"RegisterStreamConsumerOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1RegisterStreamConsumerCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 8];\n                }\n                return [3 /*break*/, 10];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1RemoveTagsFromStreamCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context)];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                response = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1RemoveTagsFromStreamCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 8];\n                }\n                return [3 /*break*/, 10];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1SplitShardCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1SplitShardCommandError(output, context)];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                response = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1SplitShardCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 8];\n                }\n                return [3 /*break*/, 10];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1StartStreamEncryptionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1StartStreamEncryptionCommandError(output, context)];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                response = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1StartStreamEncryptionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, parsedBody, message;\n    return __generator(this, function (_p) {\n        switch (_p.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _p.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"KMSAccessDeniedException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#KMSAccessDeniedException\": return [3 /*break*/, 4];\n                    case \"KMSDisabledException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#KMSDisabledException\": return [3 /*break*/, 6];\n                    case \"KMSInvalidStateException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#KMSInvalidStateException\": return [3 /*break*/, 8];\n                    case \"KMSNotFoundException\": return [3 /*break*/, 10];\n                    case \"com.amazonaws.kinesis#KMSNotFoundException\": return [3 /*break*/, 10];\n                    case \"KMSOptInRequired\": return [3 /*break*/, 12];\n                    case \"com.amazonaws.kinesis#KMSOptInRequired\": return [3 /*break*/, 12];\n                    case \"KMSThrottlingException\": return [3 /*break*/, 14];\n                    case \"com.amazonaws.kinesis#KMSThrottlingException\": return [3 /*break*/, 14];\n                    case \"LimitExceededException\": return [3 /*break*/, 16];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 16];\n                    case \"ResourceInUseException\": return [3 /*break*/, 18];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 18];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 20];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 20];\n                }\n                return [3 /*break*/, 22];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 10:\n                _h = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n            case 11:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 12:\n                _j = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n            case 13:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 14:\n                _k = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n            case 15:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 16:\n                _l = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 17:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 18:\n                _m = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 19:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 20:\n                _o = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 21:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _o.concat([(_p.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 23];\n            case 22:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _p.label = 23;\n            case 23:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1StopStreamEncryptionCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1StopStreamEncryptionCommandError(output, context)];\n                }\n                return [4 /*yield*/, collectBody(output.body, context)];\n            case 1:\n                _a.sent();\n                response = {\n                    $metadata: deserializeMetadata(output),\n                };\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1StopStreamEncryptionCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 8];\n                }\n                return [3 /*break*/, 10];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1SubscribeToShardCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1SubscribeToShardCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1SubscribeToShardOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"SubscribeToShardOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1SubscribeToShardCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 8];\n                }\n                return [3 /*break*/, 10];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nexport var deserializeAws_json1_1UpdateShardCountCommand = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (output.statusCode >= 400) {\n                    return [2 /*return*/, deserializeAws_json1_1UpdateShardCountCommandError(output, context)];\n                }\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                data = _a.sent();\n                contents = {};\n                contents = deserializeAws_json1_1UpdateShardCountOutput(data, context);\n                response = __assign({ $metadata: deserializeMetadata(output), __type: \"UpdateShardCountOutput\" }, contents);\n                return [2 /*return*/, Promise.resolve(response)];\n        }\n    });\n}); };\nvar deserializeAws_json1_1UpdateShardCountCommandError = function (output, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, _b, response, errorCode, errorTypeParts, _c, _d, _e, _f, _g, parsedBody, message;\n    return __generator(this, function (_h) {\n        switch (_h.label) {\n            case 0:\n                _a = [__assign({}, output)];\n                _b = {};\n                return [4 /*yield*/, parseBody(output.body, context)];\n            case 1:\n                parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _h.sent(), _b)]));\n                errorCode = \"UnknownError\";\n                errorTypeParts = parsedOutput.body[\"__type\"].split(\"#\");\n                errorCode = errorTypeParts[1] === undefined ? errorTypeParts[0] : errorTypeParts[1];\n                _c = errorCode;\n                switch (_c) {\n                    case \"InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"com.amazonaws.kinesis#InvalidArgumentException\": return [3 /*break*/, 2];\n                    case \"LimitExceededException\": return [3 /*break*/, 4];\n                    case \"com.amazonaws.kinesis#LimitExceededException\": return [3 /*break*/, 4];\n                    case \"ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"com.amazonaws.kinesis#ResourceInUseException\": return [3 /*break*/, 6];\n                    case \"ResourceNotFoundException\": return [3 /*break*/, 8];\n                    case \"com.amazonaws.kinesis#ResourceNotFoundException\": return [3 /*break*/, 8];\n                }\n                return [3 /*break*/, 10];\n            case 2:\n                _d = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n            case 3:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 4:\n                _e = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n            case 5:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 6:\n                _f = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n            case 7:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 8:\n                _g = [{}];\n                return [4 /*yield*/, deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n            case 9:\n                response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([(_h.sent())])), { name: errorCode, $metadata: deserializeMetadata(output) }]);\n                return [3 /*break*/, 11];\n            case 10:\n                parsedBody = parsedOutput.body;\n                errorCode = parsedBody.code || parsedBody.Code || errorCode;\n                response = __assign(__assign({}, parsedBody), { name: \"\" + errorCode, message: parsedBody.message || parsedBody.Message || errorCode, $fault: \"client\", $metadata: deserializeMetadata(output) });\n                _h.label = 11;\n            case 11:\n                message = response.message || response.Message || errorCode;\n                response.message = message;\n                delete response.Message;\n                return [2 /*return*/, Promise.reject(Object.assign(new Error(message), response))];\n        }\n    });\n}); };\nvar deserializeAws_json1_1ExpiredIteratorExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1ExpiredIteratorException(body, context);\n        contents = __assign({ name: \"ExpiredIteratorException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1ExpiredNextTokenExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1ExpiredNextTokenException(body, context);\n        contents = __assign({ name: \"ExpiredNextTokenException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1InvalidArgumentExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1InvalidArgumentException(body, context);\n        contents = __assign({ name: \"InvalidArgumentException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1KMSAccessDeniedExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1KMSAccessDeniedException(body, context);\n        contents = __assign({ name: \"KMSAccessDeniedException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1KMSDisabledExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1KMSDisabledException(body, context);\n        contents = __assign({ name: \"KMSDisabledException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1KMSInvalidStateExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1KMSInvalidStateException(body, context);\n        contents = __assign({ name: \"KMSInvalidStateException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1KMSNotFoundExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1KMSNotFoundException(body, context);\n        contents = __assign({ name: \"KMSNotFoundException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1KMSOptInRequiredResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1KMSOptInRequired(body, context);\n        contents = __assign({ name: \"KMSOptInRequired\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1KMSThrottlingExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1KMSThrottlingException(body, context);\n        contents = __assign({ name: \"KMSThrottlingException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1LimitExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n        contents = __assign({ name: \"LimitExceededException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1ProvisionedThroughputExceededException(body, context);\n        contents = __assign({ name: \"ProvisionedThroughputExceededException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1ResourceInUseExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1ResourceInUseException(body, context);\n        contents = __assign({ name: \"ResourceInUseException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar deserializeAws_json1_1ResourceNotFoundExceptionResponse = function (parsedOutput, context) { return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n        body = parsedOutput.body;\n        deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n        contents = __assign({ name: \"ResourceNotFoundException\", $fault: \"client\", $metadata: deserializeMetadata(parsedOutput) }, deserialized);\n        return [2 /*return*/, contents];\n    });\n}); };\nvar serializeAws_json1_1AddTagsToStreamInput = function (input, context) {\n    return __assign(__assign({}, (input.StreamName !== undefined && { StreamName: input.StreamName })), (input.Tags !== undefined && { Tags: serializeAws_json1_1TagMap(input.Tags, context) }));\n};\nvar serializeAws_json1_1CreateStreamInput = function (input, context) {\n    return __assign(__assign({}, (input.ShardCount !== undefined && { ShardCount: input.ShardCount })), (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1DecreaseStreamRetentionPeriodInput = function (input, context) {\n    return __assign(__assign({}, (input.RetentionPeriodHours !== undefined && { RetentionPeriodHours: input.RetentionPeriodHours })), (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1DeleteStreamInput = function (input, context) {\n    return __assign(__assign({}, (input.EnforceConsumerDeletion !== undefined && { EnforceConsumerDeletion: input.EnforceConsumerDeletion })), (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1DeregisterStreamConsumerInput = function (input, context) {\n    return __assign(__assign(__assign({}, (input.ConsumerARN !== undefined && { ConsumerARN: input.ConsumerARN })), (input.ConsumerName !== undefined && { ConsumerName: input.ConsumerName })), (input.StreamARN !== undefined && { StreamARN: input.StreamARN }));\n};\nvar serializeAws_json1_1DescribeLimitsInput = function (input, context) {\n    return {};\n};\nvar serializeAws_json1_1DescribeStreamConsumerInput = function (input, context) {\n    return __assign(__assign(__assign({}, (input.ConsumerARN !== undefined && { ConsumerARN: input.ConsumerARN })), (input.ConsumerName !== undefined && { ConsumerName: input.ConsumerName })), (input.StreamARN !== undefined && { StreamARN: input.StreamARN }));\n};\nvar serializeAws_json1_1DescribeStreamInput = function (input, context) {\n    return __assign(__assign(__assign({}, (input.ExclusiveStartShardId !== undefined && { ExclusiveStartShardId: input.ExclusiveStartShardId })), (input.Limit !== undefined && { Limit: input.Limit })), (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1DescribeStreamSummaryInput = function (input, context) {\n    return __assign({}, (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1DisableEnhancedMonitoringInput = function (input, context) {\n    return __assign(__assign({}, (input.ShardLevelMetrics !== undefined && {\n        ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context),\n    })), (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1EnableEnhancedMonitoringInput = function (input, context) {\n    return __assign(__assign({}, (input.ShardLevelMetrics !== undefined && {\n        ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context),\n    })), (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1GetRecordsInput = function (input, context) {\n    return __assign(__assign({}, (input.Limit !== undefined && { Limit: input.Limit })), (input.ShardIterator !== undefined && { ShardIterator: input.ShardIterator }));\n};\nvar serializeAws_json1_1GetShardIteratorInput = function (input, context) {\n    return __assign(__assign(__assign(__assign(__assign({}, (input.ShardId !== undefined && { ShardId: input.ShardId })), (input.ShardIteratorType !== undefined && { ShardIteratorType: input.ShardIteratorType })), (input.StartingSequenceNumber !== undefined && { StartingSequenceNumber: input.StartingSequenceNumber })), (input.StreamName !== undefined && { StreamName: input.StreamName })), (input.Timestamp !== undefined && { Timestamp: Math.round(input.Timestamp.getTime() / 1000) }));\n};\nvar serializeAws_json1_1IncreaseStreamRetentionPeriodInput = function (input, context) {\n    return __assign(__assign({}, (input.RetentionPeriodHours !== undefined && { RetentionPeriodHours: input.RetentionPeriodHours })), (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1ListShardsInput = function (input, context) {\n    return __assign(__assign(__assign(__assign(__assign({}, (input.ExclusiveStartShardId !== undefined && { ExclusiveStartShardId: input.ExclusiveStartShardId })), (input.MaxResults !== undefined && { MaxResults: input.MaxResults })), (input.NextToken !== undefined && { NextToken: input.NextToken })), (input.StreamCreationTimestamp !== undefined && {\n        StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000),\n    })), (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1ListStreamConsumersInput = function (input, context) {\n    return __assign(__assign(__assign(__assign({}, (input.MaxResults !== undefined && { MaxResults: input.MaxResults })), (input.NextToken !== undefined && { NextToken: input.NextToken })), (input.StreamARN !== undefined && { StreamARN: input.StreamARN })), (input.StreamCreationTimestamp !== undefined && {\n        StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000),\n    }));\n};\nvar serializeAws_json1_1ListStreamsInput = function (input, context) {\n    return __assign(__assign({}, (input.ExclusiveStartStreamName !== undefined && { ExclusiveStartStreamName: input.ExclusiveStartStreamName })), (input.Limit !== undefined && { Limit: input.Limit }));\n};\nvar serializeAws_json1_1ListTagsForStreamInput = function (input, context) {\n    return __assign(__assign(__assign({}, (input.ExclusiveStartTagKey !== undefined && { ExclusiveStartTagKey: input.ExclusiveStartTagKey })), (input.Limit !== undefined && { Limit: input.Limit })), (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1MergeShardsInput = function (input, context) {\n    return __assign(__assign(__assign({}, (input.AdjacentShardToMerge !== undefined && { AdjacentShardToMerge: input.AdjacentShardToMerge })), (input.ShardToMerge !== undefined && { ShardToMerge: input.ShardToMerge })), (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1MetricsNameList = function (input, context) {\n    return input.map(function (entry) { return entry; });\n};\nvar serializeAws_json1_1PutRecordInput = function (input, context) {\n    return __assign(__assign(__assign(__assign(__assign({}, (input.Data !== undefined && { Data: context.base64Encoder(input.Data) })), (input.ExplicitHashKey !== undefined && { ExplicitHashKey: input.ExplicitHashKey })), (input.PartitionKey !== undefined && { PartitionKey: input.PartitionKey })), (input.SequenceNumberForOrdering !== undefined && {\n        SequenceNumberForOrdering: input.SequenceNumberForOrdering,\n    })), (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1PutRecordsInput = function (input, context) {\n    return __assign(__assign({}, (input.Records !== undefined && {\n        Records: serializeAws_json1_1PutRecordsRequestEntryList(input.Records, context),\n    })), (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1PutRecordsRequestEntry = function (input, context) {\n    return __assign(__assign(__assign({}, (input.Data !== undefined && { Data: context.base64Encoder(input.Data) })), (input.ExplicitHashKey !== undefined && { ExplicitHashKey: input.ExplicitHashKey })), (input.PartitionKey !== undefined && { PartitionKey: input.PartitionKey }));\n};\nvar serializeAws_json1_1PutRecordsRequestEntryList = function (input, context) {\n    return input.map(function (entry) { return serializeAws_json1_1PutRecordsRequestEntry(entry, context); });\n};\nvar serializeAws_json1_1RegisterStreamConsumerInput = function (input, context) {\n    return __assign(__assign({}, (input.ConsumerName !== undefined && { ConsumerName: input.ConsumerName })), (input.StreamARN !== undefined && { StreamARN: input.StreamARN }));\n};\nvar serializeAws_json1_1RemoveTagsFromStreamInput = function (input, context) {\n    return __assign(__assign({}, (input.StreamName !== undefined && { StreamName: input.StreamName })), (input.TagKeys !== undefined && { TagKeys: serializeAws_json1_1TagKeyList(input.TagKeys, context) }));\n};\nvar serializeAws_json1_1SplitShardInput = function (input, context) {\n    return __assign(__assign(__assign({}, (input.NewStartingHashKey !== undefined && { NewStartingHashKey: input.NewStartingHashKey })), (input.ShardToSplit !== undefined && { ShardToSplit: input.ShardToSplit })), (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1StartingPosition = function (input, context) {\n    return __assign(__assign(__assign({}, (input.SequenceNumber !== undefined && { SequenceNumber: input.SequenceNumber })), (input.Timestamp !== undefined && { Timestamp: Math.round(input.Timestamp.getTime() / 1000) })), (input.Type !== undefined && { Type: input.Type }));\n};\nvar serializeAws_json1_1StartStreamEncryptionInput = function (input, context) {\n    return __assign(__assign(__assign({}, (input.EncryptionType !== undefined && { EncryptionType: input.EncryptionType })), (input.KeyId !== undefined && { KeyId: input.KeyId })), (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1StopStreamEncryptionInput = function (input, context) {\n    return __assign(__assign(__assign({}, (input.EncryptionType !== undefined && { EncryptionType: input.EncryptionType })), (input.KeyId !== undefined && { KeyId: input.KeyId })), (input.StreamName !== undefined && { StreamName: input.StreamName }));\n};\nvar serializeAws_json1_1SubscribeToShardInput = function (input, context) {\n    return __assign(__assign(__assign({}, (input.ConsumerARN !== undefined && { ConsumerARN: input.ConsumerARN })), (input.ShardId !== undefined && { ShardId: input.ShardId })), (input.StartingPosition !== undefined && {\n        StartingPosition: serializeAws_json1_1StartingPosition(input.StartingPosition, context),\n    }));\n};\nvar serializeAws_json1_1TagKeyList = function (input, context) {\n    return input.map(function (entry) { return entry; });\n};\nvar serializeAws_json1_1TagMap = function (input, context) {\n    return Object.entries(input).reduce(function (acc, _a) {\n        var _b;\n        var _c = __read(_a, 2), key = _c[0], value = _c[1];\n        return (__assign(__assign({}, acc), (_b = {}, _b[key] = value, _b)));\n    }, {});\n};\nvar serializeAws_json1_1UpdateShardCountInput = function (input, context) {\n    return __assign(__assign(__assign({}, (input.ScalingType !== undefined && { ScalingType: input.ScalingType })), (input.StreamName !== undefined && { StreamName: input.StreamName })), (input.TargetShardCount !== undefined && { TargetShardCount: input.TargetShardCount }));\n};\nvar deserializeAws_json1_1Consumer = function (output, context) {\n    return {\n        __type: \"Consumer\",\n        ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n        ConsumerCreationTimestamp: output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null\n            ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000))\n            : undefined,\n        ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n        ConsumerStatus: output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined,\n    };\n};\nvar deserializeAws_json1_1ConsumerDescription = function (output, context) {\n    return {\n        __type: \"ConsumerDescription\",\n        ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n        ConsumerCreationTimestamp: output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null\n            ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000))\n            : undefined,\n        ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n        ConsumerStatus: output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined,\n        StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    };\n};\nvar deserializeAws_json1_1ConsumerList = function (output, context) {\n    return (output || []).map(function (entry) { return deserializeAws_json1_1Consumer(entry, context); });\n};\nvar deserializeAws_json1_1DescribeLimitsOutput = function (output, context) {\n    return {\n        __type: \"DescribeLimitsOutput\",\n        OpenShardCount: output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n        ShardLimit: output.ShardLimit !== undefined && output.ShardLimit !== null ? output.ShardLimit : undefined,\n    };\n};\nvar deserializeAws_json1_1DescribeStreamConsumerOutput = function (output, context) {\n    return {\n        __type: \"DescribeStreamConsumerOutput\",\n        ConsumerDescription: output.ConsumerDescription !== undefined && output.ConsumerDescription !== null\n            ? deserializeAws_json1_1ConsumerDescription(output.ConsumerDescription, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1DescribeStreamOutput = function (output, context) {\n    return {\n        __type: \"DescribeStreamOutput\",\n        StreamDescription: output.StreamDescription !== undefined && output.StreamDescription !== null\n            ? deserializeAws_json1_1StreamDescription(output.StreamDescription, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1DescribeStreamSummaryOutput = function (output, context) {\n    return {\n        __type: \"DescribeStreamSummaryOutput\",\n        StreamDescriptionSummary: output.StreamDescriptionSummary !== undefined && output.StreamDescriptionSummary !== null\n            ? deserializeAws_json1_1StreamDescriptionSummary(output.StreamDescriptionSummary, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1EnhancedMetrics = function (output, context) {\n    return {\n        __type: \"EnhancedMetrics\",\n        ShardLevelMetrics: output.ShardLevelMetrics !== undefined && output.ShardLevelMetrics !== null\n            ? deserializeAws_json1_1MetricsNameList(output.ShardLevelMetrics, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1EnhancedMonitoringList = function (output, context) {\n    return (output || []).map(function (entry) { return deserializeAws_json1_1EnhancedMetrics(entry, context); });\n};\nvar deserializeAws_json1_1EnhancedMonitoringOutput = function (output, context) {\n    return {\n        __type: \"EnhancedMonitoringOutput\",\n        CurrentShardLevelMetrics: output.CurrentShardLevelMetrics !== undefined && output.CurrentShardLevelMetrics !== null\n            ? deserializeAws_json1_1MetricsNameList(output.CurrentShardLevelMetrics, context)\n            : undefined,\n        DesiredShardLevelMetrics: output.DesiredShardLevelMetrics !== undefined && output.DesiredShardLevelMetrics !== null\n            ? deserializeAws_json1_1MetricsNameList(output.DesiredShardLevelMetrics, context)\n            : undefined,\n        StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    };\n};\nvar deserializeAws_json1_1ExpiredIteratorException = function (output, context) {\n    return {\n        __type: \"ExpiredIteratorException\",\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1ExpiredNextTokenException = function (output, context) {\n    return {\n        __type: \"ExpiredNextTokenException\",\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1GetRecordsOutput = function (output, context) {\n    return {\n        __type: \"GetRecordsOutput\",\n        MillisBehindLatest: output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null\n            ? output.MillisBehindLatest\n            : undefined,\n        NextShardIterator: output.NextShardIterator !== undefined && output.NextShardIterator !== null\n            ? output.NextShardIterator\n            : undefined,\n        Records: output.Records !== undefined && output.Records !== null\n            ? deserializeAws_json1_1RecordList(output.Records, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1GetShardIteratorOutput = function (output, context) {\n    return {\n        __type: \"GetShardIteratorOutput\",\n        ShardIterator: output.ShardIterator !== undefined && output.ShardIterator !== null ? output.ShardIterator : undefined,\n    };\n};\nvar deserializeAws_json1_1HashKeyRange = function (output, context) {\n    return {\n        __type: \"HashKeyRange\",\n        EndingHashKey: output.EndingHashKey !== undefined && output.EndingHashKey !== null ? output.EndingHashKey : undefined,\n        StartingHashKey: output.StartingHashKey !== undefined && output.StartingHashKey !== null ? output.StartingHashKey : undefined,\n    };\n};\nvar deserializeAws_json1_1InternalFailureException = function (output, context) {\n    return {\n        __type: \"InternalFailureException\",\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1InvalidArgumentException = function (output, context) {\n    return {\n        __type: \"InvalidArgumentException\",\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1KMSAccessDeniedException = function (output, context) {\n    return {\n        __type: \"KMSAccessDeniedException\",\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1KMSDisabledException = function (output, context) {\n    return {\n        __type: \"KMSDisabledException\",\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1KMSInvalidStateException = function (output, context) {\n    return {\n        __type: \"KMSInvalidStateException\",\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1KMSNotFoundException = function (output, context) {\n    return {\n        __type: \"KMSNotFoundException\",\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1KMSOptInRequired = function (output, context) {\n    return {\n        __type: \"KMSOptInRequired\",\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1KMSThrottlingException = function (output, context) {\n    return {\n        __type: \"KMSThrottlingException\",\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1LimitExceededException = function (output, context) {\n    return {\n        __type: \"LimitExceededException\",\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1ListShardsOutput = function (output, context) {\n    return {\n        __type: \"ListShardsOutput\",\n        NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n        Shards: output.Shards !== undefined && output.Shards !== null\n            ? deserializeAws_json1_1ShardList(output.Shards, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1ListStreamConsumersOutput = function (output, context) {\n    return {\n        __type: \"ListStreamConsumersOutput\",\n        Consumers: output.Consumers !== undefined && output.Consumers !== null\n            ? deserializeAws_json1_1ConsumerList(output.Consumers, context)\n            : undefined,\n        NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    };\n};\nvar deserializeAws_json1_1ListStreamsOutput = function (output, context) {\n    return {\n        __type: \"ListStreamsOutput\",\n        HasMoreStreams: output.HasMoreStreams !== undefined && output.HasMoreStreams !== null ? output.HasMoreStreams : undefined,\n        StreamNames: output.StreamNames !== undefined && output.StreamNames !== null\n            ? deserializeAws_json1_1StreamNameList(output.StreamNames, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1ListTagsForStreamOutput = function (output, context) {\n    return {\n        __type: \"ListTagsForStreamOutput\",\n        HasMoreTags: output.HasMoreTags !== undefined && output.HasMoreTags !== null ? output.HasMoreTags : undefined,\n        Tags: output.Tags !== undefined && output.Tags !== null\n            ? deserializeAws_json1_1TagList(output.Tags, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1MetricsNameList = function (output, context) {\n    return (output || []).map(function (entry) { return entry; });\n};\nvar deserializeAws_json1_1ProvisionedThroughputExceededException = function (output, context) {\n    return {\n        __type: \"ProvisionedThroughputExceededException\",\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1PutRecordOutput = function (output, context) {\n    return {\n        __type: \"PutRecordOutput\",\n        EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n        SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n        ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n    };\n};\nvar deserializeAws_json1_1PutRecordsOutput = function (output, context) {\n    return {\n        __type: \"PutRecordsOutput\",\n        EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n        FailedRecordCount: output.FailedRecordCount !== undefined && output.FailedRecordCount !== null\n            ? output.FailedRecordCount\n            : undefined,\n        Records: output.Records !== undefined && output.Records !== null\n            ? deserializeAws_json1_1PutRecordsResultEntryList(output.Records, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1PutRecordsResultEntry = function (output, context) {\n    return {\n        __type: \"PutRecordsResultEntry\",\n        ErrorCode: output.ErrorCode !== undefined && output.ErrorCode !== null ? output.ErrorCode : undefined,\n        ErrorMessage: output.ErrorMessage !== undefined && output.ErrorMessage !== null ? output.ErrorMessage : undefined,\n        SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n        ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n    };\n};\nvar deserializeAws_json1_1PutRecordsResultEntryList = function (output, context) {\n    return (output || []).map(function (entry) { return deserializeAws_json1_1PutRecordsResultEntry(entry, context); });\n};\nvar deserializeAws_json1_1_Record = function (output, context) {\n    return {\n        __type: \"Record\",\n        ApproximateArrivalTimestamp: output.ApproximateArrivalTimestamp !== undefined && output.ApproximateArrivalTimestamp !== null\n            ? new Date(Math.round(output.ApproximateArrivalTimestamp * 1000))\n            : undefined,\n        Data: output.Data !== undefined && output.Data !== null ? context.base64Decoder(output.Data) : undefined,\n        EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n        PartitionKey: output.PartitionKey !== undefined && output.PartitionKey !== null ? output.PartitionKey : undefined,\n        SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    };\n};\nvar deserializeAws_json1_1RecordList = function (output, context) {\n    return (output || []).map(function (entry) { return deserializeAws_json1_1_Record(entry, context); });\n};\nvar deserializeAws_json1_1RegisterStreamConsumerOutput = function (output, context) {\n    return {\n        __type: \"RegisterStreamConsumerOutput\",\n        Consumer: output.Consumer !== undefined && output.Consumer !== null\n            ? deserializeAws_json1_1Consumer(output.Consumer, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1ResourceInUseException = function (output, context) {\n    return {\n        __type: \"ResourceInUseException\",\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1ResourceNotFoundException = function (output, context) {\n    return {\n        __type: \"ResourceNotFoundException\",\n        message: output.message !== undefined && output.message !== null ? output.message : undefined,\n    };\n};\nvar deserializeAws_json1_1SequenceNumberRange = function (output, context) {\n    return {\n        __type: \"SequenceNumberRange\",\n        EndingSequenceNumber: output.EndingSequenceNumber !== undefined && output.EndingSequenceNumber !== null\n            ? output.EndingSequenceNumber\n            : undefined,\n        StartingSequenceNumber: output.StartingSequenceNumber !== undefined && output.StartingSequenceNumber !== null\n            ? output.StartingSequenceNumber\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1Shard = function (output, context) {\n    return {\n        __type: \"Shard\",\n        AdjacentParentShardId: output.AdjacentParentShardId !== undefined && output.AdjacentParentShardId !== null\n            ? output.AdjacentParentShardId\n            : undefined,\n        HashKeyRange: output.HashKeyRange !== undefined && output.HashKeyRange !== null\n            ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context)\n            : undefined,\n        ParentShardId: output.ParentShardId !== undefined && output.ParentShardId !== null ? output.ParentShardId : undefined,\n        SequenceNumberRange: output.SequenceNumberRange !== undefined && output.SequenceNumberRange !== null\n            ? deserializeAws_json1_1SequenceNumberRange(output.SequenceNumberRange, context)\n            : undefined,\n        ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n    };\n};\nvar deserializeAws_json1_1ShardList = function (output, context) {\n    return (output || []).map(function (entry) { return deserializeAws_json1_1Shard(entry, context); });\n};\nvar deserializeAws_json1_1StreamDescription = function (output, context) {\n    return {\n        __type: \"StreamDescription\",\n        EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n        EnhancedMonitoring: output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null\n            ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context)\n            : undefined,\n        HasMoreShards: output.HasMoreShards !== undefined && output.HasMoreShards !== null ? output.HasMoreShards : undefined,\n        KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n        RetentionPeriodHours: output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null\n            ? output.RetentionPeriodHours\n            : undefined,\n        Shards: output.Shards !== undefined && output.Shards !== null\n            ? deserializeAws_json1_1ShardList(output.Shards, context)\n            : undefined,\n        StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n        StreamCreationTimestamp: output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null\n            ? new Date(Math.round(output.StreamCreationTimestamp * 1000))\n            : undefined,\n        StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n        StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined,\n    };\n};\nvar deserializeAws_json1_1StreamDescriptionSummary = function (output, context) {\n    return {\n        __type: \"StreamDescriptionSummary\",\n        ConsumerCount: output.ConsumerCount !== undefined && output.ConsumerCount !== null ? output.ConsumerCount : undefined,\n        EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n        EnhancedMonitoring: output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null\n            ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context)\n            : undefined,\n        KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n        OpenShardCount: output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n        RetentionPeriodHours: output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null\n            ? output.RetentionPeriodHours\n            : undefined,\n        StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n        StreamCreationTimestamp: output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null\n            ? new Date(Math.round(output.StreamCreationTimestamp * 1000))\n            : undefined,\n        StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n        StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined,\n    };\n};\nvar deserializeAws_json1_1StreamNameList = function (output, context) {\n    return (output || []).map(function (entry) { return entry; });\n};\nvar deserializeAws_json1_1SubscribeToShardEvent = function (output, context) {\n    return {\n        __type: \"SubscribeToShardEvent\",\n        ContinuationSequenceNumber: output.ContinuationSequenceNumber !== undefined && output.ContinuationSequenceNumber !== null\n            ? output.ContinuationSequenceNumber\n            : undefined,\n        MillisBehindLatest: output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null\n            ? output.MillisBehindLatest\n            : undefined,\n        Records: output.Records !== undefined && output.Records !== null\n            ? deserializeAws_json1_1RecordList(output.Records, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1SubscribeToShardEventStream = function (output, context) {\n    if (output.InternalFailureException !== undefined && output.InternalFailureException !== null) {\n        return {\n            InternalFailureException: deserializeAws_json1_1InternalFailureException(output.InternalFailureException, context),\n        };\n    }\n    if (output.KMSAccessDeniedException !== undefined && output.KMSAccessDeniedException !== null) {\n        return {\n            KMSAccessDeniedException: deserializeAws_json1_1KMSAccessDeniedException(output.KMSAccessDeniedException, context),\n        };\n    }\n    if (output.KMSDisabledException !== undefined && output.KMSDisabledException !== null) {\n        return {\n            KMSDisabledException: deserializeAws_json1_1KMSDisabledException(output.KMSDisabledException, context),\n        };\n    }\n    if (output.KMSInvalidStateException !== undefined && output.KMSInvalidStateException !== null) {\n        return {\n            KMSInvalidStateException: deserializeAws_json1_1KMSInvalidStateException(output.KMSInvalidStateException, context),\n        };\n    }\n    if (output.KMSNotFoundException !== undefined && output.KMSNotFoundException !== null) {\n        return {\n            KMSNotFoundException: deserializeAws_json1_1KMSNotFoundException(output.KMSNotFoundException, context),\n        };\n    }\n    if (output.KMSOptInRequired !== undefined && output.KMSOptInRequired !== null) {\n        return {\n            KMSOptInRequired: deserializeAws_json1_1KMSOptInRequired(output.KMSOptInRequired, context),\n        };\n    }\n    if (output.KMSThrottlingException !== undefined && output.KMSThrottlingException !== null) {\n        return {\n            KMSThrottlingException: deserializeAws_json1_1KMSThrottlingException(output.KMSThrottlingException, context),\n        };\n    }\n    if (output.ResourceInUseException !== undefined && output.ResourceInUseException !== null) {\n        return {\n            ResourceInUseException: deserializeAws_json1_1ResourceInUseException(output.ResourceInUseException, context),\n        };\n    }\n    if (output.ResourceNotFoundException !== undefined && output.ResourceNotFoundException !== null) {\n        return {\n            ResourceNotFoundException: deserializeAws_json1_1ResourceNotFoundException(output.ResourceNotFoundException, context),\n        };\n    }\n    if (output.SubscribeToShardEvent !== undefined && output.SubscribeToShardEvent !== null) {\n        return {\n            SubscribeToShardEvent: deserializeAws_json1_1SubscribeToShardEvent(output.SubscribeToShardEvent, context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nvar deserializeAws_json1_1SubscribeToShardOutput = function (output, context) {\n    return {\n        __type: \"SubscribeToShardOutput\",\n        EventStream: output.EventStream !== undefined && output.EventStream !== null\n            ? deserializeAws_json1_1SubscribeToShardEventStream(output.EventStream, context)\n            : undefined,\n    };\n};\nvar deserializeAws_json1_1Tag = function (output, context) {\n    return {\n        __type: \"Tag\",\n        Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n        Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined,\n    };\n};\nvar deserializeAws_json1_1TagList = function (output, context) {\n    return (output || []).map(function (entry) { return deserializeAws_json1_1Tag(entry, context); });\n};\nvar deserializeAws_json1_1UpdateShardCountOutput = function (output, context) {\n    return {\n        __type: \"UpdateShardCountOutput\",\n        CurrentShardCount: output.CurrentShardCount !== undefined && output.CurrentShardCount !== null\n            ? output.CurrentShardCount\n            : undefined,\n        StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n        TargetShardCount: output.TargetShardCount !== undefined && output.TargetShardCount !== null ? output.TargetShardCount : undefined,\n    };\n};\nvar deserializeMetadata = function (output) { return ({\n    httpStatusCode: output.statusCode,\n    httpHeaders: output.headers,\n    requestId: output.headers[\"x-amzn-requestid\"],\n}); };\n// Collect low-level response body stream to Uint8Array.\nvar collectBody = function (streamBody, context) {\n    if (streamBody === void 0) { streamBody = new Uint8Array(); }\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nvar collectBodyString = function (streamBody, context) {\n    return collectBody(streamBody, context).then(function (body) { return context.utf8Encoder(body); });\n};\nvar buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, contents;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0: return [4 /*yield*/, context.endpoint()];\n            case 1:\n                _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n                contents = {\n                    protocol: protocol,\n                    hostname: hostname,\n                    port: port,\n                    method: \"POST\",\n                    path: path,\n                    headers: headers,\n                };\n                if (resolvedHostname !== undefined) {\n                    contents.hostname = resolvedHostname;\n                }\n                if (body !== undefined) {\n                    contents.body = body;\n                }\n                return [2 /*return*/, new __HttpRequest(contents)];\n        }\n    });\n}); };\nvar parseBody = function (streamBody, context) {\n    return collectBodyString(streamBody, context).then(function (encoded) {\n        if (encoded.length) {\n            return JSON.parse(encoded);\n        }\n        return {};\n    });\n};\n//# sourceMappingURL=Aws_json1_1.js.map"]},"metadata":{},"sourceType":"module"}